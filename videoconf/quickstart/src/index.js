'use strict';

const { isMobile } = require('./browser');
const joinRoom = require('./joinroom');
const micLevel = require('./miclevel');
const selectMedia = require('./selectmedia');
const selectRoom = require('./selectroom');
const Chat = require("twilio-chat");

const $modals = $('#modals');
const $selectMicModal = $('#select-mic', $modals);
const $selectCameraModal = $('#select-camera', $modals);
const $showErrorModal = $('#show-error', $modals);
const $joinRoomModal = $('#join-room', $modals);

// ConnectOptions settings for a video web application.
const connectOptions = {
  // Available only in Small Group or Group Rooms only. Please set "Room Type"
  // to "Group" or "Small Group" in your Twilio Console:
  // https://www.twilio.com/console/video/configure
  bandwidthProfile: {
    video: {
      dominantSpeakerPriority: 'high',
      mode: 'collaboration',
      renderDimensions: {
        high: { height: 720, width: 1280 },
        standard: { height: 90, width: 160 }
      }
    }
  },

  // Available only in Small Group or Group Rooms only. Please set "Room Type"
  // to "Group" or "Small Group" in your Twilio Console:
  // https://www.twilio.com/console/video/configure
  dominantSpeaker: true,

  // Comment this line to disable verbose logging.
  logLevel: 'debug',

  // Comment this line if you are playing music.
  maxAudioBitrate: 16000,

  // VP8 simulcast enables the media server in a Small Group or Group Room
  // to adapt your encoded video quality for each RemoteParticipant based on
  // their individual bandwidth constraints. This has no utility if you are
  // using Peer-to-Peer Rooms, so you can comment this line.
  preferredVideoCodecs: [{ codec: 'VP8', simulcast: true }],

  // For desktop browsers, capture 720p video @ 24 fps.
  video: { height: 720, frameRate: 24, width: 1280 }
};

// For mobile browsers, limit the maximum incoming video bitrate to 2.5 Mbps.
if (isMobile) {
  connectOptions
    .bandwidthProfile
    .video
    .maxSubscriptionBitrate = 2500000;
}

// On mobile browsers, there is the possibility of not getting any media even
// after the user has given permission, most likely due to some other app reserving
// the media device. So, we make sure users always test their media devices before
// joining the Room. For more best practices, please refer to the following guide:
// https://www.twilio.com/docs/video/build-js-video-application-recommendations-and-best-practices
const deviceIds = {
  audio: isMobile ? null : localStorage.getItem('audioDeviceId'),
  video: isMobile ? null : localStorage.getItem('videoDeviceId')
};

/**
 * Select your Room name, your screen name and join.
 * @param [error=null] - Error from the previous Room session, if any
 */
async function selectAndJoinRoom(error = null) {
  console.log(chat);
  const formData = await selectRoom($joinRoomModal, error);
  if (!formData) {
    // User wants to change the camera and microphone.
    // So, show them the microphone selection modal.
    deviceIds.audio = null;
    deviceIds.video = null;
    return selectMicrophone();
  }
  const { identity, roomName } = formData;

  try {
    // Fetch an AccessToken to join the Room.
    const response = await fetch(`/token?identity=${identity}`);

    // Extract the AccessToken from the Response.
    const token = await response.text();

    // Add the specified audio device ID to ConnectOptions.
    connectOptions.audio = { deviceId: { exact: deviceIds.audio } };

    // Add the specified Room name to ConnectOptions.
    connectOptions.name = roomName;

    // Add the specified video device ID to ConnectOptions.
    connectOptions.video.deviceId = { exact: deviceIds.video };

    // Join the Room.
    await joinRoom(token, connectOptions);

    // After the video session, display the room selection modal.
    return selectAndJoinRoom();
  } catch (error) {
    console.log("Erro");
    return;//selectAndJoinRoom(error);
  }
}

/**
 * Select your camera.
 */
async function selectCamera() {
  if (deviceIds.video === null) {
    try {
      deviceIds.video = await selectMedia('video', $selectCameraModal, stream => {
        const $video = $('video', $selectCameraModal);
        $video.get(0).srcObject = stream;
      });
    } catch (error) {
      console.log("Erro");
      //showError($showErrorModal, error);
      return;
    }
  }
  return selectAndJoinRoom();
}

/**
 * Select your microphone.
 */
async function selectMicrophone() {

  if (deviceIds.audio === null) {
    try {
      deviceIds.audio = await selectMedia('audio', $selectMicModal, stream => {
        const $levelIndicator = $('svg rect', $selectMicModal);
        const maxLevel = Number($levelIndicator.attr('height'));
        micLevel(stream, maxLevel, level => $levelIndicator.attr('y', maxLevel - level));
      });
    } catch (error) {
      console.log("Erro");
      //showError($showErrorModal, error);
      return;
    }
  }
  return selectCamera();
}


function getIcon() {

  const random = Math.floor(Math.random() * 3);

  if (random == 0) {

    return `<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
              
              <path d="M17.6981 10.0642C17.5922 10.1226 17.4772 10.1634 17.3582 10.1843C17.4777 10.1628 17.5922 10.1226 17.6981 10.0642Z" fill="#F9F5F2"/>
              <path d="M14.7334 28.9H19.2667C20.5167 28.896 21.5294 27.8834 21.5334 26.6334V23.8H12.4667V26.6334C12.4707 27.8834 13.4834 28.896 14.7334 28.9Z" fill="#F9F5F2"/>
              <path d="M31.3706 29.0813C30.9167 26.9932 29.0705 25.5029 26.9336 25.5H21.5334V26.6333C21.5294 27.8833 20.5167 28.896 19.2667 28.8999H14.7334C13.4834 28.896 12.4707 27.8833 12.4667 26.6333V25.5H7.0665C4.92961 25.5029 3.08344 26.9932 2.62955 29.0813L1.70026 33.4333H32.2998L31.3706 29.0813Z" fill="#FDCA6E"/>
              <path d="M10.2002 14.1669V11.3336C10.2002 10.7074 10.7073 10.2003 11.3335 10.2003H17.1701C17.233 10.2003 17.2959 10.1946 17.3576 10.1844C17.4766 10.1634 17.5916 10.1226 17.6976 10.0643C17.9679 9.91187 18.1691 9.66079 18.2586 9.36329C18.6564 8.07586 19.9053 7.24684 21.246 7.37999C22.7233 7.5636 23.8249 8.83117 23.8 10.3198V14.1669C25.0517 14.1669 26.0666 15.1818 26.0666 16.4335V9.88803C26.0666 5.00456 22.3119 0.804482 17.4341 0.577239C12.4328 0.337511 8.18395 4.19765 7.94429 9.19893C7.93752 9.34403 7.93353 9.48846 7.93353 9.63356V16.4335C7.93353 15.1818 8.94842 14.1669 10.2002 14.1669Z" fill="#A05D35"/>
              <path d="M21.2466 7.38062C22.7245 7.56536 23.8249 8.83412 23.8 10.3233V10.3199C23.8249 8.83186 22.7239 7.56423 21.2466 7.38062Z" fill="#F9F5F2"/>
              <path d="M7.93353 16.4336C7.93353 17.6854 8.94842 18.7003 10.2002 18.7003V14.167C8.94842 14.1671 7.93353 15.1819 7.93353 16.4336Z" fill="#F9F5F2"/>
              <path d="M23.8 14.167V18.7003C25.0518 18.7003 26.0666 17.6854 26.0666 16.4336C26.0666 15.1819 25.0523 14.167 23.8 14.167Z" fill="#F9F5F2"/>
              <path d="M21.2466 7.38069C19.9059 7.24754 18.657 8.07656 18.2592 9.36399C18.1697 9.66149 17.9685 9.9125 17.6982 10.065C17.5922 10.1233 17.4772 10.1641 17.3582 10.1851C17.2959 10.1953 17.233 10.2004 17.1701 10.2004H11.3335C10.7073 10.2004 10.2002 10.7075 10.2002 11.3337V21.5335C10.2002 22.7853 11.2151 23.8002 12.4668 23.8002H21.5334C22.7852 23.8002 23.8 22.7853 23.8 21.5335V10.3234C23.8255 8.83419 22.7245 7.56543 21.2466 7.38069Z" fill="#F9F5F2"/>
              <path d="M31.9247 28.9607C31.4051 26.6182 29.3334 24.9465 26.9336 24.9335H22.1V24.3102C23.4186 24.0399 24.3655 22.8799 24.3667 21.5335V19.2102C25.6847 18.9393 26.6316 17.7794 26.6333 16.4336V9.88806C26.712 4.67083 22.6689 0.317223 17.4602 0.0112219C12.1461 -0.243181 7.63202 3.85881 7.37815 9.173C7.37077 9.32653 7.36679 9.48013 7.36679 9.63366V16.4336C7.36852 17.7793 8.31541 18.9393 9.63344 19.2102V21.5335C9.63517 22.8793 10.5821 24.0393 11.9001 24.3102V24.9335H7.0665C4.6661 24.9465 2.59389 26.6193 2.07539 28.9631L1.14609 33.315C1.08095 33.621 1.27585 33.9219 1.58185 33.9876C1.62097 33.9956 1.66061 34.0001 1.70026 34.0001H32.2998C32.6126 34.0001 32.8665 33.7463 32.8665 33.4335C32.8665 33.3938 32.8625 33.3541 32.854 33.3151L31.9247 28.9607ZM13.0334 24.3668H20.9666V26.6335C20.9666 27.5724 20.2056 28.3335 19.2666 28.3335H14.7333C13.7944 28.3335 13.0333 27.5724 13.0333 26.6335V24.3668H13.0334ZM24.3666 18.0367V14.8379C24.3847 14.8446 24.4034 14.8481 24.4232 14.8549C24.4544 14.8674 24.485 14.8821 24.5156 14.8962C24.5785 14.9257 24.6391 14.9586 24.6981 14.9954C24.7258 15.0124 24.7547 15.0294 24.7802 15.0481C24.8471 15.0957 24.9106 15.1479 24.9701 15.2045C24.9826 15.2164 24.9967 15.2266 25.0086 15.2385C25.0777 15.3088 25.1412 15.3841 25.1973 15.4651C25.2126 15.4878 25.2257 15.5128 25.2404 15.536C25.2789 15.5978 25.3141 15.6618 25.3447 15.7275C25.3588 15.7587 25.3719 15.7904 25.3838 15.8227C25.4099 15.889 25.4308 15.9576 25.4473 16.0267C25.4552 16.0579 25.4643 16.088 25.4699 16.1196C25.4903 16.2228 25.4999 16.3282 25.4999 16.4336C25.4993 17.1538 25.0455 17.7953 24.3666 18.0367ZM8.50015 9.63366C8.50015 4.93945 12.3052 1.13376 17 1.13376C17.136 1.13376 17.2721 1.13714 17.4075 1.14339C22.0104 1.42329 25.577 5.27719 25.4999 9.88806V14.1669C25.4727 14.147 25.4432 14.13 25.4155 14.1103C25.3877 14.0905 25.3673 14.0774 25.3424 14.061C25.2092 13.9737 25.0692 13.8978 24.923 13.8343C24.902 13.8252 24.8799 13.8179 24.8579 13.8094C24.702 13.7448 24.5411 13.6944 24.3762 13.6593L24.3666 13.657V10.3194C24.3853 8.54127 23.0656 7.03338 21.3009 6.81576C19.6939 6.66223 18.1996 7.65501 17.718 9.19571C17.6506 9.44559 17.429 9.62356 17.17 9.63373H11.3334C10.3945 9.63373 9.63338 10.3947 9.63338 11.3337V13.657H9.62547C9.46059 13.6922 9.29962 13.7426 9.14383 13.8072C9.12172 13.8157 9.0996 13.823 9.07868 13.8321C8.93246 13.8956 8.79254 13.9715 8.65933 14.0587C8.63442 14.0751 8.61005 14.091 8.58621 14.108C8.56244 14.125 8.52957 14.1443 8.50181 14.1646L8.50015 9.63366ZM8.50015 16.4336C8.50075 16.3287 8.5115 16.2239 8.53189 16.1213C8.53754 16.0896 8.54663 16.0595 8.55454 16.0284C8.57154 15.9587 8.59252 15.8907 8.61802 15.8239C8.63051 15.7921 8.64292 15.7604 8.65713 15.7298C8.68775 15.6635 8.72228 15.5994 8.76139 15.5377C8.77614 15.5144 8.78915 15.4895 8.80449 15.4668C8.8606 15.3858 8.92409 15.3104 8.99322 15.2402C9.00511 15.2283 9.01932 15.218 9.03173 15.2062C9.09123 15.1495 9.15472 15.0974 9.22159 15.0498C9.24822 15.031 9.27823 15.014 9.30373 14.997C9.36264 14.9602 9.42333 14.9273 9.48622 14.8979C9.51683 14.8838 9.54745 14.869 9.57859 14.8565C9.59619 14.8498 9.61545 14.8463 9.63524 14.8395V18.0383C8.95576 17.7975 8.50068 17.1549 8.50015 16.4336ZM10.7668 21.5335V11.3337C10.7668 11.0209 11.0207 10.767 11.3334 10.767H17.17C17.9271 10.7596 18.5907 10.2576 18.8026 9.53059C19.125 8.50322 20.1223 7.84141 21.1945 7.94394C22.3811 8.10259 23.2594 9.12711 23.2344 10.3239V21.5336C23.2344 22.4726 22.4734 23.2336 21.5344 23.2336H12.4667C11.5284 23.2335 10.7668 22.4725 10.7668 21.5335ZM27.1132 32.8667L26.6253 29.9399L25.5079 30.1269L25.9647 32.8667H8.03557L8.49231 30.1269L7.37489 29.9399L6.887 32.8667H2.40065L3.18318 29.2015C3.5872 27.378 5.19882 26.077 7.0665 26.0667H11.9001V26.6334C11.9018 28.1974 13.1694 29.465 14.7334 29.4667H19.2667C20.8307 29.465 22.0983 28.1974 22.1 26.6334V26.0667H26.9336C28.8008 26.077 30.4123 27.3774 30.8169 29.1998L31.5995 32.8666H27.1132V32.8667Z" fill="#231F20"/>
              <path d="M20.4 15.8662C21.0259 15.8662 21.5333 15.3588 21.5333 14.7329C21.5333 14.107 21.0259 13.5996 20.4 13.5996C19.7741 13.5996 19.2667 14.107 19.2667 14.7329C19.2667 15.3588 19.7741 15.8662 20.4 15.8662Z" fill="#231F20"/>
              <path d="M13.6001 15.8662C14.226 15.8662 14.7334 15.3588 14.7334 14.7329C14.7334 14.107 14.226 13.5996 13.6001 13.5996C12.9742 13.5996 12.4668 14.107 12.4668 14.7329C12.4668 15.3588 12.9742 15.8662 13.6001 15.8662Z" fill="#231F20"/>

            </svg>`
  } else if (random == 1) {
    return `<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                
                <path d="M17.6981 10.0642C17.5922 10.1226 17.4772 10.1634 17.3582 10.1843C17.4777 10.1628 17.5922 10.1226 17.6981 10.0642Z" fill="#F9F5F2"/>
                <path d="M14.7334 28.9H19.2667C20.5167 28.896 21.5294 27.8834 21.5334 26.6334V23.8H12.4667V26.6334C12.4707 27.8834 13.4834 28.896 14.7334 28.9Z" fill="#F9F5F2"/>
                <path d="M31.3706 29.0813C30.9167 26.9932 29.0705 25.5029 26.9336 25.5H21.5334V26.6333C21.5294 27.8833 20.5167 28.896 19.2667 28.8999H14.7334C13.4834 28.896 12.4707 27.8833 12.4667 26.6333V25.5H7.0665C4.92961 25.5029 3.08344 26.9932 2.62955 29.0813L1.70026 33.4333H32.2998L31.3706 29.0813Z" fill="#FDCA6E"/>
                <path d="M10.2002 14.1669V11.3336C10.2002 10.7074 10.7073 10.2003 11.3335 10.2003H17.1701C17.233 10.2003 17.2959 10.1946 17.3576 10.1844C17.4766 10.1634 17.5916 10.1226 17.6976 10.0643C17.9679 9.91187 18.1691 9.66079 18.2586 9.36329C18.6564 8.07586 19.9053 7.24684 21.246 7.37999C22.7233 7.5636 23.8249 8.83117 23.8 10.3198V14.1669C25.0517 14.1669 26.0666 15.1818 26.0666 16.4335V9.88803C26.0666 5.00456 22.3119 0.804482 17.4341 0.577239C12.4328 0.337511 8.18395 4.19765 7.94429 9.19893C7.93752 9.34403 7.93353 9.48846 7.93353 9.63356V16.4335C7.93353 15.1818 8.94842 14.1669 10.2002 14.1669Z" fill="#A05D35"/>
                
                <path d="M12.4686 22.8042V25.6363C12.4726 26.8859 13.4848 27.8981 14.7343 27.9021H19.2657C20.5153 27.8981 21.5275 26.8859 21.5315 25.6363V22.8042H12.4686Z" fill="#F9F5F2"/>
                <path d="M31.3647 28.0835C30.911 25.9962 29.0655 24.5065 26.9295 24.5037H21.5315V25.6365C21.5275 26.8861 20.5153 27.8983 19.2658 27.9023H14.7343C13.4848 27.8983 12.4726 26.8861 12.4686 25.6365V24.5037H7.07056C4.93454 24.5065 3.08912 25.9962 2.63544 28.0835L1.70648 32.4337H32.2936L31.3647 28.0835Z" fill="#F08AB7"/>
                <path d="M12.4687 22.8043C11.2174 22.8043 10.203 21.7899 10.203 20.5386V12.6086H17.5665C19.9965 12.6104 22.2424 11.3143 23.4574 9.21004H23.7973V20.5386C23.7973 21.7899 22.7828 22.8043 21.5316 22.8043V24.5036H26.063V8.64367C26.063 8.45109 26.0573 8.26415 26.046 8.07722C25.7146 3.08303 21.3978 -0.697865 16.4036 -0.366499C11.8705 -0.0662774 8.26006 3.54415 7.9599 8.07722C7.9429 8.26415 7.93726 8.45109 7.93726 8.64367V24.5037H12.4687V22.8043Z" fill="#FDCA6E"/>
                <path d="M7.93713 8.07715V8.64359C7.93713 8.45101 7.94278 8.26408 7.95978 8.07715H7.93713Z" fill="#F9F5F2"/>
                <path d="M26.0628 8.07715H26.0458C26.0572 8.26408 26.0628 8.45101 26.0628 8.64359V8.07715Z" fill="#F9F5F2"/>
                <path d="M23.4573 9.21021C22.2424 11.3145 19.9964 12.6105 17.5664 12.6088H10.2029V20.5388C10.2029 21.79 11.2174 22.8045 12.4687 22.8045H21.5315C22.7827 22.8045 23.7972 21.79 23.7972 20.5388V9.21021H23.4573Z" fill="#F9F5F2"/>
                <path d="M31.9186 27.9628C31.3992 25.6211 29.3283 23.9502 26.9295 23.9372H26.6293V8.07715C26.6259 8.03352 26.6168 7.99102 26.6021 7.94971C26.2305 2.64852 21.6317 -1.34765 16.3305 -0.976047C11.5725 -0.642423 7.77743 3.12605 7.40988 7.88178C7.38497 7.94407 7.37136 8.01034 7.37023 8.07721V23.9372H7.07001C4.67063 23.9502 2.59976 25.6223 2.08146 27.9651L1.15251 32.3152C1.08736 32.6211 1.2822 32.9218 1.58806 32.9876C1.62718 32.9961 1.66682 33 1.70646 33H32.2936C32.6062 33 32.86 32.7463 32.86 32.4336C32.86 32.394 32.8561 32.3543 32.8476 32.3152L31.9186 27.9628ZM8.50358 8.64359C8.50358 8.46854 8.5087 8.29921 8.5251 8.11115C8.63387 6.22608 9.37417 4.43219 10.6277 3.02007C13.7312 -0.499717 19.1003 -0.836727 22.6196 2.26676C24.3109 3.75817 25.3402 5.86131 25.4806 8.11175C25.4914 8.28732 25.4965 8.4629 25.4965 8.64306V23.9372H22.0979V23.3141C22.1081 23.3141 22.1171 23.3074 22.1274 23.3051C22.2888 23.27 22.4463 23.2213 22.5992 23.1584C22.6558 23.1363 22.7034 23.1063 22.7561 23.0808C22.8592 23.032 22.9594 22.9777 23.0563 22.9171C23.113 22.8808 23.1645 22.8395 23.2178 22.7998C23.3022 22.7375 23.3832 22.6707 23.4607 22.5993C23.5111 22.5517 23.5582 22.5024 23.6052 22.4515C23.6754 22.3756 23.7411 22.2957 23.8023 22.2124C23.8436 22.1557 23.8833 22.0991 23.9207 22.0425C23.9767 21.9507 24.0272 21.8561 24.0731 21.7592C24.102 21.6992 24.1297 21.6408 24.1575 21.5785C24.1994 21.4675 24.2345 21.3542 24.2623 21.2387C24.277 21.182 24.2963 21.1288 24.3075 21.0716C24.3432 20.896 24.3619 20.7176 24.3636 20.5386V9.21003C24.3636 8.8974 24.1099 8.64359 23.7971 8.64359H23.4573C23.2551 8.64359 23.0681 8.75177 22.9673 8.92681C21.8498 10.8521 19.7931 12.0388 17.5665 12.0422H10.2029C9.89027 12.0422 9.63647 12.2959 9.63647 12.6086V20.5386C9.6382 20.7193 9.65686 20.8994 9.69311 21.0767C9.70447 21.1334 9.72373 21.19 9.7384 21.2438C9.76616 21.3593 9.80129 21.4726 9.84319 21.5837C9.86809 21.6459 9.89983 21.7043 9.92812 21.7649C9.97341 21.8612 10.0239 21.9541 10.0799 22.0448C10.1173 22.1014 10.157 22.1581 10.1983 22.2147C10.2595 22.298 10.3252 22.3779 10.3954 22.4538C10.4424 22.5048 10.4895 22.5541 10.5399 22.6016C10.6169 22.6724 10.6979 22.7393 10.7823 22.8021C10.8389 22.8418 10.8877 22.8832 10.9443 22.9194C11.0412 22.98 11.1414 23.0344 11.2446 23.0831C11.2972 23.1086 11.3471 23.1398 11.4015 23.1607C11.5544 23.2236 11.7119 23.2723 11.8733 23.3074C11.8835 23.3074 11.8925 23.3142 11.9028 23.3165V23.9373H8.50365L8.50358 8.64359ZM13.6014 14.8743C14.2273 14.8743 14.7343 14.3673 14.7343 13.7414C14.7332 13.542 14.6788 13.3466 14.5769 13.1749H17.5665C18.2966 13.1721 19.0222 13.0599 19.7189 12.8424C19.2261 13.222 19.1338 13.9294 19.5138 14.4222C19.8933 14.915 20.6008 15.0073 21.0936 14.6273C21.5864 14.2478 21.6787 13.5403 21.2987 13.0475C21.084 12.7683 20.7504 12.6057 20.3986 12.6085C20.3833 12.6085 20.3691 12.6125 20.3539 12.613C21.4692 12.1599 22.4565 11.4411 23.2308 10.5195V20.5385C23.2308 21.4771 22.47 22.2378 21.5315 22.2378H12.4686C11.53 22.2378 10.7694 21.4771 10.7694 20.5385V13.175H12.6261C12.5242 13.3467 12.4698 13.542 12.4687 13.7414C12.4686 14.3668 12.9756 14.8743 13.6014 14.8743ZM13.035 23.3707H20.965V25.6364C20.965 26.575 20.2043 27.3357 19.2657 27.3357H14.7343C13.7957 27.3357 13.0351 26.575 13.0351 25.6364V23.3707H13.035ZM27.1091 31.8672L26.6214 28.9421L25.5044 29.1279L25.9609 31.8672H8.03914L8.49568 29.1279L7.37866 28.9421L6.89098 31.8672H2.40658L3.18885 28.2041C3.59213 26.3813 5.2036 25.0802 7.07061 25.07H11.9022V25.6365C11.904 27.1998 13.1711 28.4669 14.7344 28.4686H19.2658C20.8291 28.4669 22.0962 27.1998 22.098 25.6365V25.07H26.9296C28.796 25.0803 30.4069 26.3802 30.8113 28.2018L31.5936 31.8672H27.1091Z" fill="#231F20"/>


              </svg>`
  } else if (random == 2) {
    return `<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
              
              <path d="M14.5715 28.2321H19.4286C20.768 28.2278 21.8529 27.1429 21.8572 25.8035V22.7678H12.1429V25.8035C12.1472 27.1434 13.2321 28.2284 14.5715 28.2321Z" fill="#F9F5F2"/>
              <path d="M32.3972 28.4265C31.9109 26.1892 29.9328 24.5924 27.6432 24.5894H21.8572V25.8037C21.8529 27.143 20.768 28.2279 19.4287 28.2322H14.5715C13.2322 28.2279 12.1472 27.143 12.143 25.8037V24.5894H6.35688C4.06733 24.5924 2.08929 26.1891 1.60293 28.4265L0.607239 33.0893H33.3929L32.3972 28.4265Z" fill="#24537E"/>
              <path d="M8.20256 12.9747C7.15282 13.8102 6.97916 15.3377 7.81462 16.3875C8.27541 16.9661 8.97487 17.3037 9.71437 17.3037V12.4465C9.16552 12.4477 8.63307 12.6341 8.20256 12.9747Z" fill="#F9F5F2"/>
              <path d="M26.7143 14.8751C26.7143 13.5339 25.6269 12.4465 24.2858 12.4465V17.3037C25.6269 17.3036 26.7143 16.2162 26.7143 14.8751Z" fill="#F9F5F2"/>
              <path d="M12.1429 5.76803C12.1399 6.62168 12.3664 7.46013 12.7986 8.19657C13.2163 8.93853 13.8296 9.55172 14.5715 9.96941C15.3079 10.4017 16.1464 10.6282 17 10.6251H20.6428C24.6633 10.6288 27.9249 7.37207 27.9285 3.35158C27.9285 3.34733 27.9285 3.34368 27.9285 3.33943V0.910889H17C14.3176 0.910889 12.1429 3.08569 12.1429 5.76803Z" fill="#A05D35"/>
              <path d="M9.71433 8.19662H12.7986C12.3663 7.46018 12.1399 6.62167 12.1429 5.76809C12.1411 4.37349 12.741 3.04563 13.7883 2.12524H11.5358C9.52375 2.12524 7.89294 3.75605 7.89294 5.76809V12.4466C7.89414 12.6652 8.01254 12.8668 8.2026 12.9748C8.63304 12.6342 9.16555 12.4478 9.7144 12.4466V8.19662H9.71433Z" fill="#A05D35"/>
              <path d="M24.2858 9.65368V12.4465H25.5001C25.8352 12.4465 26.1072 12.1745 26.1072 11.8394V8.19653H26.0769C25.5614 8.77453 24.9567 9.26634 24.2858 9.65368Z" fill="#A05D35"/>
              <path d="M20.6429 10.6251H17.0001C16.1464 10.6281 15.308 10.4016 14.5716 9.96938C13.8296 9.55168 13.2164 8.93842 12.7987 8.19653H9.71442V20.3394C9.71442 21.6806 10.8018 22.7679 12.143 22.7679H21.8572C23.1984 22.7679 24.2858 21.6805 24.2858 20.3394V9.65362C23.1789 10.2936 21.9215 10.6287 20.6429 10.6251Z" fill="#F9F5F2"/>
              <path d="M32.991 28.2972C32.4342 25.7873 30.2145 23.9962 27.6433 23.9823H22.4643V23.3144C23.8765 23.0242 24.8911 21.7814 24.8929 20.3394V17.8501C26.5316 17.5198 27.5922 15.9237 27.2619 14.2856C27.1381 13.6718 26.8272 13.1114 26.3719 12.6815C26.5917 12.4563 26.7143 12.1539 26.7143 11.8394V8.37511C27.8916 6.96106 28.5358 5.17912 28.5358 3.33947V0.910862C28.5358 0.57571 28.2638 0.303711 27.9286 0.303711H17.0001C15.7536 0.306168 14.5454 0.734753 13.5758 1.51801H11.5358C9.18977 1.52047 7.28823 3.42201 7.28577 5.768V12.4465C7.28942 12.6105 7.32581 12.772 7.39448 12.9213C6.31378 14.2 6.47402 16.1131 7.75267 17.1944C8.14188 17.5234 8.60752 17.7487 9.10722 17.8501V20.3394C9.10902 21.7813 10.1236 23.0242 11.5358 23.3144V23.9822H6.35688C3.78504 23.9962 1.56468 25.7885 1.0092 28.2996L0.0135039 32.9625C-0.0562889 33.2904 0.152558 33.6128 0.480405 33.6832C0.522308 33.6923 0.564808 33.6966 0.607307 33.6966H33.3929C33.7281 33.6966 34.0001 33.4246 34.0001 33.0894C34.0001 33.0469 33.9958 33.0044 33.9867 32.9625L32.991 28.2972ZM12.7501 23.3751H21.25V25.8037C21.25 26.8097 20.4346 27.6251 19.4286 27.6251H14.5715C13.5655 27.6251 12.7501 26.8097 12.7501 25.8037V23.3751ZM25.3592 9.66465C25.4053 9.63065 25.4545 9.6009 25.5 9.56511V11.8394H24.8929V9.99489C24.9263 9.97364 24.9536 9.94814 24.99 9.92629C25.1157 9.84315 25.2384 9.75509 25.3592 9.66465ZM24.893 16.5927V13.1575C25.8413 13.4921 26.3391 14.5327 26.0047 15.4811C25.8212 16.0008 25.4126 16.4094 24.893 16.5927ZM27.3215 1.51801V3.33947C27.3233 4.98242 26.718 6.56826 25.6215 7.79166C25.5 7.92521 25.3762 8.05337 25.2493 8.17596L25.2353 8.18811C23.9974 9.36655 22.3527 10.0223 20.6429 10.0181H17.0001C16.2496 10.0193 15.5132 9.81951 14.8666 9.43887C14.2194 9.07337 13.6845 8.53668 13.3214 7.88822C12.9449 7.24528 12.7476 6.51301 12.7501 5.76807C12.7501 3.42088 14.6529 1.51808 17.0001 1.51808H27.3215V1.51801ZM8.50007 5.768C8.50187 4.09231 9.86007 2.73411 11.5358 2.73232H12.4568C12.4362 2.76266 12.4222 2.79666 12.4022 2.82761C12.2977 2.9909 12.2018 3.15971 12.1156 3.33336C12.0938 3.37765 12.0683 3.42015 12.0476 3.46511C11.9481 3.68006 11.8624 3.90166 11.7914 4.12751C11.7744 4.18096 11.7623 4.23555 11.7471 4.28961C11.6961 4.47176 11.6542 4.6569 11.6221 4.8433C11.6105 4.9101 11.599 4.97624 11.5899 5.04365C11.5559 5.28344 11.5377 5.52569 11.5358 5.76794C11.537 5.98223 11.551 6.19599 11.5777 6.40849C11.5838 6.45949 11.5899 6.50989 11.5972 6.5603C11.6263 6.76489 11.667 6.9677 11.7186 7.16745C11.7265 7.1972 11.7374 7.22814 11.7453 7.2549C11.7775 7.3666 11.8091 7.47836 11.8479 7.587H9.71444C9.37929 7.587 9.10729 7.859 9.10729 8.19415V11.8977C9.06658 11.9056 9.0296 11.925 8.98949 11.9347C8.85408 11.9681 8.72114 12.01 8.59118 12.0616C8.56143 12.0738 8.53049 12.078 8.50014 12.0908V5.768H8.50007ZM7.89299 14.8751C7.89053 14.3214 8.14254 13.7974 8.57664 13.4532C8.65799 13.3894 8.74485 13.3317 8.83529 13.282C8.87049 13.2625 8.90754 13.2498 8.94333 13.2328C8.99799 13.2073 9.05138 13.18 9.10729 13.1599V16.5927C8.38048 16.3347 7.89418 15.6468 7.89299 14.8751ZM10.3215 20.3394V8.80369H12.4575C12.5 8.86804 12.5498 8.92874 12.5947 8.99129C12.6323 9.04289 12.6681 9.09449 12.7076 9.14489C12.8394 9.31668 12.9808 9.48004 13.1326 9.63423C13.4672 9.97118 13.8472 10.2596 14.2613 10.4921C15.0919 10.9791 16.0372 11.2347 17.0001 11.2322H20.643C20.9557 11.2304 21.2677 11.2104 21.578 11.1715C21.6697 11.1612 21.7601 11.1454 21.8506 11.1315C22.0776 11.0969 22.3022 11.0525 22.5251 10.998C22.615 10.9761 22.7073 10.956 22.7929 10.9311C23.0813 10.851 23.3654 10.7551 23.6429 10.6427C23.6514 10.6391 23.6605 10.6367 23.6684 10.6336L23.6786 10.63V20.3394C23.6786 21.3455 22.8633 22.1609 21.8572 22.1609H12.143C11.1369 22.1608 10.3215 21.3454 10.3215 20.3394ZM27.8357 32.4823L27.313 29.3464L26.1157 29.5467L26.605 32.4823H7.39507L7.88442 29.5467L6.68712 29.3464L6.16437 32.4823H1.3577L2.19614 28.5553C2.62904 26.6015 4.35573 25.2075 6.35688 25.1966H11.5358V25.8037C11.5376 27.4794 12.8958 28.8376 14.5715 28.8394H19.4287C21.1044 28.8376 22.4626 27.4794 22.4643 25.8037V25.1966H27.6433C29.6438 25.2075 31.3705 26.6009 31.804 28.5535L32.6425 32.4823H27.8357Z" fill="#231F20"/>
              <path d="M20.643 14.268C21.3136 14.268 21.8573 13.7243 21.8573 13.0537C21.8573 12.383 21.3136 11.8394 20.643 11.8394C19.9723 11.8394 19.4286 12.383 19.4286 13.0537C19.4286 13.7243 19.9723 14.268 20.643 14.268Z" fill="#231F20"/>
              <path d="M13.3572 14.268C14.0278 14.268 14.5715 13.7243 14.5715 13.0537C14.5715 12.383 14.0278 11.8394 13.3572 11.8394C12.6865 11.8394 12.1429 12.383 12.1429 13.0537C12.1429 13.7243 12.6865 14.268 13.3572 14.268Z" fill="#231F20"/>
              <path d="M23.0715 30.6609H19.4286V31.8752H23.0715V30.6609Z" fill="#231F20"/>
              <path d="M25.5001 30.6609H24.2858V31.8752H25.5001V30.6609Z" fill="#231F20"/>
              

            </svg>`

  } else {
    return `<svg width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
              
              <path d="M15.5834 13.601C18.6642 13.6509 21.6272 12.4196 23.7657 10.2012H23.7997V14.1677C23.8076 14.1677 23.8145 14.1677 23.8224 14.1677C25.562 12.7964 26.5938 10.7163 26.6329 8.50129C26.6329 7.50227 26.4125 6.5152 25.9869 5.61141C25.5789 4.73026 25.0077 3.93471 24.304 3.26553C22.3979 1.49706 19.8831 0.531511 17.2834 0.5683C14.478 0.5173 11.7813 1.65059 9.85476 3.69054C7.95082 3.15224 6.48894 2.37595 5.71258 1.47495C5.30804 2.44389 5.10005 3.48428 5.10065 4.53483C5.14487 7.16685 6.39657 9.63179 8.49482 11.2212C8.89937 12.1414 9.4785 12.9749 10.2004 13.6747V12.3147C11.8657 13.1687 13.7124 13.6101 15.5834 13.601Z" fill="#010101"/>
              <path d="M14.7334 28.9001H19.2666C20.5166 28.8961 21.5292 27.8836 21.5331 26.6335V23.8003H12.4669V26.6335C12.4708 27.8836 13.4834 28.8961 14.7334 28.9001Z" fill="#6D4A2F"/>
              <path d="M7.93378 16.435C7.93378 17.6867 8.9486 18.7016 10.2004 18.7016V14.1685C8.9486 14.1684 7.93378 15.1833 7.93378 16.435Z" fill="#6D4A2F"/>
              <path d="M23.7997 18.7006C25.0514 18.7068 26.0713 17.6971 26.0776 16.4454C26.0838 15.1937 25.074 14.1737 23.8223 14.1675C23.8144 14.1737 23.8076 14.1816 23.7997 14.1879V18.7006Z" fill="#6D4A2F"/>
              <path d="M23.7997 14.1901C23.8076 14.1838 23.8144 14.1759 23.8223 14.1697C23.8144 14.1697 23.8076 14.1697 23.7997 14.1697V14.1901Z" fill="#F9F5F2"/>
              <path d="M31.3701 29.0814C30.9162 26.9933 29.0701 25.5031 26.9332 25.5002H21.5331V26.6335C21.5291 27.8836 20.5166 28.8961 19.2665 28.9001H14.7334C13.4834 28.8961 12.4708 27.8836 12.4668 26.6335V25.5002H7.06673C4.92991 25.5031 3.0838 26.9933 2.62992 29.0814L1.70062 33.4332H32.2992L31.3701 29.0814Z" fill="#43ADDC"/>
              <path d="M23.7657 10.2012C21.6272 12.4195 18.6642 13.6509 15.5834 13.601C13.7118 13.6101 11.8657 13.1692 10.2003 12.3147V21.5339C10.2003 22.7856 11.2151 23.8005 12.4669 23.8005H21.5332C22.7849 23.8005 23.7998 22.7857 23.7998 21.5339V10.2012H23.7657Z" fill="#6D4A2F"/>
              <path d="M31.9236 28.9609C31.4046 26.6178 29.333 24.9462 26.9332 24.9338H22.0998V24.3105C23.4178 24.0396 24.3646 22.8797 24.3664 21.534V19.2108C25.8974 18.9008 26.8867 17.4083 26.5762 15.8772C26.3961 14.9876 25.7993 14.2385 24.9726 13.8634C26.3847 12.4343 27.1837 10.5106 27.1995 8.50126C27.2007 7.42069 26.9621 6.35314 26.502 5.37563C26.0657 4.42934 25.4532 3.57482 24.6973 2.8575C22.6828 0.991477 20.0292 -0.0307175 17.2833 0.00155602C14.4422 -0.0471864 11.7013 1.05098 9.67956 3.04782C8.0431 2.54692 6.7942 1.8624 6.14149 1.10483C6.01399 0.954688 5.81736 0.883301 5.62298 0.915575C5.42921 0.946188 5.26545 1.07482 5.18948 1.25558C4.75545 2.29424 4.53219 3.40881 4.53385 4.53473C4.58259 7.28801 5.86656 9.87361 8.03175 11.5752C8.39386 12.3589 8.87717 13.0808 9.46367 13.7143C7.95697 14.12 7.06454 15.6704 7.47021 17.1771C7.74846 18.21 8.58591 18.9971 9.63367 19.2108V21.534C9.6354 22.8798 10.5822 24.0397 11.9003 24.3105V24.9338H7.06679C4.66653 24.9463 2.59432 26.6195 2.07581 28.9632L1.14652 33.315C1.08138 33.621 1.27628 33.9219 1.58228 33.9877C1.62139 33.9962 1.66104 34.0002 1.70068 34.0002H32.2993C32.6121 34.0002 32.8659 33.7463 32.8659 33.4335C32.8659 33.3939 32.8619 33.3542 32.8534 33.3151L31.9236 28.9609ZM13.0335 24.3671H20.9665V26.6337C20.9665 27.5726 20.2055 28.3336 19.2665 28.3336H14.7334C13.7945 28.3336 13.0335 27.5726 13.0335 26.6337V24.3671ZM25.4996 16.4342C25.4985 17.1544 25.0452 17.7964 24.3663 18.0372V14.8312C25.0452 15.072 25.4991 15.7139 25.4996 16.4342ZM8.84828 10.7785C6.87866 9.30185 5.704 6.99622 5.66714 4.53473C5.66655 3.84118 5.76403 3.15102 5.95668 2.48463C7.07974 3.30455 8.3513 3.89895 9.70048 4.23557C9.90846 4.29334 10.1311 4.22879 10.2762 4.06895C12.0922 2.14463 14.6376 1.0782 17.2832 1.13492C19.7368 1.10151 22.1093 2.01035 23.9129 3.67403C24.5668 4.29454 25.0966 5.03338 25.4751 5.85164C25.8655 6.68006 26.0673 7.58498 26.0662 8.50126C26.0543 10.1128 25.4491 11.6637 24.3662 12.8576V10.2012C24.3503 9.88218 24.0852 9.63229 23.7656 9.63455C23.6075 9.63455 23.4562 9.70082 23.3491 9.81703C21.3194 11.921 18.506 13.0866 15.5833 13.0344C13.8029 13.0418 12.0464 12.623 10.4614 11.8122C10.3844 11.7731 10.2999 11.7527 10.2138 11.7516C10.2093 11.7516 10.2047 11.7482 10.2002 11.7482H10.1911C10.1577 11.7499 10.1242 11.7544 10.0913 11.7618C10.0761 11.7618 10.0602 11.7652 10.0449 11.7692C9.93496 11.7987 9.83747 11.8638 9.76721 11.9539C9.75699 11.9664 9.74736 11.9794 9.73833 11.993C9.70772 12.0361 9.68394 12.0837 9.66634 12.1336C9.66634 12.1403 9.65897 12.146 9.65672 12.1528C9.4057 11.7884 9.19034 11.4009 9.01529 10.9946C8.97864 10.9094 8.9214 10.8352 8.84828 10.7785ZM8.50038 16.4342C8.50151 15.714 8.9548 15.072 9.63367 14.8311V18.0372C8.9554 17.7958 8.50151 17.1544 8.50038 16.4342ZM10.767 21.5339V13.2043C11.4498 13.4888 12.1569 13.7097 12.88 13.8644C12.3977 14.2633 12.3298 14.9773 12.7281 15.4601C13.1264 15.9429 13.841 16.0103 14.3238 15.612C14.7697 15.2431 14.8666 14.5977 14.5482 14.1149C14.8915 14.1433 15.2361 14.1659 15.5834 14.1659C18.3679 14.1977 21.0753 13.2508 23.2331 11.4903V21.5345C23.2331 22.4734 22.472 23.2345 21.5331 23.2345H12.4668C11.5285 23.2339 10.767 22.4728 10.767 21.5339ZM27.1128 32.8667L26.6249 29.9401L25.5075 30.1271L25.9642 32.8668H8.03573L8.49248 30.1271L7.37505 29.9401L6.88716 32.8667H2.40107L3.18361 29.2017C3.58762 27.3782 5.19918 26.0773 7.06679 26.067H11.9003V26.6337C11.902 28.1976 13.1696 29.4652 14.7335 29.4669H19.2666C20.8305 29.4652 22.0981 28.1976 22.0998 26.6337V26.067H26.9333C28.8004 26.0773 30.4119 27.3771 30.8159 29.2L31.599 32.8667H27.1128V32.8667Z" fill="#231F20"/>
              <path d="M20.3992 15.8657C21.0251 15.8657 21.5325 15.3583 21.5325 14.7324C21.5325 14.1065 21.0251 13.5991 20.3992 13.5991C19.7733 13.5991 19.2659 14.1065 19.2659 14.7324C19.2659 15.3583 19.7733 15.8657 20.3992 15.8657Z" fill="#231F20"/>
             

            </svg>`

  }
}

function newMessageListener(channel) {
  channel.on('messageAdded', function (message) {

    var icon = getIcon();
    var author = message.author.charAt(0).toUpperCase() + message.author.slice(1)

    console.log("Mensagem adicionada");
    $(".messages-scroll")[0].innerHTML += "<div class='message-container'>" +
      "<div class='message-header' >" +
      "<div class='message-icon'>" +
      icon +
      "</div>" +
      "<p class='message-author'>" +
      author +
      "</p>" +
      "<div class='message-actions'>" +
      "</div>" +
      "</div >" +
      "<p class='message-text'>" +
      message.body +
      "</p>" +  
      "</div>";
      var scrollHeight = $('.messages-scroll')[0].scrollHeight;
  
      $('.messages-scroll').scrollTop(scrollHeight);
      
  });


  
}


function loadMessages(messages) {
  //carrega mensagens na view

  messages.items.map(item => {
    var icon = getIcon();
    var author = item.author.charAt(0).toUpperCase() + item.author.slice(1);

    $(".messages-scroll")[0].innerHTML += "<div class='message-container'>" +
      "<div class='message-header' >" +
      "<div class='message-icon'>" +
      icon +
      "</div>" +
      "<p class='message-author'>" +
      author +
      "</p>" +
      "<div class='message-actions'>" +
      "</div>" +
      "</div >" +
      "<p class='message-text'>" +
      item.body +
      "</p>" +
      "</div>"

  });
}
function getMessages(channel) {
  channel.getMessages(12).then(loadMessages);
}
function sendMessageListener(channel) {

  $(document).ready(function () {

    $(document).on('click', "#send", function callback() {
      console.log("Clicado");
      const message = $('#chat-input').val();
      channel.sendMessage(message).then(() => {
          $('#chat-input').val("");
      }).catch(err => {
        console.log("Mensagem não enviada");
        console.log(err);
      })
    });
  });
}


function getChannels(client) {
  client.getChannelByUniqueName("megahack").then(channel => {
    if (!channel) {
      try {
        client.createChannel({
          uniqueName: "megahack",
          friendlyName: 'Megahack'
        })
          .then(channel => {
            console.log(channel);
          });
      } catch (err) {
        console.log(err);
      }
    }
    try {
      channel.join().then(() => {
        sendMessageListener(channel);
        newMessageListener(channel);
        getMessages(channel);

      }).catch(err => {
        sendMessageListener(channel);
        newMessageListener(channel);
        getMessages(channel);
      });
    } catch (err) {
      console.log(err);
    }
  });
}

function getToken () {
  const header = new Headers([
    ['Access-Control-Allow-Origin', '*'],
  ]);

  return fetch("https://rocky-basin-52490.herokuapp.com/token/aluno", {
    method: 'POST',
    headers: header
  }).then(res => {
      return res;
  })
}

function initializeClient(token) {
  Chat.Client.create(token).then(function (client) {
    client.on('tokenExpired', function () {
      getToken(function (updatedToken) {
        chatClient.updateToken(updatedToken);
      });
    });
    getChannels(client);
  });
}


function sort(){
  
  var nodesToSort = $(".duvidas-container").children();
  $(".duvidas-container")[0].innerHTML = "";
  Array.prototype.map.call(nodesToSort, function(node) {
    
    return {
      node: node,
      relevantValue: $(node).find('.duvidas-like-button').find('p')[0].innerHTML
    };
  }).sort(function(a, b) {
    
      if(Number(a.relevantValue)  < Number(b.relevantValue)){
            return 1
      }else if(Number(a.relevantValue)  > Number(b.relevantValue)){
              return -1;
      }else if(Number(a.relevantValue)  == Number(b.relevantValue)){
            return 0;
      }
  }).forEach(function(item, index, arr) {
    
    $(item.node).find(".duvidas-index")[0].innerHTML= "#"+(index + 1);
    $(".duvidas-container").append(item.node) ;
  });
}


$(document).on('click', '.duvidas-like-button', function callback(e) {
  let value = new Number(e.currentTarget.children[0].innerHTML);
  value += 1;
  e.currentTarget.children[0].innerHTML = value;
  sort();
});

$(document).on('click', '.duvida-button', function callback(e) {
  let text = $("#duvida_input").val();
  let target = $(".duvidas-container")[0];
  let qtd = $(".duvidas-container").children().length;
  if (text && text != "") {
    target.innerHTML += `<div class="duvidas-row">
    <div class="duvidas-index">
      #${qtd + 1}
    </div>
    <div class="duvidas-text">
      <p>${text}</p>
    </div>
    <div class="duvidas-like-button">
      <p>0</p>
      <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0)">
          <path
            d="M2.29165 9.625C1.0285 9.625 0 10.6535 0 11.9167V19.25C0 20.5132 1.0285 21.5417 2.29165 21.5417H5.04165C5.55775 21.5417 6.03255 21.3675 6.41665 21.0778V9.625H2.29165Z"
            fill="#A6A2A2" />
          <path
            d="M22 13.0624C22 12.5115 21.7819 11.9982 21.4033 11.6196C21.8314 11.1512 22.0495 10.5232 21.9899 9.86965C21.8827 8.70456 20.8331 7.79156 19.5993 7.79156H13.937C14.2175 6.93996 14.6667 5.3789 14.6667 4.1249C14.6667 2.13665 12.9773 0.458252 11.9167 0.458252C10.9643 0.458252 10.2841 0.994502 10.2548 1.0165C10.1466 1.1036 10.0834 1.2356 10.0834 1.3749V4.48331L7.44337 10.2024L7.33337 10.2583V20.0832C8.07953 20.4352 9.02368 20.6249 9.62503 20.6249H18.0391C19.0374 20.6249 19.911 19.9521 20.1163 19.0235C20.2217 18.5459 20.1603 18.0647 19.9504 17.6467C20.6278 17.3057 21.0834 16.6081 21.0834 15.8124C21.0834 15.4879 21.0091 15.1772 20.868 14.8958C21.5454 14.5548 22 13.8572 22 13.0624Z"
            fill="#A6A2A2" />
        </g>
        <defs>
          <clipPath id="clip0">
            <rect width="22" height="22" fill="white" />
          </clipPath>
        </defs>
      </svg>
    </div>
  </div>`;
  }
});





async function renderChat() {
  //Pegar token
  const header = new Headers([
    ['Access-Control-Allow-Origin', '*'],
  ]);
  fetch("https://rocky-basin-52490.herokuapp.com/token/aluno", {
    method: 'POST',
    headers: header
  }).then(response => response.json())
    .then(data => {
      initializeClient(data.token);
    }).catch(error => {
      console.log(error)
    });

  return selectMicrophone();

}


window.addEventListener('load', renderChat);