{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _require = require('events'),\n    EventEmitter = _require.EventEmitter;\n/**\n * @classdesc A {@link DataTransport} implements {@link MediaSignalingTransport}\n *   in terms of an RTCDataChannel.\n * @extends EventEmitter\n * @implements MediaSignalingTransport\n * @emits DataTransport#message\n */\n\n\nvar DataTransport = function (_EventEmitter) {\n  _inherits(DataTransport, _EventEmitter);\n  /**\n   * Construct a {@link DataTransport}.\n   * @param {RTCDataChannel} dataChannel\n   */\n\n\n  function DataTransport(dataChannel) {\n    _classCallCheck(this, DataTransport);\n\n    var _this = _possibleConstructorReturn(this, (DataTransport.__proto__ || Object.getPrototypeOf(DataTransport)).call(this));\n\n    Object.defineProperties(_this, {\n      _dataChannel: {\n        value: dataChannel\n      },\n      _messageQueue: {\n        value: []\n      }\n    });\n    dataChannel.addEventListener('open', function () {\n      _this._messageQueue.splice(0).forEach(function (message) {\n        return _this._publish(message);\n      });\n    });\n    dataChannel.addEventListener('message', function (_ref) {\n      var data = _ref.data;\n\n      try {\n        var message = JSON.parse(data);\n\n        _this.emit('message', message);\n      } catch (error) {// Do nothing.\n      }\n    });\n\n    _this.publish({\n      type: 'ready'\n    });\n\n    return _this;\n  }\n  /**\n   * @param message\n   * @private\n   */\n\n\n  _createClass(DataTransport, [{\n    key: '_publish',\n    value: function _publish(message) {\n      var data = JSON.stringify(message);\n\n      try {\n        this._dataChannel.send(data);\n      } catch (error) {// Do nothing.\n      }\n    }\n    /**\n     * Publish a message. Returns true if calling the method resulted in\n     * publishing (or eventually publishing) the update.\n     * @param {object} message\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(message) {\n      var dataChannel = this._dataChannel;\n\n      if (dataChannel.readyState === 'closing' || dataChannel.readyState === 'closed') {\n        return false;\n      }\n\n      if (dataChannel.readyState === 'connecting') {\n        this._messageQueue.push(message);\n\n        return true;\n      }\n\n      this._publish(message);\n\n      return true;\n    }\n  }]);\n\n  return DataTransport;\n}(EventEmitter);\n/**\n * The {@link DataTransport} received a message.\n * @event DataTransport#message\n * @param {object} message\n */\n\n\nmodule.exports = DataTransport;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/data/transport.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","_require","require","EventEmitter","DataTransport","_EventEmitter","dataChannel","_this","getPrototypeOf","_dataChannel","_messageQueue","addEventListener","splice","forEach","message","_publish","_ref","data","JSON","parse","emit","error","publish","type","stringify","send","readyState","push","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('events'),\n    EventEmitter = _require.EventEmitter;\n\n/**\n * @classdesc A {@link DataTransport} implements {@link MediaSignalingTransport}\n *   in terms of an RTCDataChannel.\n * @extends EventEmitter\n * @implements MediaSignalingTransport\n * @emits DataTransport#message\n */\n\n\nvar DataTransport = function (_EventEmitter) {\n  _inherits(DataTransport, _EventEmitter);\n\n  /**\n   * Construct a {@link DataTransport}.\n   * @param {RTCDataChannel} dataChannel\n   */\n  function DataTransport(dataChannel) {\n    _classCallCheck(this, DataTransport);\n\n    var _this = _possibleConstructorReturn(this, (DataTransport.__proto__ || Object.getPrototypeOf(DataTransport)).call(this));\n\n    Object.defineProperties(_this, {\n      _dataChannel: {\n        value: dataChannel\n      },\n      _messageQueue: {\n        value: []\n      }\n    });\n\n    dataChannel.addEventListener('open', function () {\n      _this._messageQueue.splice(0).forEach(function (message) {\n        return _this._publish(message);\n      });\n    });\n\n    dataChannel.addEventListener('message', function (_ref) {\n      var data = _ref.data;\n\n      try {\n        var message = JSON.parse(data);\n        _this.emit('message', message);\n      } catch (error) {\n        // Do nothing.\n      }\n    });\n\n    _this.publish({ type: 'ready' });\n    return _this;\n  }\n\n  /**\n   * @param message\n   * @private\n   */\n\n\n  _createClass(DataTransport, [{\n    key: '_publish',\n    value: function _publish(message) {\n      var data = JSON.stringify(message);\n      try {\n        this._dataChannel.send(data);\n      } catch (error) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Publish a message. Returns true if calling the method resulted in\n     * publishing (or eventually publishing) the update.\n     * @param {object} message\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'publish',\n    value: function publish(message) {\n      var dataChannel = this._dataChannel;\n      if (dataChannel.readyState === 'closing' || dataChannel.readyState === 'closed') {\n        return false;\n      }\n      if (dataChannel.readyState === 'connecting') {\n        this._messageQueue.push(message);\n        return true;\n      }\n      this._publish(message);\n      return true;\n    }\n  }]);\n\n  return DataTransport;\n}(EventEmitter);\n\n/**\n * The {@link DataTransport} received a message.\n * @event DataTransport#message\n * @param {object} message\n */\n\nmodule.exports = DataTransport;"]},"metadata":{},"sourceType":"script"}