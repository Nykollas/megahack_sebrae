{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar logger_1 = require(\"./logger\");\n\nvar log = logger_1.Logger.scope('UserDescriptor');\n\nfunction parseAttributes(attrs) {\n  try {\n    return JSON.parse(attrs);\n  } catch (e) {\n    log.warn('Failed to parse user attributes', e);\n  }\n\n  return {};\n}\n/**\n * @classdesc Extended user information.\n * Note that <code>online</code> and <code>notifiable</code> properties are eligible\n * to use only if reachability function is enabled.\n * You may check if it is enabled by reading value of {@link Client}'s <code>reachabilityEnabled</code> property.\n *\n * @property {String} identity - User identity\n * @property {String} friendlyName - User friendly name, null if not set\n * @property {Object} attributes - Object with custom attributes for user\n * @property {Boolean} online - User real-time channel connection status\n * @property {Boolean} notifiable - User push notification registration status\n *\n * @constructor\n * @param {Users} users Users instance\n * @param {Object} descriptor User descriptor data object\n */\n\n\nvar UserDescriptor = function () {\n  /**\n   * @param {UserDescriptorServices} services - services, needed for UserDescriptor\n   * @param {Object} descriptor User descriptor data object\n   * @private\n   */\n  function UserDescriptor(services, descriptor) {\n    (0, _classCallCheck3.default)(this, UserDescriptor);\n    this.services = services;\n    this.descriptor = descriptor;\n    this.identity = descriptor.identity;\n    this.friendlyName = descriptor.friendly_name;\n    this.attributes = parseAttributes(descriptor.attributes);\n    this.online = descriptor.is_online;\n    this.notifiable = descriptor.is_notifiable;\n  }\n  /**\n   * Gets User object from descriptor and subscribes to it.\n   * @returns {Promise<User>}\n   */\n\n\n  (0, _createClass3.default)(UserDescriptor, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      return this.services.users.getUser(this.identity, this.descriptor.sync_unique_name);\n    }\n  }, {\n    key: \"_getDescriptor\",\n    value: function _getDescriptor() {\n      return this.descriptor;\n    }\n  }]);\n  return UserDescriptor;\n}();\n\nexports.UserDescriptor = UserDescriptor;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-chat/browser/userdescriptor.js"],"names":["_classCallCheck2","require","_classCallCheck3","_interopRequireDefault","_createClass2","_createClass3","obj","__esModule","default","Object","defineProperty","exports","value","logger_1","log","Logger","scope","parseAttributes","attrs","JSON","parse","e","warn","UserDescriptor","services","descriptor","identity","friendlyName","friendly_name","attributes","online","is_online","notifiable","is_notifiable","key","subscribe","users","getUser","sync_unique_name","_getDescriptor"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,sCAAD,CAA9B;;AAEA,IAAIC,gBAAgB,GAAGC,sBAAsB,CAACH,gBAAD,CAA7C;;AAEA,IAAII,aAAa,GAAGH,OAAO,CAAC,mCAAD,CAA3B;;AAEA,IAAII,aAAa,GAAGF,sBAAsB,CAACC,aAAD,CAA1C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/FG,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,QAAQ,GAAGZ,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIa,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,KAAhB,CAAsB,gBAAtB,CAAV;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAI;AACA,WAAOC,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAP;AACH,GAFD,CAEE,OAAOG,CAAP,EAAU;AACRP,IAAAA,GAAG,CAACQ,IAAJ,CAAS,iCAAT,EAA4CD,CAA5C;AACH;;AACD,SAAO,EAAP;AACH;AACD;;;;;;;;;;;;;;;;;;AAiBA,IAAIE,cAAc,GAAG,YAAY;AAC7B;;;;;AAKA,WAASA,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAC1C,KAAC,GAAGvB,gBAAgB,CAACM,OAArB,EAA8B,IAA9B,EAAoCe,cAApC;AAEA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBD,UAAU,CAACC,QAA3B;AACA,SAAKC,YAAL,GAAoBF,UAAU,CAACG,aAA/B;AACA,SAAKC,UAAL,GAAkBZ,eAAe,CAACQ,UAAU,CAACI,UAAZ,CAAjC;AACA,SAAKC,MAAL,GAAcL,UAAU,CAACM,SAAzB;AACA,SAAKC,UAAL,GAAkBP,UAAU,CAACQ,aAA7B;AACH;AACD;;;;;;AAMA,GAAC,GAAG5B,aAAa,CAACG,OAAlB,EAA2Be,cAA3B,EAA2C,CAAC;AACxCW,IAAAA,GAAG,EAAE,WADmC;AAExCtB,IAAAA,KAAK,EAAE,SAASuB,SAAT,GAAqB;AACxB,aAAO,KAAKX,QAAL,CAAcY,KAAd,CAAoBC,OAApB,CAA4B,KAAKX,QAAjC,EAA2C,KAAKD,UAAL,CAAgBa,gBAA3D,CAAP;AACH;AAJuC,GAAD,EAKxC;AACCJ,IAAAA,GAAG,EAAE,gBADN;AAECtB,IAAAA,KAAK,EAAE,SAAS2B,cAAT,GAA0B;AAC7B,aAAO,KAAKd,UAAZ;AACH;AAJF,GALwC,CAA3C;AAWA,SAAOF,cAAP;AACH,CAnCoB,EAArB;;AAqCAZ,OAAO,CAACY,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = require(\"./logger\");\nvar log = logger_1.Logger.scope('UserDescriptor');\nfunction parseAttributes(attrs) {\n    try {\n        return JSON.parse(attrs);\n    } catch (e) {\n        log.warn('Failed to parse user attributes', e);\n    }\n    return {};\n}\n/**\n * @classdesc Extended user information.\n * Note that <code>online</code> and <code>notifiable</code> properties are eligible\n * to use only if reachability function is enabled.\n * You may check if it is enabled by reading value of {@link Client}'s <code>reachabilityEnabled</code> property.\n *\n * @property {String} identity - User identity\n * @property {String} friendlyName - User friendly name, null if not set\n * @property {Object} attributes - Object with custom attributes for user\n * @property {Boolean} online - User real-time channel connection status\n * @property {Boolean} notifiable - User push notification registration status\n *\n * @constructor\n * @param {Users} users Users instance\n * @param {Object} descriptor User descriptor data object\n */\n\nvar UserDescriptor = function () {\n    /**\n     * @param {UserDescriptorServices} services - services, needed for UserDescriptor\n     * @param {Object} descriptor User descriptor data object\n     * @private\n     */\n    function UserDescriptor(services, descriptor) {\n        (0, _classCallCheck3.default)(this, UserDescriptor);\n\n        this.services = services;\n        this.descriptor = descriptor;\n        this.identity = descriptor.identity;\n        this.friendlyName = descriptor.friendly_name;\n        this.attributes = parseAttributes(descriptor.attributes);\n        this.online = descriptor.is_online;\n        this.notifiable = descriptor.is_notifiable;\n    }\n    /**\n     * Gets User object from descriptor and subscribes to it.\n     * @returns {Promise<User>}\n     */\n\n\n    (0, _createClass3.default)(UserDescriptor, [{\n        key: \"subscribe\",\n        value: function subscribe() {\n            return this.services.users.getUser(this.identity, this.descriptor.sync_unique_name);\n        }\n    }, {\n        key: \"_getDescriptor\",\n        value: function _getDescriptor() {\n            return this.descriptor;\n        }\n    }]);\n    return UserDescriptor;\n}();\n\nexports.UserDescriptor = UserDescriptor;"]},"metadata":{},"sourceType":"script"}