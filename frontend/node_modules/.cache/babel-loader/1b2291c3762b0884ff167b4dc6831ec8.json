{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/ParticipantInfo/ParticipantInfo.tsx\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AudioLevelIndicator from '../AudioLevelIndicator/AudioLevelIndicator';\nimport BandwidthWarning from '../BandwidthWarning/BandwidthWarning';\nimport NetworkQualityLevel from '../NewtorkQualityLevel/NetworkQualityLevel';\nimport ParticipantConnectionIndicator from './ParticipantConnectionIndicator/ParticipantConnectionIndicator';\nimport PinIcon from './PinIcon/PinIcon';\nimport ScreenShare from '@material-ui/icons/ScreenShare';\nimport VideocamOff from '@material-ui/icons/VideocamOff';\nimport useParticipantNetworkQualityLevel from '../../hooks/useParticipantNetworkQualityLevel/useParticipantNetworkQualityLevel';\nimport usePublications from '../../hooks/usePublications/usePublications';\nimport useIsTrackSwitchedOff from '../../hooks/useIsTrackSwitchedOff/useIsTrackSwitchedOff';\nimport useTrack from '../../hooks/useTrack/useTrack';\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    height: `${theme.sidebarWidth * 9 / 16}px`,\n    overflow: 'hidden',\n    cursor: 'pointer',\n    '& video': {\n      filter: 'none'\n    },\n    '& svg': {\n      stroke: 'black',\n      strokeWidth: '0.8px'\n    },\n    [theme.breakpoints.down('xs')]: {\n      height: theme.sidebarMobileHeight,\n      width: `${theme.sidebarMobileHeight * 16 / 9}px`,\n      marginRight: '3px',\n      fontSize: '10px'\n    }\n  },\n  isVideoSwitchedOff: {\n    '& video': {\n      filter: 'blur(4px) grayscale(1) brightness(0.5)'\n    }\n  },\n  infoContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '100%',\n    padding: '0.4em',\n    width: '100%',\n    background: 'transparent'\n  },\n  hideVideo: {\n    background: 'black'\n  },\n  identity: {\n    background: 'rgba(0, 0, 0, 0.7)',\n    padding: '0.1em 0.3em',\n    margin: 0,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  infoRow: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\nexport default function ParticipantInfo({\n  participant,\n  onClick,\n  isSelected,\n  children\n}) {\n  const publications = usePublications(participant);\n  const audioPublication = publications.find(p => p.kind === 'audio');\n  const videoPublication = publications.find(p => p.trackName === 'camera');\n  const networkQualityLevel = useParticipantNetworkQualityLevel(participant);\n  const isVideoEnabled = Boolean(videoPublication);\n  const isScreenShareEnabled = publications.find(p => p.trackName === 'screen');\n  const videoTrack = useTrack(videoPublication);\n  const isVideoSwitchedOff = useIsTrackSwitchedOff(videoTrack);\n  const audioTrack = useTrack(audioPublication);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, {\n      [classes.isVideoSwitchedOff]: isVideoSwitchedOff\n    }),\n    onClick: onClick,\n    \"data-cy-participant\": participant.identity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.infoContainer, {\n      [classes.hideVideo]: !isVideoEnabled\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.infoRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.identity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ParticipantConnectionIndicator, {\n    participant: participant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), participant.identity), /*#__PURE__*/React.createElement(NetworkQualityLevel, {\n    qualityLevel: networkQualityLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AudioLevelIndicator, {\n    audioTrack: audioTrack,\n    background: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), !isVideoEnabled && /*#__PURE__*/React.createElement(VideocamOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }), isScreenShareEnabled && /*#__PURE__*/React.createElement(ScreenShare, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 36\n    }\n  }), isSelected && /*#__PURE__*/React.createElement(PinIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 26\n    }\n  }))), isVideoSwitchedOff && /*#__PURE__*/React.createElement(BandwidthWarning, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 30\n    }\n  }), children);\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/ParticipantInfo/ParticipantInfo.tsx"],"names":["React","clsx","createStyles","makeStyles","AudioLevelIndicator","BandwidthWarning","NetworkQualityLevel","ParticipantConnectionIndicator","PinIcon","ScreenShare","VideocamOff","useParticipantNetworkQualityLevel","usePublications","useIsTrackSwitchedOff","useTrack","useStyles","theme","container","position","display","alignItems","height","sidebarWidth","overflow","cursor","filter","stroke","strokeWidth","breakpoints","down","sidebarMobileHeight","width","marginRight","fontSize","isVideoSwitchedOff","infoContainer","zIndex","flexDirection","justifyContent","padding","background","hideVideo","identity","margin","infoRow","ParticipantInfo","participant","onClick","isSelected","children","publications","audioPublication","find","p","kind","videoPublication","trackName","networkQualityLevel","isVideoEnabled","Boolean","isScreenShareEnabled","videoTrack","audioTrack","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { LocalAudioTrack, LocalVideoTrack, Participant, RemoteAudioTrack, RemoteVideoTrack } from 'twilio-video';\n\nimport AudioLevelIndicator from '../AudioLevelIndicator/AudioLevelIndicator';\nimport BandwidthWarning from '../BandwidthWarning/BandwidthWarning';\nimport NetworkQualityLevel from '../NewtorkQualityLevel/NetworkQualityLevel';\nimport ParticipantConnectionIndicator from './ParticipantConnectionIndicator/ParticipantConnectionIndicator';\nimport PinIcon from './PinIcon/PinIcon';\nimport ScreenShare from '@material-ui/icons/ScreenShare';\nimport VideocamOff from '@material-ui/icons/VideocamOff';\n\nimport useParticipantNetworkQualityLevel from '../../hooks/useParticipantNetworkQualityLevel/useParticipantNetworkQualityLevel';\nimport usePublications from '../../hooks/usePublications/usePublications';\nimport useIsTrackSwitchedOff from '../../hooks/useIsTrackSwitchedOff/useIsTrackSwitchedOff';\nimport useTrack from '../../hooks/useTrack/useTrack';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      height: `${(theme.sidebarWidth * 9) / 16}px`,\n      overflow: 'hidden',\n      cursor: 'pointer',\n      '& video': {\n        filter: 'none',\n      },\n      '& svg': {\n        stroke: 'black',\n        strokeWidth: '0.8px',\n      },\n      [theme.breakpoints.down('xs')]: {\n        height: theme.sidebarMobileHeight,\n        width: `${(theme.sidebarMobileHeight * 16) / 9}px`,\n        marginRight: '3px',\n        fontSize: '10px',\n      },\n    },\n    isVideoSwitchedOff: {\n      '& video': {\n        filter: 'blur(4px) grayscale(1) brightness(0.5)',\n      },\n    },\n    infoContainer: {\n      position: 'absolute',\n      zIndex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '100%',\n      padding: '0.4em',\n      width: '100%',\n      background: 'transparent',\n    },\n    hideVideo: {\n      background: 'black',\n    },\n    identity: {\n      background: 'rgba(0, 0, 0, 0.7)',\n      padding: '0.1em 0.3em',\n      margin: 0,\n      display: 'flex',\n      alignItems: 'center',\n    },\n    infoRow: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  })\n);\n\ninterface ParticipantInfoProps {\n  participant: Participant;\n  children: React.ReactNode;\n  onClick: () => void;\n  isSelected: boolean;\n}\n\nexport default function ParticipantInfo({ participant, onClick, isSelected, children }: ParticipantInfoProps) {\n  const publications = usePublications(participant);\n\n  const audioPublication = publications.find(p => p.kind === 'audio');\n  const videoPublication = publications.find(p => p.trackName === 'camera');\n\n  const networkQualityLevel = useParticipantNetworkQualityLevel(participant);\n  const isVideoEnabled = Boolean(videoPublication);\n  const isScreenShareEnabled = publications.find(p => p.trackName === 'screen');\n\n  const videoTrack = useTrack(videoPublication);\n  const isVideoSwitchedOff = useIsTrackSwitchedOff(videoTrack as LocalVideoTrack | RemoteVideoTrack);\n\n  const audioTrack = useTrack(audioPublication) as LocalAudioTrack | RemoteAudioTrack;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.container, {\n        [classes.isVideoSwitchedOff]: isVideoSwitchedOff,\n      })}\n      onClick={onClick}\n      data-cy-participant={participant.identity}\n    >\n      <div className={clsx(classes.infoContainer, { [classes.hideVideo]: !isVideoEnabled })}>\n        <div className={classes.infoRow}>\n          <h4 className={classes.identity}>\n            <ParticipantConnectionIndicator participant={participant} />\n            {participant.identity}\n          </h4>\n          <NetworkQualityLevel qualityLevel={networkQualityLevel} />\n        </div>\n        <div>\n          <AudioLevelIndicator audioTrack={audioTrack} background=\"white\" />\n          {!isVideoEnabled && <VideocamOff />}\n          {isScreenShareEnabled && <ScreenShare />}\n          {isSelected && <PinIcon />}\n        </div>\n      </div>\n      {isVideoSwitchedOff && <BandwidthWarning />}\n      {children}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}