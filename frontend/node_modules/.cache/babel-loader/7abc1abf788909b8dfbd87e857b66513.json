{"ast":null,"code":"import { useCallback } from 'react';\nimport useVideoContext from '../useVideoContext/useVideoContext';\nexport default function useLocalVideoToggle() {\n  const {\n    room: {\n      localParticipant\n    },\n    localTracks,\n    getLocalVideoTrack\n  } = useVideoContext();\n  const videoTrack = localTracks.find(track => track.name === 'camera');\n  const toggleVideoEnabled = useCallback(() => {\n    if (videoTrack) {\n      if (localParticipant) {\n        const localTrackPublication = localParticipant.unpublishTrack(videoTrack); // TODO: remove when SDK implements this event. See: https://issues.corp.twilio.com/browse/JSDK-2592\n\n        localParticipant.emit('trackUnpublished', localTrackPublication);\n      }\n\n      videoTrack.stop();\n    } else {\n      getLocalVideoTrack().then(track => {\n        if (localParticipant) {\n          localParticipant.publishTrack(track, {\n            priority: 'low'\n          });\n        }\n      });\n    }\n  }, [videoTrack, localParticipant, getLocalVideoTrack]);\n  return [!!videoTrack, toggleVideoEnabled];\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/hooks/useLocalVideoToggle/useLocalVideoToggle.tsx"],"names":["useCallback","useVideoContext","useLocalVideoToggle","room","localParticipant","localTracks","getLocalVideoTrack","videoTrack","find","track","name","toggleVideoEnabled","localTrackPublication","unpublishTrack","emit","stop","then","publishTrack","priority"],"mappings":"AACA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAC5C,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KADF;AAEJC,IAAAA,WAFI;AAGJC,IAAAA;AAHI,MAIFL,eAAe,EAJnB;AAKA,QAAMM,UAAU,GAAGF,WAAW,CAACG,IAAZ,CAAiBC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,QAAzC,CAAnB;AAEA,QAAMC,kBAAkB,GAAGX,WAAW,CAAC,MAAM;AAC3C,QAAIO,UAAJ,EAAgB;AACd,UAAIH,gBAAJ,EAAsB;AACpB,cAAMQ,qBAAqB,GAAGR,gBAAgB,CAACS,cAAjB,CAAgCN,UAAhC,CAA9B,CADoB,CAEpB;;AACAH,QAAAA,gBAAgB,CAACU,IAAjB,CAAsB,kBAAtB,EAA0CF,qBAA1C;AACD;;AACDL,MAAAA,UAAU,CAACQ,IAAX;AACD,KAPD,MAOO;AACLT,MAAAA,kBAAkB,GAAGU,IAArB,CAA2BP,KAAD,IAA4B;AACpD,YAAIL,gBAAJ,EAAsB;AACpBA,UAAAA,gBAAgB,CAACa,YAAjB,CAA8BR,KAA9B,EAAqC;AAAES,YAAAA,QAAQ,EAAE;AAAZ,WAArC;AACD;AACF,OAJD;AAKD;AACF,GAfqC,EAenC,CAACX,UAAD,EAAaH,gBAAb,EAA+BE,kBAA/B,CAfmC,CAAtC;AAiBA,SAAO,CAAC,CAAC,CAACC,UAAH,EAAeI,kBAAf,CAAP;AACD","sourcesContent":["import { LocalVideoTrack } from 'twilio-video';\nimport { useCallback } from 'react';\nimport useVideoContext from '../useVideoContext/useVideoContext';\n\nexport default function useLocalVideoToggle() {\n  const {\n    room: { localParticipant },\n    localTracks,\n    getLocalVideoTrack,\n  } = useVideoContext();\n  const videoTrack = localTracks.find(track => track.name === 'camera') as LocalVideoTrack;\n\n  const toggleVideoEnabled = useCallback(() => {\n    if (videoTrack) {\n      if (localParticipant) {\n        const localTrackPublication = localParticipant.unpublishTrack(videoTrack);\n        // TODO: remove when SDK implements this event. See: https://issues.corp.twilio.com/browse/JSDK-2592\n        localParticipant.emit('trackUnpublished', localTrackPublication);\n      }\n      videoTrack.stop();\n    } else {\n      getLocalVideoTrack().then((track: LocalVideoTrack) => {\n        if (localParticipant) {\n          localParticipant.publishTrack(track, { priority: 'low' });\n        }\n      });\n    }\n  }, [videoTrack, localParticipant, getLocalVideoTrack]);\n\n  return [!!videoTrack, toggleVideoEnabled] as const;\n}\n"]},"metadata":{},"sourceType":"module"}