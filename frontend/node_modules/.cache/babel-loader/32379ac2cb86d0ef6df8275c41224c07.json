{"ast":null,"code":"/*!\n * Platform.js <https://mths.be/platform>\n * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;\n(function () {\n  'use strict';\n  /** Used to determine if values are of the language type `Object`. */\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n  /** Used as a reference to the global object. */\n\n  var root = objectTypes[typeof window] && window || this;\n  /** Backup possible global object. */\n\n  var oldRoot = root;\n  /** Detect free variable `exports`. */\n\n  var freeExports = objectTypes[typeof exports] && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  /** Regular expression to detect Opera. */\n\n  var reOpera = /\\bOpera/;\n  /** Possible global object. */\n\n  var thisBinding = this;\n  /** Used for native method references. */\n\n  var objectProto = Object.prototype;\n  /** Used to check for own properties of an object. */\n\n  var hasOwnProperty = objectProto.hasOwnProperty;\n  /** Used to resolve the internal `[[Class]]` of values. */\n\n  var toString = objectProto.toString;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n\n\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4': '10 Technical Preview',\n      '6.3': '8.1',\n      '6.2': '8',\n      '6.1': 'Server 2008 R2 / 7',\n      '6.0': 'Server 2008 / Vista',\n      '5.2': 'Server 2003 / XP 64-bit',\n      '5.1': 'XP',\n      '5.01': '2000 SP1',\n      '5.0': '2000',\n      '4.0': 'NT',\n      '4.90': 'ME'\n    }; // Detect Windows version from platform tokens.\n\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) && (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    } // Correct character case and cleanup string.\n\n\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(os.replace(/ ce$/i, ' CE').replace(/\\bhpw/i, 'web').replace(/\\bMacintosh\\b/, 'Mac OS').replace(/_PowerPC\\b/i, ' OS').replace(/\\b(OS X) [^ \\d]+/i, '$1').replace(/\\bMac (OS X)\\b/, '$1').replace(/\\/(\\d)/, ' $1').replace(/_/g, '.').replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '').replace(/\\bx86\\.64\\b/gi, 'x86_64').replace(/\\b(Windows Phone) OS\\b/, '$1').replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1').split(' on ')[0]);\n    return os;\n  }\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n\n\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n\n\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string) ? string : capitalize(string);\n  }\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n\n\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n\n\n  function getClassOf(value) {\n    return value == null ? capitalize(value) : toString.call(value).slice(8, -1);\n  }\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n\n\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) && (type == 'object' ? !!object[property] : true);\n  }\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n\n\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n\n\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function (value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n\n\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n\n\n  function parse(ua) {\n    /** The environment context object. */\n    var context = root;\n    /** Used to flag when a custom context is provided. */\n\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String'; // Juggle arguments.\n\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n    /** Browser navigator object. */\n\n\n    var nav = context.navigator || {};\n    /** Browser user agent string. */\n\n    var userAgent = nav.userAgent || '';\n    ua || (ua = userAgent);\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n    /** Used to detect if browser is like Chrome. */\n\n    var likeChrome = isCustomContext ? !!nav.likeChrome : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n    /** Internal `[[Class]]` value shortcuts. */\n\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = isCustomContext && context.java ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n    /** Detect Java environments. */\n\n    var java = /\\bJava/.test(javaClass) && context.java;\n    /** Detect Rhino. */\n\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n    /** A character to represent alpha. */\n\n    var alpha = java ? 'a' : '\\u03b1';\n    /** A character to represent beta. */\n\n    var beta = java ? 'b' : '\\u03b2';\n    /** Browser document object. */\n\n    var doc = context.document || {};\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n\n    var opera = context.operamini || context.opera;\n    /** Opera `[[Class]]`. */\n\n    var operaClass = reOpera.test(operaClass = isCustomContext && opera ? opera['[[Class]]'] : getClassOf(opera)) ? operaClass : opera = null;\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n\n    var data;\n    /** The CPU architecture. */\n\n    var arch = ua;\n    /** Platform description array. */\n\n    var description = [];\n    /** Platform alpha/beta indicator. */\n\n    var prerelease = null;\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n\n    var useFeatures = ua == userAgent;\n    /** The browser/environment version. */\n\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n\n    var isSpecialCasedOS;\n    /* Detectable layout engines (order is important). */\n\n    var layout = getLayout([{\n      'label': 'EdgeHTML',\n      'pattern': 'Edge'\n    }, 'Trident', {\n      'label': 'WebKit',\n      'pattern': 'AppleWebKit'\n    }, 'iCab', 'Presto', 'NetFront', 'Tasman', 'KHTML', 'Gecko']);\n    /* Detectable browser names (order is important). */\n\n    var name = getName(['Adobe AIR', 'Arora', 'Avant Browser', 'Breach', 'Camino', 'Electron', 'Epiphany', 'Fennec', 'Flock', 'Galeon', 'GreenBrowser', 'iCab', 'Iceweasel', 'K-Meleon', 'Konqueror', 'Lunascape', 'Maxthon', {\n      'label': 'Microsoft Edge',\n      'pattern': 'Edge'\n    }, 'Midori', 'Nook Browser', 'PaleMoon', 'PhantomJS', 'Raven', 'Rekonq', 'RockMelt', {\n      'label': 'Samsung Internet',\n      'pattern': 'SamsungBrowser'\n    }, 'SeaMonkey', {\n      'label': 'Silk',\n      'pattern': '(?:Cloud9|Silk-Accelerated)'\n    }, 'Sleipnir', 'SlimBrowser', {\n      'label': 'SRWare Iron',\n      'pattern': 'Iron'\n    }, 'Sunrise', 'Swiftfox', 'Waterfox', 'WebPositive', 'Opera Mini', {\n      'label': 'Opera Mini',\n      'pattern': 'OPiOS'\n    }, 'Opera', {\n      'label': 'Opera',\n      'pattern': 'OPR'\n    }, 'Chrome', {\n      'label': 'Chrome Mobile',\n      'pattern': '(?:CriOS|CrMo)'\n    }, {\n      'label': 'Firefox',\n      'pattern': '(?:Firefox|Minefield)'\n    }, {\n      'label': 'Firefox for iOS',\n      'pattern': 'FxiOS'\n    }, {\n      'label': 'IE',\n      'pattern': 'IEMobile'\n    }, {\n      'label': 'IE',\n      'pattern': 'MSIE'\n    }, 'Safari']);\n    /* Detectable products (order is important). */\n\n    var product = getProduct([{\n      'label': 'BlackBerry',\n      'pattern': 'BB10'\n    }, 'BlackBerry', {\n      'label': 'Galaxy S',\n      'pattern': 'GT-I9000'\n    }, {\n      'label': 'Galaxy S2',\n      'pattern': 'GT-I9100'\n    }, {\n      'label': 'Galaxy S3',\n      'pattern': 'GT-I9300'\n    }, {\n      'label': 'Galaxy S4',\n      'pattern': 'GT-I9500'\n    }, {\n      'label': 'Galaxy S5',\n      'pattern': 'SM-G900'\n    }, {\n      'label': 'Galaxy S6',\n      'pattern': 'SM-G920'\n    }, {\n      'label': 'Galaxy S6 Edge',\n      'pattern': 'SM-G925'\n    }, {\n      'label': 'Galaxy S7',\n      'pattern': 'SM-G930'\n    }, {\n      'label': 'Galaxy S7 Edge',\n      'pattern': 'SM-G935'\n    }, 'Google TV', 'Lumia', 'iPad', 'iPod', 'iPhone', 'Kindle', {\n      'label': 'Kindle Fire',\n      'pattern': '(?:Cloud9|Silk-Accelerated)'\n    }, 'Nexus', 'Nook', 'PlayBook', 'PlayStation Vita', 'PlayStation', 'TouchPad', 'Transformer', {\n      'label': 'Wii U',\n      'pattern': 'WiiU'\n    }, 'Wii', 'Xbox One', {\n      'label': 'Xbox 360',\n      'pattern': 'Xbox'\n    }, 'Xoom']);\n    /* Detectable manufacturers. */\n\n    var manufacturer = getManufacturer({\n      'Apple': {\n        'iPad': 1,\n        'iPhone': 1,\n        'iPod': 1\n      },\n      'Archos': {},\n      'Amazon': {\n        'Kindle': 1,\n        'Kindle Fire': 1\n      },\n      'Asus': {\n        'Transformer': 1\n      },\n      'Barnes & Noble': {\n        'Nook': 1\n      },\n      'BlackBerry': {\n        'PlayBook': 1\n      },\n      'Google': {\n        'Google TV': 1,\n        'Nexus': 1\n      },\n      'HP': {\n        'TouchPad': 1\n      },\n      'HTC': {},\n      'LG': {},\n      'Microsoft': {\n        'Xbox': 1,\n        'Xbox One': 1\n      },\n      'Motorola': {\n        'Xoom': 1\n      },\n      'Nintendo': {\n        'Wii U': 1,\n        'Wii': 1\n      },\n      'Nokia': {\n        'Lumia': 1\n      },\n      'Samsung': {\n        'Galaxy S': 1,\n        'Galaxy S2': 1,\n        'Galaxy S3': 1,\n        'Galaxy S4': 1\n      },\n      'Sony': {\n        'PlayStation': 1,\n        'PlayStation Vita': 1\n      }\n    });\n    /* Detectable operating systems (order is important). */\n\n    var os = getOS(['Windows Phone', 'Android', 'CentOS', {\n      'label': 'Chrome OS',\n      'pattern': 'CrOS'\n    }, 'Debian', 'Fedora', 'FreeBSD', 'Gentoo', 'Haiku', 'Kubuntu', 'Linux Mint', 'OpenBSD', 'Red Hat', 'SuSE', 'Ubuntu', 'Xubuntu', 'Cygwin', 'Symbian OS', 'hpwOS', 'webOS ', 'webOS', 'Tablet OS', 'Tizen', 'Linux', 'Mac OS X', 'Macintosh', 'Mac', 'Windows 98;', 'Windows ']);\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n\n    function getLayout(guesses) {\n      return reduce(guesses, function (result, guess) {\n        return result || RegExp('\\\\b' + (guess.pattern || qualify(guess)) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n\n\n    function getManufacturer(guesses) {\n      return reduce(guesses, function (result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (value[product] || value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] || RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)) && key;\n      });\n    }\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n\n\n    function getName(guesses) {\n      return reduce(guesses, function (result, guess) {\n        return result || RegExp('\\\\b' + (guess.pattern || qualify(guess)) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n\n\n    function getOS(guesses) {\n      return reduce(guesses, function (result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n\n        if (!result && (result = RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua))) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n\n        return result;\n      });\n    }\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n\n\n    function getProduct(guesses) {\n      return reduce(guesses, function (result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n\n        if (!result && (result = RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) || RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) || RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua))) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String(guess.label && !RegExp(pattern, 'i').test(guess.label) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          } // Correct character case and cleanup string.\n\n\n          guess = guess.label || guess;\n          result = format(result[0].replace(RegExp(pattern, 'i'), guess).replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ').replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n\n        return result;\n      });\n    }\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n\n\n    function getVersion(patterns) {\n      return reduce(patterns, function (result, pattern) {\n        return result || (RegExp(pattern + '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n\n\n    function toStringPlatform() {\n      return this.description || '';\n    }\n    /*------------------------------------------------------------------------*/\n    // Convert layout to an array so we can add extra details.\n\n\n    layout && (layout = [layout]); // Detect product names that contain their manufacturer's name.\n\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } // Clean up Google TV.\n\n\n    if (data = /\\bGoogle TV\\b/.exec(product)) {\n      product = data[0];\n    } // Detect simulators.\n\n\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    } // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n\n\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    } // Detect IE Mobile 11.\n\n\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    } // Detect iOS.\n    else if (/^iP/.test(product)) {\n        name || (name = 'Safari');\n        os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua)) ? ' ' + data[1].replace(/_/g, '.') : '');\n      } // Detect Kubuntu.\n      else if (name == 'Konqueror' && !/buntu/i.test(os)) {\n          os = 'Kubuntu';\n        } // Detect Android browsers.\n        else if (manufacturer && manufacturer != 'Google' && (/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua) || /\\bVita\\b/.test(product)) || /\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua)) {\n            name = 'Android Browser';\n            os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n          } // Detect Silk desktop/accelerated modes.\n          else if (name == 'Silk') {\n              if (!/\\bMobi/i.test(ua)) {\n                os = 'Android';\n                description.unshift('desktop mode');\n              }\n\n              if (/Accelerated *= *true/i.test(ua)) {\n                description.unshift('accelerated');\n              }\n            } // Detect PaleMoon identifying as Firefox.\n            else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n                description.push('identifying as Firefox ' + data[1]);\n              } // Detect Firefox OS and products running Firefox.\n              else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n                  os || (os = 'Firefox OS');\n                  product || (product = data[1]);\n                } // Detect false positives for Firefox/Safari.\n                else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n                    // Escape the `/` for Firefox 1.\n                    if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n                      // Clear name of false positives.\n                      name = null;\n                    } // Reassign a generic name.\n\n\n                    if ((data = product || manufacturer || os) && (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n                      name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n                    }\n                  } // Add Chrome version to description for Electron.\n                  else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n                      description.push('Chromium ' + data);\n                    } // Detect non-Opera (Presto-based) versions (order is important).\n\n\n    if (!version) {\n      version = getVersion(['(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$))', 'Version', qualify(name), '(?:Firefox|Minefield|NetFront)']);\n    } // Detect stubborn layout engines.\n\n\n    if (data = layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' || /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') || /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' || !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') || layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront') {\n      layout = [data];\n    } // Detect Windows Phone 7 desktop mode.\n\n\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    } // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n        name = 'IE Mobile';\n        os = 'Windows Phone 8.x';\n        description.unshift('desktop mode');\n        version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n      } // Detect IE 11 identifying as other browsers.\n      else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n          if (name) {\n            description.push('identifying as ' + name + (version ? ' ' + version : ''));\n          }\n\n          name = 'IE';\n          version = data[1];\n        } // Leverage environment features.\n\n\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch (e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n\n          if (!name) {\n            name = 'Rhino';\n          }\n        } else if (typeof context.process == 'object' && !context.process.browser && (data = context.process)) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      } // Detect Adobe AIR.\n      else if (getClassOf(data = context.runtime) == airRuntimeClass) {\n          name = 'Adobe AIR';\n          os = data.flash.system.Capabilities.os;\n        } // Detect PhantomJS.\n        else if (getClassOf(data = context.phantom) == phantomClass) {\n            name = 'PhantomJS';\n            version = (data = data.version || null) && data.major + '.' + data.minor + '.' + data.patch;\n          } // Detect IE compatibility modes.\n          else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n              // We're in compatibility mode when the Trident version + 4 doesn't\n              // equal the document mode.\n              version = [version, doc.documentMode];\n\n              if ((data = +data[1] + 4) != version[1]) {\n                description.push('IE ' + version[1] + ' mode');\n                layout && (layout[1] = '');\n                version[1] = data;\n              }\n\n              version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n            } // Detect IE 11 masking as other browsers.\n            else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n                description.push('masking as ' + name + ' ' + version);\n                name = 'IE';\n                version = '11.0';\n                layout = ['Trident'];\n                os = 'Windows';\n              }\n\n      os = os && format(os);\n    } // Detect prerelease phases.\n\n\n    if (version && (data = /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) || /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) || /\\bMinefield\\b/i.test(ua) && 'a')) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') + (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    } // Detect Firefox Mobile.\n\n\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    } // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n        version = version.replace(/\\.[\\d.]+/, '.x');\n      } // Detect Xbox 360 and Xbox One.\n      else if (/\\bXbox\\b/i.test(product)) {\n          if (product == 'Xbox 360') {\n            os = null;\n          }\n\n          if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n            description.unshift('mobile mode');\n          }\n        } // Add mobile postfix.\n        else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) && (os == 'Windows CE' || /Mobi/i.test(ua))) {\n            name += ' Mobile';\n          } // Detect IE platform preview.\n          else if (name == 'IE' && useFeatures) {\n              try {\n                if (context.external === null) {\n                  description.unshift('platform preview');\n                }\n              } catch (e) {\n                description.unshift('embedded');\n              }\n            } // Detect BlackBerry OS version.\n            // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n            else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data = (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] || version)) {\n                data = [data, /BB10/.test(ua)];\n                os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n                version = null;\n              } // Detect Opera identifying/masking itself as another browser.\n              // http://www.opera.com/support/kb/view/843/\n              else if (this != forOwn && product != 'Wii' && (useFeatures && opera || /Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua) || name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os) || name == 'IE' && (os && !/^Win/.test(os) && version > 5.5 || /\\bWindows XP\\b/.test(os) && version > 8 || version == 8 && !/\\bTrident\\b/.test(ua))) && !reOpera.test(data = parse.call(forOwn, ua.replace(reOpera, '') + ';')) && data.name) {\n                  // When \"identifying\", the UA contains both Opera and the other browser's name.\n                  data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n\n                  if (reOpera.test(name)) {\n                    if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n                      os = null;\n                    }\n\n                    data = 'identify' + data;\n                  } // When \"masking\", the UA contains only the other browser's name.\n                  else {\n                      data = 'mask' + data;\n\n                      if (operaClass) {\n                        name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n                      } else {\n                        name = 'Opera';\n                      }\n\n                      if (/\\bIE\\b/.test(data)) {\n                        os = null;\n                      }\n\n                      if (!useFeatures) {\n                        version = null;\n                      }\n                    }\n\n                  layout = ['Presto'];\n                  description.push(data);\n                } // Detect WebKit Nightly and approximate Chrome/Safari versions.\n\n\n    if (data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1]) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data]; // Nightly builds are postfixed with a \"+\".\n\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      } // Clear incorrect browser versions.\n      else if (version == data[1] || version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n          version = null;\n        } // Use the full Chrome version when available.\n\n\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1]; // Detect Blink layout engine.\n\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      } // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n\n\n      if (!useFeatures || !likeChrome && !data[1]) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      } // Add the postfix of \".x\" or \"+\" for approximate versions.\n\n\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+')); // Obscure version for some Safari 1-2 releases.\n\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      }\n    } // Detect Opera desktop modes.\n\n\n    if (name == 'Opera' && (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    } // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n        description.unshift('desktop mode');\n        name = 'Chrome Mobile';\n        version = null;\n\n        if (/\\bOS X\\b/.test(os)) {\n          manufacturer = 'Apple';\n          os = 'iOS 4.3+';\n        } else {\n          os = null;\n        }\n      } // Strip incorrect OS versions.\n\n\n    if (version && version.indexOf(data = /[\\d.]+$/.exec(os)) == 0 && ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    } // Add layout engine.\n\n\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (/Browser|Lunascape|Maxthon/.test(name) || name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) || /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    } // Combine contextual information.\n\n\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    } // Append manufacturer to description.\n\n\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    } // Append product to description.\n\n\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    } // Parse the OS into an object.\n\n\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': data && !isSpecialCasedOS ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function () {\n          var version = this.version;\n          return this.family + (version && !isSpecialCasedOS ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    } // Add browser/OS architecture.\n\n\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n\n      if (name && (/\\bWOW64\\b/i.test(ua) || useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua))) {\n        description.unshift('32-bit');\n      }\n    } // Chrome 39 and above on OS X is always 64-bit.\n    else if (os && /^OS X/.test(os.family) && name == 'Chrome' && parseFloat(version) >= 39) {\n        os.architecture = 64;\n      }\n\n    ua || (ua = null);\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n\n    var platform = {};\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.description = ua;\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.layout = layout && layout[0];\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.manufacturer = manufacturer;\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.name = name;\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.prerelease = prerelease;\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.product = product;\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.ua = ua;\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.version = name && version;\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n\n    platform.os = os || {\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\n       * \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function () {\n        return 'null';\n      }\n    };\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n\n    if (platform.name) {\n      description.unshift(name);\n    }\n\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n\n    return platform;\n  }\n  /*--------------------------------------------------------------------------*/\n  // Export platform.\n\n\n  var platform = parse(); // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform; // Define as an anonymous module so platform can be aliased through path mapping.\n\n    define(function () {\n      return platform;\n    });\n  } // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n      // Export for CommonJS support.\n      forOwn(platform, function (value, key) {\n        freeExports[key] = value;\n      });\n    } else {\n      // Export to the global object.\n      root.platform = platform;\n    }\n}).call(this);","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/platform/platform.js"],"names":["objectTypes","root","window","oldRoot","freeExports","exports","freeModule","module","nodeType","freeGlobal","global","self","maxSafeInteger","Math","pow","reOpera","thisBinding","objectProto","Object","prototype","hasOwnProperty","toString","capitalize","string","String","charAt","toUpperCase","slice","cleanupOS","os","pattern","label","data","test","exec","replace","RegExp","format","split","each","object","callback","index","length","forOwn","trim","key","call","getClassOf","value","isHostType","property","type","qualify","reduce","array","accumulator","parse","ua","context","isCustomContext","nav","navigator","userAgent","isModuleScope","likeChrome","objectClass","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","environment","alpha","beta","doc","document","opera","operamini","operaClass","arch","description","prerelease","useFeatures","version","isSpecialCasedOS","layout","getLayout","name","getName","product","getProduct","manufacturer","getManufacturer","getOS","guesses","result","guess","getVersion","patterns","toStringPlatform","push","unshift","indexOf","parseFloat","lang","System","getProperty","require","join","e","system","process","browser","versions","electron","node","nw","platform","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","toFixed","appMinorVersion","external","parseInt","family","architecture","cpuClass","define","amd"],"mappings":"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","sourcesContent":["/*!\n * Platform.js <https://mths.be/platform>\n * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object. */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object. */\n  var oldRoot = root;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n\n  /** Regular expression to detect Opera. */\n  var reOpera = /\\bOpera/;\n\n  /** Possible global object. */\n  var thisBinding = this;\n\n  /** Used for native method references. */\n  var objectProto = Object.prototype;\n\n  /** Used to check for own properties of an object. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to resolve the internal `[[Class]]` of values. */\n  var toString = objectProto.toString;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4':  '10 Technical Preview',\n      '6.3':  '8.1',\n      '6.2':  '8',\n      '6.1':  'Server 2008 R2 / 7',\n      '6.0':  'Server 2008 / Vista',\n      '5.2':  'Server 2003 / XP 64-bit',\n      '5.1':  'XP',\n      '5.01': '2000 SP1',\n      '5.0':  '2000',\n      '4.0':  'NT',\n      '4.90': 'ME'\n    };\n    // Detect Windows version from platform tokens.\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&\n        (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    }\n    // Correct character case and cleanup string.\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(\n      os.replace(/ ce$/i, ' CE')\n        .replace(/\\bhpw/i, 'web')\n        .replace(/\\bMacintosh\\b/, 'Mac OS')\n        .replace(/_PowerPC\\b/i, ' OS')\n        .replace(/\\b(OS X) [^ \\d]+/i, '$1')\n        .replace(/\\bMac (OS X)\\b/, '$1')\n        .replace(/\\/(\\d)/, ' $1')\n        .replace(/_/g, '.')\n        .replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '')\n        .replace(/\\bx86\\.64\\b/gi, 'x86_64')\n        .replace(/\\b(Windows Phone) OS\\b/, '$1')\n        .replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1')\n        .split(' on ')[0]\n    );\n\n    return os;\n  }\n\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string)\n      ? string\n      : capitalize(string);\n  }\n\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n  function getClassOf(value) {\n    return value == null\n      ? capitalize(value)\n      : toString.call(value).slice(8, -1);\n  }\n\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) &&\n      (type == 'object' ? !!object[property] : true);\n  }\n\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function(value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n  function parse(ua) {\n\n    /** The environment context object. */\n    var context = root;\n\n    /** Used to flag when a custom context is provided. */\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';\n\n    // Juggle arguments.\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n\n    /** Browser navigator object. */\n    var nav = context.navigator || {};\n\n    /** Browser user agent string. */\n    var userAgent = nav.userAgent || '';\n\n    ua || (ua = userAgent);\n\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n\n    /** Used to detect if browser is like Chrome. */\n    var likeChrome = isCustomContext\n      ? !!nav.likeChrome\n      : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n\n    /** Internal `[[Class]]` value shortcuts. */\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n\n    /** Detect Java environments. */\n    var java = /\\bJava/.test(javaClass) && context.java;\n\n    /** Detect Rhino. */\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n\n    /** A character to represent alpha. */\n    var alpha = java ? 'a' : '\\u03b1';\n\n    /** A character to represent beta. */\n    var beta = java ? 'b' : '\\u03b2';\n\n    /** Browser document object. */\n    var doc = context.document || {};\n\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n    var opera = context.operamini || context.opera;\n\n    /** Opera `[[Class]]`. */\n    var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))\n      ? operaClass\n      : (opera = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n    var data;\n\n    /** The CPU architecture. */\n    var arch = ua;\n\n    /** Platform description array. */\n    var description = [];\n\n    /** Platform alpha/beta indicator. */\n    var prerelease = null;\n\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n    var useFeatures = ua == userAgent;\n\n    /** The browser/environment version. */\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n    var isSpecialCasedOS;\n\n    /* Detectable layout engines (order is important). */\n    var layout = getLayout([\n      { 'label': 'EdgeHTML', 'pattern': 'Edge' },\n      'Trident',\n      { 'label': 'WebKit', 'pattern': 'AppleWebKit' },\n      'iCab',\n      'Presto',\n      'NetFront',\n      'Tasman',\n      'KHTML',\n      'Gecko'\n    ]);\n\n    /* Detectable browser names (order is important). */\n    var name = getName([\n      'Adobe AIR',\n      'Arora',\n      'Avant Browser',\n      'Breach',\n      'Camino',\n      'Electron',\n      'Epiphany',\n      'Fennec',\n      'Flock',\n      'Galeon',\n      'GreenBrowser',\n      'iCab',\n      'Iceweasel',\n      'K-Meleon',\n      'Konqueror',\n      'Lunascape',\n      'Maxthon',\n      { 'label': 'Microsoft Edge', 'pattern': 'Edge' },\n      'Midori',\n      'Nook Browser',\n      'PaleMoon',\n      'PhantomJS',\n      'Raven',\n      'Rekonq',\n      'RockMelt',\n      { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },\n      'SeaMonkey',\n      { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Sleipnir',\n      'SlimBrowser',\n      { 'label': 'SRWare Iron', 'pattern': 'Iron' },\n      'Sunrise',\n      'Swiftfox',\n      'Waterfox',\n      'WebPositive',\n      'Opera Mini',\n      { 'label': 'Opera Mini', 'pattern': 'OPiOS' },\n      'Opera',\n      { 'label': 'Opera', 'pattern': 'OPR' },\n      'Chrome',\n      { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },\n      { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },\n      { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },\n      { 'label': 'IE', 'pattern': 'IEMobile' },\n      { 'label': 'IE', 'pattern': 'MSIE' },\n      'Safari'\n    ]);\n\n    /* Detectable products (order is important). */\n    var product = getProduct([\n      { 'label': 'BlackBerry', 'pattern': 'BB10' },\n      'BlackBerry',\n      { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },\n      { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },\n      { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },\n      { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },\n      { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },\n      { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },\n      { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },\n      { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },\n      { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },\n      'Google TV',\n      'Lumia',\n      'iPad',\n      'iPod',\n      'iPhone',\n      'Kindle',\n      { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },\n      'Nexus',\n      'Nook',\n      'PlayBook',\n      'PlayStation Vita',\n      'PlayStation',\n      'TouchPad',\n      'Transformer',\n      { 'label': 'Wii U', 'pattern': 'WiiU' },\n      'Wii',\n      'Xbox One',\n      { 'label': 'Xbox 360', 'pattern': 'Xbox' },\n      'Xoom'\n    ]);\n\n    /* Detectable manufacturers. */\n    var manufacturer = getManufacturer({\n      'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },\n      'Archos': {},\n      'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },\n      'Asus': { 'Transformer': 1 },\n      'Barnes & Noble': { 'Nook': 1 },\n      'BlackBerry': { 'PlayBook': 1 },\n      'Google': { 'Google TV': 1, 'Nexus': 1 },\n      'HP': { 'TouchPad': 1 },\n      'HTC': {},\n      'LG': {},\n      'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },\n      'Motorola': { 'Xoom': 1 },\n      'Nintendo': { 'Wii U': 1,  'Wii': 1 },\n      'Nokia': { 'Lumia': 1 },\n      'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },\n      'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 }\n    });\n\n    /* Detectable operating systems (order is important). */\n    var os = getOS([\n      'Windows Phone',\n      'Android',\n      'CentOS',\n      { 'label': 'Chrome OS', 'pattern': 'CrOS' },\n      'Debian',\n      'Fedora',\n      'FreeBSD',\n      'Gentoo',\n      'Haiku',\n      'Kubuntu',\n      'Linux Mint',\n      'OpenBSD',\n      'Red Hat',\n      'SuSE',\n      'Ubuntu',\n      'Xubuntu',\n      'Cygwin',\n      'Symbian OS',\n      'hpwOS',\n      'webOS ',\n      'webOS',\n      'Tablet OS',\n      'Tizen',\n      'Linux',\n      'Mac OS X',\n      'Macintosh',\n      'Mac',\n      'Windows 98;',\n      'Windows '\n    ]);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n    function getLayout(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n    function getManufacturer(guesses) {\n      return reduce(guesses, function(result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (\n          value[product] ||\n          value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] ||\n          RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)\n        ) && key;\n      });\n    }\n\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n    function getName(guesses) {\n      return reduce(guesses, function(result, guess) {\n        return result || RegExp('\\\\b' + (\n          guess.pattern || qualify(guess)\n        ) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n    function getOS(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua)\n            )) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n    function getProduct(guesses) {\n      return reduce(guesses, function(result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n        if (!result && (result =\n              RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) ||\n              RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua)\n            )) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          }\n          // Correct character case and cleanup string.\n          guess = guess.label || guess;\n          result = format(result[0]\n            .replace(RegExp(pattern, 'i'), guess)\n            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')\n            .replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n    function getVersion(patterns) {\n      return reduce(patterns, function(result, pattern) {\n        return result || (RegExp(pattern +\n          '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n    function toStringPlatform() {\n      return this.description || '';\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Convert layout to an array so we can add extra details.\n    layout && (layout = [layout]);\n\n    // Detect product names that contain their manufacturer's name.\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    }\n    // Clean up Google TV.\n    if ((data = /\\bGoogle TV\\b/.exec(product))) {\n      product = data[0];\n    }\n    // Detect simulators.\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    }\n    // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    }\n    // Detect IE Mobile 11.\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    }\n    // Detect iOS.\n    else if (/^iP/.test(product)) {\n      name || (name = 'Safari');\n      os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua))\n        ? ' ' + data[1].replace(/_/g, '.')\n        : '');\n    }\n    // Detect Kubuntu.\n    else if (name == 'Konqueror' && !/buntu/i.test(os)) {\n      os = 'Kubuntu';\n    }\n    // Detect Android browsers.\n    else if ((manufacturer && manufacturer != 'Google' &&\n        ((/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua)) || /\\bVita\\b/.test(product))) ||\n        (/\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua))) {\n      name = 'Android Browser';\n      os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n    }\n    // Detect Silk desktop/accelerated modes.\n    else if (name == 'Silk') {\n      if (!/\\bMobi/i.test(ua)) {\n        os = 'Android';\n        description.unshift('desktop mode');\n      }\n      if (/Accelerated *= *true/i.test(ua)) {\n        description.unshift('accelerated');\n      }\n    }\n    // Detect PaleMoon identifying as Firefox.\n    else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n      description.push('identifying as Firefox ' + data[1]);\n    }\n    // Detect Firefox OS and products running Firefox.\n    else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n      os || (os = 'Firefox OS');\n      product || (product = data[1]);\n    }\n    // Detect false positives for Firefox/Safari.\n    else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n      // Escape the `/` for Firefox 1.\n      if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n        // Clear name of false positives.\n        name = null;\n      }\n      // Reassign a generic name.\n      if ((data = product || manufacturer || os) &&\n          (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n        name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n      }\n    }\n    // Add Chrome version to description for Electron.\n    else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n      description.push('Chromium ' + data);\n    }\n    // Detect non-Opera (Presto-based) versions (order is important).\n    if (!version) {\n      version = getVersion([\n        '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$))',\n        'Version',\n        qualify(name),\n        '(?:Firefox|Minefield|NetFront)'\n      ]);\n    }\n    // Detect stubborn layout engines.\n    if ((data =\n          layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||\n          /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') ||\n          /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||\n          !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||\n          layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront'\n        )) {\n      layout = [data];\n    }\n    // Detect Windows Phone 7 desktop mode.\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    }\n    // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n      name = 'IE Mobile';\n      os = 'Windows Phone 8.x';\n      description.unshift('desktop mode');\n      version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n    }\n    // Detect IE 11 identifying as other browsers.\n    else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n      if (name) {\n        description.push('identifying as ' + name + (version ? ' ' + version : ''));\n      }\n      name = 'IE';\n      version = data[1];\n    }\n    // Leverage environment features.\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch(e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n          if (!name) {\n            name = 'Rhino';\n          }\n        }\n        else if (\n          typeof context.process == 'object' && !context.process.browser &&\n          (data = context.process)\n        ) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      }\n      // Detect Adobe AIR.\n      else if (getClassOf((data = context.runtime)) == airRuntimeClass) {\n        name = 'Adobe AIR';\n        os = data.flash.system.Capabilities.os;\n      }\n      // Detect PhantomJS.\n      else if (getClassOf((data = context.phantom)) == phantomClass) {\n        name = 'PhantomJS';\n        version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);\n      }\n      // Detect IE compatibility modes.\n      else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n        // We're in compatibility mode when the Trident version + 4 doesn't\n        // equal the document mode.\n        version = [version, doc.documentMode];\n        if ((data = +data[1] + 4) != version[1]) {\n          description.push('IE ' + version[1] + ' mode');\n          layout && (layout[1] = '');\n          version[1] = data;\n        }\n        version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n      }\n      // Detect IE 11 masking as other browsers.\n      else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n        description.push('masking as ' + name + ' ' + version);\n        name = 'IE';\n        version = '11.0';\n        layout = ['Trident'];\n        os = 'Windows';\n      }\n      os = os && format(os);\n    }\n    // Detect prerelease phases.\n    if (version && (data =\n          /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) ||\n          /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||\n          /\\bMinefield\\b/i.test(ua) && 'a'\n        )) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') +\n        (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    }\n    // Detect Firefox Mobile.\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    }\n    // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n      version = version.replace(/\\.[\\d.]+/, '.x');\n    }\n    // Detect Xbox 360 and Xbox One.\n    else if (/\\bXbox\\b/i.test(product)) {\n      if (product == 'Xbox 360') {\n        os = null;\n      }\n      if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n        description.unshift('mobile mode');\n      }\n    }\n    // Add mobile postfix.\n    else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&\n        (os == 'Windows CE' || /Mobi/i.test(ua))) {\n      name += ' Mobile';\n    }\n    // Detect IE platform preview.\n    else if (name == 'IE' && useFeatures) {\n      try {\n        if (context.external === null) {\n          description.unshift('platform preview');\n        }\n      } catch(e) {\n        description.unshift('embedded');\n      }\n    }\n    // Detect BlackBerry OS version.\n    // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n    else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data =\n          (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] ||\n          version\n        )) {\n      data = [data, /BB10/.test(ua)];\n      os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n      version = null;\n    }\n    // Detect Opera identifying/masking itself as another browser.\n    // http://www.opera.com/support/kb/view/843/\n    else if (this != forOwn && product != 'Wii' && (\n          (useFeatures && opera) ||\n          (/Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua)) ||\n          (name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os)) ||\n          (name == 'IE' && (\n            (os && !/^Win/.test(os) && version > 5.5) ||\n            /\\bWindows XP\\b/.test(os) && version > 8 ||\n            version == 8 && !/\\bTrident\\b/.test(ua)\n          ))\n        ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {\n      // When \"identifying\", the UA contains both Opera and the other browser's name.\n      data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n      if (reOpera.test(name)) {\n        if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n          os = null;\n        }\n        data = 'identify' + data;\n      }\n      // When \"masking\", the UA contains only the other browser's name.\n      else {\n        data = 'mask' + data;\n        if (operaClass) {\n          name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n        } else {\n          name = 'Opera';\n        }\n        if (/\\bIE\\b/.test(data)) {\n          os = null;\n        }\n        if (!useFeatures) {\n          version = null;\n        }\n      }\n      layout = ['Presto'];\n      description.push(data);\n    }\n    // Detect WebKit Nightly and approximate Chrome/Safari versions.\n    if ((data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data];\n      // Nightly builds are postfixed with a \"+\".\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      }\n      // Clear incorrect browser versions.\n      else if (version == data[1] ||\n          version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n        version = null;\n      }\n      // Use the full Chrome version when available.\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1];\n      // Detect Blink layout engine.\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      }\n      // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n      if (!useFeatures || (!likeChrome && !data[1])) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      }\n      // Add the postfix of \".x\" or \"+\" for approximate versions.\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));\n      // Obscure version for some Safari 1-2 releases.\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      }\n    }\n    // Detect Opera desktop modes.\n    if (name == 'Opera' &&  (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    }\n    // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n      description.unshift('desktop mode');\n      name = 'Chrome Mobile';\n      version = null;\n\n      if (/\\bOS X\\b/.test(os)) {\n        manufacturer = 'Apple';\n        os = 'iOS 4.3+';\n      } else {\n        os = null;\n      }\n    }\n    // Strip incorrect OS versions.\n    if (version && version.indexOf((data = /[\\d.]+$/.exec(os))) == 0 &&\n        ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    }\n    // Add layout engine.\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (\n        /Browser|Lunascape|Maxthon/.test(name) ||\n        name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) ||\n        /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    }\n    // Combine contextual information.\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    }\n    // Append manufacturer to description.\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    }\n    // Append product to description.\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    }\n    // Parse the OS into an object.\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function() {\n          var version = this.version;\n          return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    }\n    // Add browser/OS architecture.\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n      if (\n          name && (/\\bWOW64\\b/i.test(ua) ||\n          (useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua)))\n      ) {\n        description.unshift('32-bit');\n      }\n    }\n    // Chrome 39 and above on OS X is always 64-bit.\n    else if (\n        os && /^OS X/.test(os.family) &&\n        name == 'Chrome' && parseFloat(version) >= 39\n    ) {\n      os.architecture = 64;\n    }\n\n    ua || (ua = null);\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n    var platform = {};\n\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.description = ua;\n\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.layout = layout && layout[0];\n\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.manufacturer = manufacturer;\n\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.name = name;\n\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.prerelease = prerelease;\n\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.product = product;\n\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.ua = ua;\n\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n    platform.version = name && version;\n\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n    platform.os = os || {\n\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\n       * \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function() { return 'null'; }\n    };\n\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n    if (platform.name) {\n      description.unshift(name);\n    }\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n    return platform;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export platform.\n  var platform = parse();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform;\n\n    // Define as an anonymous module so platform can be aliased through path mapping.\n    define(function() {\n      return platform;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for CommonJS support.\n    forOwn(platform, function(value, key) {\n      freeExports[key] = value;\n    });\n  }\n  else {\n    // Export to the global object.\n    root.platform = platform;\n  }\n}.call(this));\n"]},"metadata":{},"sourceType":"script"}