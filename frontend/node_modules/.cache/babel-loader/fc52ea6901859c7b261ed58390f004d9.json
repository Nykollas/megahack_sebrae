{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar LocalAudioTrackStats = require('./localaudiotrackstats');\n\nvar LocalVideoTrackStats = require('./localvideotrackstats');\n\nvar RemoteAudioTrackStats = require('./remoteaudiotrackstats');\n\nvar RemoteVideoTrackStats = require('./remotevideotrackstats');\n/**\n * Statistics report for an RTCPeerConnection.\n * @property {string} peerConnectionId - ID of the RTCPeerConnection\n * @property {Array<LocalAudioTrackStats>} localAudioTrackStats - List of {@link LocalAudioTrackStats}\n * @property {Array<LocalVideoTrackStats>} localVideoTrackStats - List of {@link LocalVideoTrackStats}\n * @property {Array<RemoteAudioTrackStats>} remoteAudioTrackStats - List of {@link RemoteAudioTrackStats}\n * @property {Array<RemoteVideoTrackStats>} remoteVideoTrackStats - List of {@link RemoteVideoTrackStats}\n */\n\n\nvar StatsReport =\n/**\n * @param {string} peerConnectionId - RTCPeerConnection ID\n * @param {StandardizedStatsResponse} statsResponse\n */\nfunction StatsReport(peerConnectionId, statsResponse) {\n  _classCallCheck(this, StatsReport);\n\n  if (typeof peerConnectionId !== 'string') {\n    throw new Error('RTCPeerConnection id must be a string');\n  }\n\n  Object.defineProperties(this, {\n    peerConnectionId: {\n      value: peerConnectionId,\n      enumerable: true\n    },\n    localAudioTrackStats: {\n      value: statsResponse.localAudioTrackStats.map(function (report) {\n        return new LocalAudioTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    localVideoTrackStats: {\n      value: statsResponse.localVideoTrackStats.map(function (report) {\n        return new LocalVideoTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    remoteAudioTrackStats: {\n      value: statsResponse.remoteAudioTrackStats.map(function (report) {\n        return new RemoteAudioTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    remoteVideoTrackStats: {\n      value: statsResponse.remoteVideoTrackStats.map(function (report) {\n        return new RemoteVideoTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = StatsReport;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/stats/statsreport.js"],"names":["_classCallCheck","instance","Constructor","TypeError","LocalAudioTrackStats","require","LocalVideoTrackStats","RemoteAudioTrackStats","RemoteVideoTrackStats","StatsReport","peerConnectionId","statsResponse","Error","Object","defineProperties","value","enumerable","localAudioTrackStats","map","report","trackId","localVideoTrackStats","remoteAudioTrackStats","remoteVideoTrackStats","module","exports"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIG,qBAAqB,GAAGH,OAAO,CAAC,yBAAD,CAAnC;AAEA;;;;;;;;;;AASA,IAAII,WAAW;AACf;;;;AAIA,SAASA,WAAT,CAAqBC,gBAArB,EAAuCC,aAAvC,EAAsD;AACpDX,EAAAA,eAAe,CAAC,IAAD,EAAOS,WAAP,CAAf;;AAEA,MAAI,OAAOC,gBAAP,KAA4B,QAAhC,EAA0C;AACxC,UAAM,IAAIE,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAEDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BJ,IAAAA,gBAAgB,EAAE;AAChBK,MAAAA,KAAK,EAAEL,gBADS;AAEhBM,MAAAA,UAAU,EAAE;AAFI,KADU;AAK5BC,IAAAA,oBAAoB,EAAE;AACpBF,MAAAA,KAAK,EAAEJ,aAAa,CAACM,oBAAd,CAAmCC,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AAC9D,eAAO,IAAIf,oBAAJ,CAAyBe,MAAM,CAACC,OAAhC,EAAyCD,MAAzC,CAAP;AACD,OAFM,CADa;AAIpBH,MAAAA,UAAU,EAAE;AAJQ,KALM;AAW5BK,IAAAA,oBAAoB,EAAE;AACpBN,MAAAA,KAAK,EAAEJ,aAAa,CAACU,oBAAd,CAAmCH,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AAC9D,eAAO,IAAIb,oBAAJ,CAAyBa,MAAM,CAACC,OAAhC,EAAyCD,MAAzC,CAAP;AACD,OAFM,CADa;AAIpBH,MAAAA,UAAU,EAAE;AAJQ,KAXM;AAiB5BM,IAAAA,qBAAqB,EAAE;AACrBP,MAAAA,KAAK,EAAEJ,aAAa,CAACW,qBAAd,CAAoCJ,GAApC,CAAwC,UAAUC,MAAV,EAAkB;AAC/D,eAAO,IAAIZ,qBAAJ,CAA0BY,MAAM,CAACC,OAAjC,EAA0CD,MAA1C,CAAP;AACD,OAFM,CADc;AAIrBH,MAAAA,UAAU,EAAE;AAJS,KAjBK;AAuB5BO,IAAAA,qBAAqB,EAAE;AACrBR,MAAAA,KAAK,EAAEJ,aAAa,CAACY,qBAAd,CAAoCL,GAApC,CAAwC,UAAUC,MAAV,EAAkB;AAC/D,eAAO,IAAIX,qBAAJ,CAA0BW,MAAM,CAACC,OAAjC,EAA0CD,MAA1C,CAAP;AACD,OAFM,CADc;AAIrBH,MAAAA,UAAU,EAAE;AAJS;AAvBK,GAA9B;AA8BD,CA1CD;;AA4CAQ,MAAM,CAACC,OAAP,GAAiBhB,WAAjB","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LocalAudioTrackStats = require('./localaudiotrackstats');\nvar LocalVideoTrackStats = require('./localvideotrackstats');\nvar RemoteAudioTrackStats = require('./remoteaudiotrackstats');\nvar RemoteVideoTrackStats = require('./remotevideotrackstats');\n\n/**\n * Statistics report for an RTCPeerConnection.\n * @property {string} peerConnectionId - ID of the RTCPeerConnection\n * @property {Array<LocalAudioTrackStats>} localAudioTrackStats - List of {@link LocalAudioTrackStats}\n * @property {Array<LocalVideoTrackStats>} localVideoTrackStats - List of {@link LocalVideoTrackStats}\n * @property {Array<RemoteAudioTrackStats>} remoteAudioTrackStats - List of {@link RemoteAudioTrackStats}\n * @property {Array<RemoteVideoTrackStats>} remoteVideoTrackStats - List of {@link RemoteVideoTrackStats}\n */\n\nvar StatsReport =\n/**\n * @param {string} peerConnectionId - RTCPeerConnection ID\n * @param {StandardizedStatsResponse} statsResponse\n */\nfunction StatsReport(peerConnectionId, statsResponse) {\n  _classCallCheck(this, StatsReport);\n\n  if (typeof peerConnectionId !== 'string') {\n    throw new Error('RTCPeerConnection id must be a string');\n  }\n\n  Object.defineProperties(this, {\n    peerConnectionId: {\n      value: peerConnectionId,\n      enumerable: true\n    },\n    localAudioTrackStats: {\n      value: statsResponse.localAudioTrackStats.map(function (report) {\n        return new LocalAudioTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    localVideoTrackStats: {\n      value: statsResponse.localVideoTrackStats.map(function (report) {\n        return new LocalVideoTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    remoteAudioTrackStats: {\n      value: statsResponse.remoteAudioTrackStats.map(function (report) {\n        return new RemoteAudioTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    },\n    remoteVideoTrackStats: {\n      value: statsResponse.remoteVideoTrackStats.map(function (report) {\n        return new RemoteVideoTrackStats(report.trackId, report);\n      }),\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = StatsReport;"]},"metadata":{},"sourceType":"script"}