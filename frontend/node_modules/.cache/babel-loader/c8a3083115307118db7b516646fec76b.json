{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport throttle from 'lodash.throttle';\nexport default function useIsUserActive() {\n  const [isUserActive, setIsUserActive] = useState(true);\n  const timeoutIDRef = useRef(0);\n  useEffect(() => {\n    const handleUserActivity = throttle(() => {\n      setIsUserActive(true);\n      clearTimeout(timeoutIDRef.current);\n      const timeoutID = window.setTimeout(() => setIsUserActive(false), 5000);\n      timeoutIDRef.current = timeoutID;\n    }, 500);\n    handleUserActivity();\n    window.addEventListener('mousemove', handleUserActivity);\n    window.addEventListener('click', handleUserActivity);\n    window.addEventListener('keydown', handleUserActivity);\n    return () => {\n      window.removeEventListener('mousemove', handleUserActivity);\n      window.removeEventListener('click', handleUserActivity);\n      window.removeEventListener('keydown', handleUserActivity);\n      clearTimeout(timeoutIDRef.current);\n    };\n  }, []);\n  return isUserActive;\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/Controls/useIsUserActive/useIsUserActive.ts"],"names":["useEffect","useRef","useState","throttle","useIsUserActive","isUserActive","setIsUserActive","timeoutIDRef","handleUserActivity","clearTimeout","current","timeoutID","window","setTimeout","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMK,YAAY,GAAGN,MAAM,CAAC,CAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,kBAAkB,GAAGL,QAAQ,CAAC,MAAM;AACxCG,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAG,MAAAA,YAAY,CAACF,YAAY,CAACG,OAAd,CAAZ;AACA,YAAMC,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAMP,eAAe,CAAC,KAAD,CAAvC,EAAgD,IAAhD,CAAlB;AACAC,MAAAA,YAAY,CAACG,OAAb,GAAuBC,SAAvB;AACD,KALkC,EAKhC,GALgC,CAAnC;AAOAH,IAAAA,kBAAkB;AAElBI,IAAAA,MAAM,CAACE,gBAAP,CAAwB,WAAxB,EAAqCN,kBAArC;AACAI,IAAAA,MAAM,CAACE,gBAAP,CAAwB,OAAxB,EAAiCN,kBAAjC;AACAI,IAAAA,MAAM,CAACE,gBAAP,CAAwB,SAAxB,EAAmCN,kBAAnC;AACA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACG,mBAAP,CAA2B,WAA3B,EAAwCP,kBAAxC;AACAI,MAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCP,kBAApC;AACAI,MAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsCP,kBAAtC;AACAC,MAAAA,YAAY,CAACF,YAAY,CAACG,OAAd,CAAZ;AACD,KALD;AAMD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SAAOL,YAAP;AACD","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport throttle from 'lodash.throttle';\n\nexport default function useIsUserActive() {\n  const [isUserActive, setIsUserActive] = useState(true);\n  const timeoutIDRef = useRef(0);\n\n  useEffect(() => {\n    const handleUserActivity = throttle(() => {\n      setIsUserActive(true);\n      clearTimeout(timeoutIDRef.current);\n      const timeoutID = window.setTimeout(() => setIsUserActive(false), 5000);\n      timeoutIDRef.current = timeoutID;\n    }, 500);\n\n    handleUserActivity();\n\n    window.addEventListener('mousemove', handleUserActivity);\n    window.addEventListener('click', handleUserActivity);\n    window.addEventListener('keydown', handleUserActivity);\n    return () => {\n      window.removeEventListener('mousemove', handleUserActivity);\n      window.removeEventListener('click', handleUserActivity);\n      window.removeEventListener('keydown', handleUserActivity);\n      clearTimeout(timeoutIDRef.current);\n    };\n  }, []);\n\n  return isUserActive;\n}\n"]},"metadata":{},"sourceType":"module"}