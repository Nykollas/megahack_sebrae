{"ast":null,"code":"import { SET_PASSWORD, SET_EMAIL, SET_LOGIN_LABEL, OPEN_DRAWER, IS_INSIDE_DRAWER, SET_ADD, SET_ID, SET_ADD_DATA, SET_UPDATE_DATA, ADD_EMPRESA, DEL_EMPRESA, SET_LAST_EMPRESA, UPDATE_EMPRESA, SET_UPDATE, CLEAN_EMPRESAS, CLEAN_CREDENTIALS } from './actions';\nconst initialState = {\n  id: \"\",\n  password: \"\",\n  email: \"\",\n  login_label: \"\",\n  drawer_open: undefined,\n  is_inside_drawer: \"\",\n  adding: false,\n  editing: false,\n  empresas: new Array(),\n  editIndex: 0,\n  add_data: {\n    _id: \"\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    street: \"\",\n    place: \"\",\n    city: \"\",\n    uf: \"\"\n  },\n  update_data: {\n    _id: \"\",\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    street: \"\",\n    place: \"\",\n    city: \"\",\n    uf: \"\"\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PASSWORD:\n      return Object.assign({}, state, {\n        password: action.password\n      });\n\n    case SET_EMAIL:\n      return Object.assign({}, state, {\n        email: action.email\n      });\n\n    case SET_LOGIN_LABEL:\n      return Object.assign({}, state, {\n        login_label: action.label\n      });\n\n    case OPEN_DRAWER:\n      return Object.assign({}, state, {\n        drawer_open: action.drawer_open\n      });\n\n    case IS_INSIDE_DRAWER:\n      return Object.assign({}, state, {\n        is_inside_drawer: action.is_inside_drawer\n      });\n\n    case SET_ADD:\n      return Object.assign({}, state, {\n        adding: action.adding\n      });\n\n    case SET_UPDATE:\n      return Object.assign({}, state, {\n        editing: action.editing,\n        editIndex: action.index\n      });\n\n    case SET_ID:\n      return Object.assign({}, state, {\n        id: action.id\n      });\n\n    case SET_ADD_DATA:\n      return Object.assign({}, state, {\n        add_data: action.add_data\n      });\n\n    case SET_UPDATE_DATA:\n      return Object.assign({}, state, {\n        update_data: action.update_data\n      });\n\n    case ADD_EMPRESA:\n      return Object.assign({}, state, {\n        empresas: [...state.empresas, action.empresa]\n      });\n\n    case SET_LAST_EMPRESA:\n      return Object.assign({}, state, {\n        empresas: state.empresas.filter((val, index, arr) => {\n          if (index != arr.length - 1) {\n            return val;\n          } else {\n            return action.empresa;\n          }\n        })\n      });\n\n    case UPDATE_EMPRESA:\n      return Object.assign({}, state, {\n        empresas: state.empresas.filter((val, index, arr) => {\n          if (index == action.index) {\n            return action.empresa;\n          } else {\n            return val;\n          }\n        })\n      });\n\n    case DEL_EMPRESA:\n      return Object.assign({}, state, {\n        empresas: state.empresas.filter((val, index, arr) => {\n          if (index !== action.index) {\n            return val;\n          }\n        })\n      });\n\n    case CLEAN_EMPRESAS:\n      return Object.assign({}, state, {\n        empresas: state.empresas.filter((val, index, arr) => {\n          if (index > arr.length) {\n            return;\n          }\n        })\n      });\n\n    case CLEAN_CREDENTIALS:\n      return Object.assign({}, state, {\n        email: \"\",\n        password: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/redux/reducers.js"],"names":["SET_PASSWORD","SET_EMAIL","SET_LOGIN_LABEL","OPEN_DRAWER","IS_INSIDE_DRAWER","SET_ADD","SET_ID","SET_ADD_DATA","SET_UPDATE_DATA","ADD_EMPRESA","DEL_EMPRESA","SET_LAST_EMPRESA","UPDATE_EMPRESA","SET_UPDATE","CLEAN_EMPRESAS","CLEAN_CREDENTIALS","initialState","id","password","email","login_label","drawer_open","undefined","is_inside_drawer","adding","editing","empresas","Array","editIndex","add_data","_id","name","phone","street","place","city","uf","update_data","reducer","state","action","type","Object","assign","label","index","empresa","filter","val","arr","length"],"mappings":"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","sourcesContent":["import { SET_PASSWORD,\n         SET_EMAIL,\n         SET_LOGIN_LABEL,\n         OPEN_DRAWER,\n         IS_INSIDE_DRAWER,\n         SET_ADD,\n         SET_ID,\n         SET_ADD_DATA,\n         SET_UPDATE_DATA,\n         ADD_EMPRESA,\n         DEL_EMPRESA,\n         SET_LAST_EMPRESA,\n         UPDATE_EMPRESA,\n         SET_UPDATE,\n         CLEAN_EMPRESAS,\n         CLEAN_CREDENTIALS\n     } from './actions';\n\nconst initialState = {\n\n    id:\"\",\n    password:\"\",\n    email:\"\",\n    login_label:\"\",\n    drawer_open:undefined,\n    is_inside_drawer:\"\",\n    adding:false,\n    editing:false,\n    empresas:new Array(),\n\n    editIndex:0,\n\n    add_data:{\n        _id:\"\",\n        name:\"\",\n        phone:\"\",\n        email:\"\",\n        street:\"\",\n        place:\"\",\n        city:\"\",\n        uf:\"\",\n    },\n\n    update_data:{\n        _id:\"\",\n        name:\"\",\n        phone:\"\",\n        email:\"\",\n        street:\"\",\n        place:\"\",\n        city:\"\",\n        uf:\"\",\n    },\n\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case SET_PASSWORD:\n            return Object.assign({}, state, {\n                password:action.password\n            })\n        case SET_EMAIL:\n            return Object.assign({}, state, {\n                email:action.email\n            });\n        case SET_LOGIN_LABEL:\n            return Object.assign({}, state, {\n                login_label:action.label\n            });\n        case OPEN_DRAWER:\n            return Object.assign({}, state, {\n                drawer_open:action.drawer_open\n            });\n        case IS_INSIDE_DRAWER:\n            return Object.assign({}, state, {\n                is_inside_drawer:action.is_inside_drawer\n            });\n        case SET_ADD:\n            return Object.assign({}, state, {\n                adding:action.adding\n            });\n        case SET_UPDATE:\n            return Object.assign({}, state, {\n                editing:action.editing,\n                editIndex:action.index\n            });\n        case SET_ID:\n            return Object.assign({}, state, {\n                id:action.id\n            });\n        case SET_ADD_DATA:\n            return Object.assign({}, state, {\n                add_data: action.add_data\n            });\n        case SET_UPDATE_DATA:\n                return Object.assign({}, state, {\n                update_data: action.update_data\n        });\n        case ADD_EMPRESA:\n            return Object.assign({}, state, {\n                empresas: [...state.empresas, action.empresa]\n            });\n        case SET_LAST_EMPRESA:\n            return Object.assign({}, state, {\n                empresas:state.empresas.filter( (val, index, arr) => {\n                    if(index != arr.length-1){\n                        return val;\n                    }else{\n                        return action.empresa\n                    }\n                })\n            });\n        case UPDATE_EMPRESA:\n            return Object.assign({}, state, {\n                empresas:state.empresas.filter( (val, index, arr) => {\n                    \n                    if(index == action.index){\n                        \n                        return action.empresa;\n                    }else{\n                        return val;\n                    }\n                })  \n            });\n        \n        case DEL_EMPRESA:\n            return Object.assign({}, state, {\n                empresas:state.empresas.filter( (val, index, arr) => {\n                    if(index !== action.index){\n                        return val;\n                    }\n                })\n            });\n        case CLEAN_EMPRESAS:\n            return Object.assign({}, state, {\n                empresas:state.empresas.filter( (val, index, arr) => {\n                    if(index > arr.length){\n\n                        return;\n                    }\n                })  \n            });\n        case CLEAN_CREDENTIALS:\n            return Object.assign({}, state, {email:\"\", password:\"\"});\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}