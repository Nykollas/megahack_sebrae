{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/SideMenu.js\";\nimport React, { Component } from 'react'; //import Illustration from '../assets/images/drawericon'; \n\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\nimport { withRouter } from 'react-router';\nimport DrawerOption from './DrawerOption';\n\nclass Drawer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isInside: false,\n      firstMount: false\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        firstMount: true\n      });\n      const {\n        openDrawer,\n        history\n      } = this.props;\n\n      document.onmousedown = event => {\n        //Previne que o drawer abra na página de login            \n        const {\n          drawer_open\n        } = this.props;\n        const drawerRef = this.drawerRef;\n        const clickedNode = event.target;\n\n        if (drawerRef !== clickedNode && !drawerRef.contains(clickedNode) && drawer_open) {\n          openDrawer(false);\n        }\n      };\n    };\n\n    this.isDrawerOpen = () => {\n      const {\n        drawer_open,\n        history\n      } = this.props;\n      const {\n        firstMount\n      } = this.state;\n\n      if (drawer_open == undefined) {\n        return \"\";\n      }\n\n      const {\n        pathname\n      } = history.location;\n\n      if (pathname == \"/login\") {\n        return \"\";\n      }\n\n      if (firstMount == false) {\n        const isDrawerOpen = drawer_open ? \"open-drawer\" : \"close-drawer\";\n        return isDrawerOpen;\n      } else {\n        const isDrawerOpen = drawer_open ? \"open-drawer\" : \"\";\n        return isDrawerOpen;\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: comp => {\n          return this.drawerRef = comp;\n        },\n        className: 'drawer-container ' + this.isDrawerOpen(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer-header-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer-body-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DrawerOption, {\n        navigateTo: \"/home\",\n        label: \"Dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DrawerOption, {\n        navigateTo: \"/turmas\",\n        label: \"Turmas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DrawerOption, {\n        navigateTo: \"/avaliacoes\",\n        label: \"Avaliações\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DrawerOption, {\n        navigateTo: \"/calendario\",\n        label: \"Calendário\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DrawerOption, {\n        navigateTo: \"/logout\",\n        label: \"Sair\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      })));\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawer_open: state.drawer_open\n});\n\nconst mapDispatchToProps = actions;\nconst reduxConnected = connect(mapStateToProps, mapDispatchToProps)(Drawer);\nexport default withRouter(reduxConnected);","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/SideMenu.js"],"names":["React","Component","connect","actions","withRouter","DrawerOption","Drawer","constructor","props","state","isInside","firstMount","componentDidMount","setState","openDrawer","history","document","onmousedown","event","drawer_open","drawerRef","clickedNode","target","contains","isDrawerOpen","undefined","pathname","location","render","comp","mapStateToProps","mapDispatchToProps","reduxConnected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Illustration from '../assets/images/drawericon'; \nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\n\nimport { withRouter } from 'react-router';\n\nimport DrawerOption from './DrawerOption';\n\nclass Drawer extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    state = { isInside:false, firstMount:false }\n\n    componentDidMount = () => {\n        this.setState({firstMount:true});\n        const { openDrawer, history } = this.props;\n        document.onmousedown = (event) => {\n            //Previne que o drawer abra na página de login            \n            const { drawer_open }  = this.props;\n            const drawerRef = this.drawerRef;\n            const clickedNode  = event.target;\n            if(drawerRef !== clickedNode && !drawerRef.contains(clickedNode)  && drawer_open){\n                openDrawer(false);\n            }\n        }\n    }\n    \n\n    isDrawerOpen =  () => {\n        const {drawer_open, history }  = this.props;\n        const { firstMount } = this.state;\n        if(drawer_open == undefined){\n            return \"\";\n        }\n        const { pathname } = history.location;\n        if(pathname == \"/login\"){\n            return \"\";\n        }\n        if(firstMount == false){\n            const isDrawerOpen =  drawer_open ? \"open-drawer\" : \"close-drawer\"; \n            return isDrawerOpen;\n        }else{\n            const isDrawerOpen =  drawer_open ? \"open-drawer\" : \"\"; \n            return isDrawerOpen;\n        }\n    }\n\n    render = () => {\n\n        return(\n            <div  \n                  ref ={comp => {return this.drawerRef = comp}}\n                  className={ 'drawer-container '+ this.isDrawerOpen()  }>\n                <div className=\"drawer-header-container\">\n                        {//<Illustration height={200} width={200}></Illustration>\n                        }\n                </div>\n                <div className={\"drawer-body-container\"}>\n                    <DrawerOption navigateTo=\"/home\" label={ \"Dashboard\" }></DrawerOption>\n                    <DrawerOption navigateTo=\"/turmas\" label={ \"Turmas\" }></DrawerOption>\n                    <DrawerOption navigateTo=\"/avaliacoes\" label={ \"Avaliações\" }></DrawerOption>\n                    <DrawerOption navigateTo=\"/calendario\" label={\"Calendário\"}></DrawerOption>\n                    <DrawerOption navigateTo=\"/logout\" label={\"Sair\"}></DrawerOption>\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => \n    ({\n        drawer_open:state.drawer_open\n    });\n\n\nconst mapDispatchToProps = actions;\n\nconst reduxConnected = connect(mapStateToProps, mapDispatchToProps)(Drawer); \n\nexport default withRouter(reduxConnected);\n"]},"metadata":{},"sourceType":"module"}