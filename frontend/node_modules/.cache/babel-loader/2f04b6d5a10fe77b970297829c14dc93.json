{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/AudioLevelIndicator/AudioLevelIndicator.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { interval } from 'd3-timer';\nimport MicOff from '@material-ui/icons/MicOff';\nimport useIsTrackEnabled from '../../hooks/useIsTrackEnabled/useIsTrackEnabled';\nlet clipId = 0;\n\nconst getUniqueClipId = () => clipId++; // @ts-ignore\n\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nlet audioContext;\nexport function initializeAnalyser(audioTrack) {\n  audioContext = audioContext || new AudioContext();\n  const stream = new MediaStream([audioTrack.mediaStreamTrack.clone()]);\n  const audioSource = audioContext.createMediaStreamSource(stream);\n  const analyser = audioContext.createAnalyser();\n  analyser.smoothingTimeConstant = 0.4;\n  analyser.fftSize = 512;\n  audioSource.connect(analyser);\n  return analyser;\n}\n\nfunction AudioLevelIndicator({\n  size,\n  audioTrack,\n  background\n}) {\n  const SIZE = size || 24;\n  const ref = useRef(null);\n  const isTrackEnabled = useIsTrackEnabled(audioTrack);\n  useEffect(() => {\n    const SVGClipElement = ref.current;\n\n    if (audioTrack && isTrackEnabled && SVGClipElement) {\n      let analyser = initializeAnalyser(audioTrack);\n\n      const reinitializeAnalyser = () => {\n        analyser = initializeAnalyser(audioTrack);\n      }; // Here we reinitialize the AnalyserNode on focus to avoid an issue in Safari\n      // where the analysers stop functioning when the user switches to a new tab\n      // and switches back to the app.\n\n\n      window.addEventListener('focus', reinitializeAnalyser);\n      const sampleArray = new Uint8Array(analyser.frequencyBinCount);\n      const timer = interval(() => {\n        analyser.getByteFrequencyData(sampleArray);\n        let values = 0;\n        const length = sampleArray.length;\n\n        for (let i = 0; i < length; i++) {\n          values += sampleArray[i];\n        }\n\n        const volume = Math.min(21, Math.max(0, Math.log10(values / length / 3) * 14));\n        SVGClipElement === null || SVGClipElement === void 0 ? void 0 : SVGClipElement.setAttribute('y', String(21 - volume));\n      }, 50);\n      return () => {\n        SVGClipElement.setAttribute('y', '21');\n        timer.stop();\n        window.removeEventListener('focus', reinitializeAnalyser);\n      };\n    }\n  }, [audioTrack, isTrackEnabled]); // Each instance of this component will need a unique HTML ID\n\n  const clipPathId = `audio-level-clip-${getUniqueClipId()}`;\n  return isTrackEnabled ? /*#__PURE__*/React.createElement(\"svg\", {\n    focusable: \"false\",\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": \"true\",\n    height: `${SIZE}px`,\n    width: `${SIZE}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    ref: ref,\n    x: \"0\",\n    y: \"21\",\n    width: \"24\",\n    height: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"path\", {\n    fill: background || 'rgba(255, 255, 255, 0.1)',\n    d: \"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#0c0\",\n    clipPath: `url(#${clipPathId})`,\n    d: \"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(MicOff, {\n    height: `${SIZE}px`,\n    width: `${SIZE}px`,\n    style: {\n      width: 'initial',\n      height: 'initial'\n    },\n    \"data-cy-audio-mute-icon\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default React.memo(AudioLevelIndicator);","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/AudioLevelIndicator/AudioLevelIndicator.tsx"],"names":["React","useEffect","useRef","interval","MicOff","useIsTrackEnabled","clipId","getUniqueClipId","AudioContext","window","webkitAudioContext","audioContext","initializeAnalyser","audioTrack","stream","MediaStream","mediaStreamTrack","clone","audioSource","createMediaStreamSource","analyser","createAnalyser","smoothingTimeConstant","fftSize","connect","AudioLevelIndicator","size","background","SIZE","ref","isTrackEnabled","SVGClipElement","current","reinitializeAnalyser","addEventListener","sampleArray","Uint8Array","frequencyBinCount","timer","getByteFrequencyData","values","length","i","volume","Math","min","max","log10","setAttribute","String","stop","removeEventListener","clipPathId","width","height","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { AudioTrack, LocalAudioTrack, RemoteAudioTrack } from 'twilio-video';\nimport { interval } from 'd3-timer';\nimport MicOff from '@material-ui/icons/MicOff';\nimport useIsTrackEnabled from '../../hooks/useIsTrackEnabled/useIsTrackEnabled';\n\nlet clipId = 0;\nconst getUniqueClipId = () => clipId++;\n\n// @ts-ignore\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nlet audioContext: AudioContext;\n\nexport function initializeAnalyser(audioTrack: AudioTrack) {\n  audioContext = audioContext || new AudioContext();\n  const stream = new MediaStream([audioTrack.mediaStreamTrack.clone()]);\n  const audioSource = audioContext.createMediaStreamSource(stream);\n\n  const analyser = audioContext.createAnalyser();\n  analyser.smoothingTimeConstant = 0.4;\n  analyser.fftSize = 512;\n\n  audioSource.connect(analyser);\n  return analyser;\n}\n\nfunction AudioLevelIndicator({\n  size,\n  audioTrack,\n  background,\n}: {\n  size?: number;\n  audioTrack?: AudioTrack;\n  background?: string;\n}) {\n  const SIZE = size || 24;\n  const ref = useRef<SVGRectElement>(null);\n  const isTrackEnabled = useIsTrackEnabled(audioTrack as LocalAudioTrack | RemoteAudioTrack);\n\n  useEffect(() => {\n    const SVGClipElement = ref.current;\n\n    if (audioTrack && isTrackEnabled && SVGClipElement) {\n      let analyser = initializeAnalyser(audioTrack);\n\n      const reinitializeAnalyser = () => {\n        analyser = initializeAnalyser(audioTrack);\n      };\n\n      // Here we reinitialize the AnalyserNode on focus to avoid an issue in Safari\n      // where the analysers stop functioning when the user switches to a new tab\n      // and switches back to the app.\n      window.addEventListener('focus', reinitializeAnalyser);\n\n      const sampleArray = new Uint8Array(analyser.frequencyBinCount);\n\n      const timer = interval(() => {\n        analyser.getByteFrequencyData(sampleArray);\n        let values = 0;\n\n        const length = sampleArray.length;\n        for (let i = 0; i < length; i++) {\n          values += sampleArray[i];\n        }\n\n        const volume = Math.min(21, Math.max(0, Math.log10(values / length / 3) * 14));\n\n        SVGClipElement?.setAttribute('y', String(21 - volume));\n      }, 50);\n\n      return () => {\n        SVGClipElement.setAttribute('y', '21');\n        timer.stop();\n        window.removeEventListener('focus', reinitializeAnalyser);\n      };\n    }\n  }, [audioTrack, isTrackEnabled]);\n\n  // Each instance of this component will need a unique HTML ID\n  const clipPathId = `audio-level-clip-${getUniqueClipId()}`;\n\n  return isTrackEnabled ? (\n    <svg focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" height={`${SIZE}px`} width={`${SIZE}px`}>\n      <defs>\n        <clipPath id={clipPathId}>\n          <rect ref={ref} x=\"0\" y=\"21\" width=\"24\" height=\"24\" />\n        </clipPath>\n      </defs>\n      <path\n        fill={background || 'rgba(255, 255, 255, 0.1)'}\n        d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"\n      ></path>\n      <path\n        fill=\"#0c0\"\n        clipPath={`url(#${clipPathId})`}\n        d=\"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"\n      ></path>\n    </svg>\n  ) : (\n    <MicOff\n      height={`${SIZE}px`}\n      width={`${SIZE}px`}\n      style={{ width: 'initial', height: 'initial' }}\n      data-cy-audio-mute-icon\n    />\n  );\n}\n\nexport default React.memo(AudioLevelIndicator);\n"]},"metadata":{},"sourceType":"module"}