{"ast":null,"code":"\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar member_1 = require(\"../member\");\n\nvar logger_1 = require(\"../logger\");\n\nvar log = logger_1.Logger.scope('Members');\n/**\n * @classdesc Represents the collection of members for the channel\n * @fires Members#memberJoined\n * @fires Members#memberLeft\n * @fires Members#memberUpdated\n */\n\nvar Members = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Members, _events_1$EventEmitte);\n\n  function Members(channel, services, members) {\n    (0, _classCallCheck3.default)(this, Members);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Members.__proto__ || (0, _getPrototypeOf2.default)(Members)).call(this));\n\n    _this.services = services;\n    _this.channel = channel;\n    _this.members = members;\n    return _this;\n  }\n\n  (0, _createClass3.default)(Members, [{\n    key: \"unsubscribe\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n        var entity;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.rosterEntityPromise) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.rosterEntityPromise;\n\n              case 3:\n                entity = _context.sent;\n                entity.close();\n                this.rosterEntityPromise = null;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function unsubscribe() {\n        return _ref.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(rosterObjectName) {\n      var _this2 = this;\n\n      return this.rosterEntityPromise = this.rosterEntityPromise || this.services.syncClient.map({\n        id: rosterObjectName,\n        mode: 'open_existing'\n      }).then(function (rosterMap) {\n        rosterMap.on('itemAdded', function (args) {\n          log.debug(_this2.channel.sid + ' itemAdded: ' + args.item.key);\n\n          _this2.upsertMember(args.item.key, args.item.value).then(function (member) {\n            _this2.emit('memberJoined', member);\n          });\n        });\n        rosterMap.on('itemRemoved', function (args) {\n          log.debug(_this2.channel.sid + ' itemRemoved: ' + args.key);\n          var memberSid = args.key;\n\n          if (!_this2.members.has(memberSid)) {\n            return;\n          }\n\n          var leftMember = _this2.members.get(memberSid);\n\n          _this2.members.delete(memberSid);\n\n          _this2.emit('memberLeft', leftMember);\n        });\n        rosterMap.on('itemUpdated', function (args) {\n          log.debug(_this2.channel.sid + ' itemUpdated: ' + args.item.key);\n\n          _this2.upsertMember(args.item.key, args.item.value);\n        });\n        var membersPromises = [];\n        var that = _this2;\n\n        var rosterMapHandler = function rosterMapHandler(paginator) {\n          paginator.items.forEach(function (item) {\n            membersPromises.push(that.upsertMember(item.key, item.value));\n          });\n          return paginator.hasNextPage ? paginator.nextPage().then(rosterMapHandler) : null;\n        };\n\n        return rosterMap.getItems().then(rosterMapHandler).then(function () {\n          return _promise2.default.all(membersPromises);\n        }).then(function () {\n          return rosterMap;\n        });\n      }).catch(function (err) {\n        _this2.rosterEntityPromise = null;\n\n        if (_this2.services.syncClient.connectionState != 'disconnected') {\n          log.error('Failed to get roster object for channel', _this2.channel.sid, err);\n        }\n\n        log.debug('ERROR: Failed to get roster object for channel', _this2.channel.sid, err);\n        throw err;\n      });\n    }\n  }, {\n    key: \"upsertMember\",\n    value: function () {\n      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(memberSid, data) {\n        var _this3 = this;\n\n        var member;\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                member = this.members.get(memberSid);\n\n                if (!member) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", member._update(data));\n\n              case 3:\n                member = new member_1.Member(this.services, this.channel, data, memberSid);\n                this.members.set(memberSid, member);\n                member.on('updated', function (args) {\n                  return _this3.emit('memberUpdated', args);\n                });\n                return _context2.abrupt(\"return\", member);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function upsertMember(_x, _x2) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return upsertMember;\n    }()\n    /**\n     * @returns {Promise<Array<Member>>} returns list of members {@see Member}\n     */\n\n  }, {\n    key: \"getMembers\",\n    value: function getMembers() {\n      var _this4 = this;\n\n      return this.rosterEntityPromise.then(function () {\n        var members = [];\n\n        _this4.members.forEach(function (member) {\n          return members.push(member);\n        });\n\n        return members;\n      });\n    }\n    /**\n     * Get member by SID from channel\n     * @returns {Promise<|Error>}\n     */\n\n  }, {\n    key: \"getMemberBySid\",\n    value: function () {\n      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(memberSid) {\n        var _this5 = this;\n\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                  var member = _this5.members.get(memberSid);\n\n                  if (!member) {\n                    throw new Error('Member with SID ' + memberSid + ' was not found');\n                  }\n\n                  return member;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getMemberBySid(_x3) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return getMemberBySid;\n    }()\n    /**\n     * Get member by identity from channel\n     * @returns {Promise<|Error>}\n     */\n\n  }, {\n    key: \"getMemberByIdentity\",\n    value: function () {\n      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(identity) {\n        var _this6 = this;\n\n        var foundMember;\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                foundMember = null;\n                return _context4.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                  _this6.members.forEach(function (member) {\n                    if (member.identity === identity) {\n                      foundMember = member;\n                    }\n                  });\n\n                  if (!foundMember) {\n                    throw new Error('Member with identity ' + identity + ' was not found');\n                  }\n\n                  return foundMember;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getMemberByIdentity(_x4) {\n        return _ref4.apply(this, arguments);\n      }\n\n      return getMemberByIdentity;\n    }()\n    /**\n     * Add user to the channel\n     * @returns {Promise<void|SessionError>}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(identity) {\n      return this.services.session.addCommand('addMemberV2', {\n        channelSid: this.channel.sid,\n        username: identity\n      });\n    }\n    /**\n     * Invites user to the channel\n     * User can choose either to join or not\n     * @returns {Promise<|SessionError>}\n     */\n\n  }, {\n    key: \"invite\",\n    value: function invite(identity) {\n      return this.services.session.addCommand('inviteMember', {\n        channelSid: this.channel.sid,\n        username: identity\n      });\n    }\n    /**\n     * Remove member from channel by Identity\n     * @returns {Promise<|SessionError>}\n     */\n\n  }, {\n    key: \"removeByIdentity\",\n    value: function removeByIdentity(identity) {\n      return this.services.session.addCommand('removeMember', {\n        channelSid: this.channel.sid,\n        username: identity\n      });\n    }\n    /**\n     * Remove member from channel by sid\n     * @returns {Promise<|SessionError>}\n     */\n\n  }, {\n    key: \"removeBySid\",\n    value: function removeBySid(sid) {\n      return this.services.session.addCommand('removeMember', {\n        channelSid: this.channel.sid,\n        memberSid: sid\n      });\n    }\n  }]);\n  return Members;\n}(events_1.EventEmitter);\n\nexports.Members = Members;\n/**\n * Fired when member joined channel\n * @event Members#memberJoined\n * @type {Member}\n */\n\n/**\n * Fired when member left channel\n * @event Members#memberLeft\n * @type {Member}\n */\n\n/**\n * Fired when member updated\n * @event Members#memberUpdated\n * @type {Object}\n * @property {Member} member - Updated Member\n * @property {Member#UpdateReason[]} updateReasons - Array of Member's updated event reasons\n */","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-chat/browser/data/members.js"],"names":["_promise","require","_promise2","_interopRequireDefault","_regenerator","_regenerator2","_asyncToGenerator2","_asyncToGenerator3","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","events_1","member_1","logger_1","log","Logger","scope","Members","_events_1$EventEmitte","channel","services","members","_this","__proto__","call","key","_ref","mark","_callee","entity","wrap","_callee$","_context","prev","next","rosterEntityPromise","sent","close","stop","unsubscribe","apply","arguments","subscribe","rosterObjectName","_this2","syncClient","map","id","mode","then","rosterMap","on","args","debug","sid","item","upsertMember","member","emit","memberSid","has","leftMember","get","delete","membersPromises","that","rosterMapHandler","paginator","items","forEach","push","hasNextPage","nextPage","getItems","all","catch","err","connectionState","error","_ref2","_callee2","data","_this3","_callee2$","_context2","abrupt","_update","Member","set","_x","_x2","getMembers","_this4","_ref3","_callee3","_this5","_callee3$","_context3","Error","getMemberBySid","_x3","_ref4","_callee4","identity","_this6","foundMember","_callee4$","_context4","getMemberByIdentity","_x4","add","session","addCommand","channelSid","username","invite","removeByIdentity","removeBySid","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar member_1 = require(\"../member\");\nvar logger_1 = require(\"../logger\");\nvar log = logger_1.Logger.scope('Members');\n/**\n * @classdesc Represents the collection of members for the channel\n * @fires Members#memberJoined\n * @fires Members#memberLeft\n * @fires Members#memberUpdated\n */\n\nvar Members = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Members, _events_1$EventEmitte);\n\n    function Members(channel, services, members) {\n        (0, _classCallCheck3.default)(this, Members);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Members.__proto__ || (0, _getPrototypeOf2.default)(Members)).call(this));\n\n        _this.services = services;\n        _this.channel = channel;\n        _this.members = members;\n        return _this;\n    }\n\n    (0, _createClass3.default)(Members, [{\n        key: \"unsubscribe\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n                var entity;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (!this.rosterEntityPromise) {\n                                    _context.next = 6;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return this.rosterEntityPromise;\n\n                            case 3:\n                                entity = _context.sent;\n\n                                entity.close();\n                                this.rosterEntityPromise = null;\n\n                            case 6:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function unsubscribe() {\n                return _ref.apply(this, arguments);\n            }\n\n            return unsubscribe;\n        }()\n    }, {\n        key: \"subscribe\",\n        value: function subscribe(rosterObjectName) {\n            var _this2 = this;\n\n            return this.rosterEntityPromise = this.rosterEntityPromise || this.services.syncClient.map({ id: rosterObjectName, mode: 'open_existing' }).then(function (rosterMap) {\n                rosterMap.on('itemAdded', function (args) {\n                    log.debug(_this2.channel.sid + ' itemAdded: ' + args.item.key);\n                    _this2.upsertMember(args.item.key, args.item.value).then(function (member) {\n                        _this2.emit('memberJoined', member);\n                    });\n                });\n                rosterMap.on('itemRemoved', function (args) {\n                    log.debug(_this2.channel.sid + ' itemRemoved: ' + args.key);\n                    var memberSid = args.key;\n                    if (!_this2.members.has(memberSid)) {\n                        return;\n                    }\n                    var leftMember = _this2.members.get(memberSid);\n                    _this2.members.delete(memberSid);\n                    _this2.emit('memberLeft', leftMember);\n                });\n                rosterMap.on('itemUpdated', function (args) {\n                    log.debug(_this2.channel.sid + ' itemUpdated: ' + args.item.key);\n                    _this2.upsertMember(args.item.key, args.item.value);\n                });\n                var membersPromises = [];\n                var that = _this2;\n                var rosterMapHandler = function rosterMapHandler(paginator) {\n                    paginator.items.forEach(function (item) {\n                        membersPromises.push(that.upsertMember(item.key, item.value));\n                    });\n                    return paginator.hasNextPage ? paginator.nextPage().then(rosterMapHandler) : null;\n                };\n                return rosterMap.getItems().then(rosterMapHandler).then(function () {\n                    return _promise2.default.all(membersPromises);\n                }).then(function () {\n                    return rosterMap;\n                });\n            }).catch(function (err) {\n                _this2.rosterEntityPromise = null;\n                if (_this2.services.syncClient.connectionState != 'disconnected') {\n                    log.error('Failed to get roster object for channel', _this2.channel.sid, err);\n                }\n                log.debug('ERROR: Failed to get roster object for channel', _this2.channel.sid, err);\n                throw err;\n            });\n        }\n    }, {\n        key: \"upsertMember\",\n        value: function () {\n            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(memberSid, data) {\n                var _this3 = this;\n\n                var member;\n                return _regenerator2.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                member = this.members.get(memberSid);\n\n                                if (!member) {\n                                    _context2.next = 3;\n                                    break;\n                                }\n\n                                return _context2.abrupt(\"return\", member._update(data));\n\n                            case 3:\n                                member = new member_1.Member(this.services, this.channel, data, memberSid);\n                                this.members.set(memberSid, member);\n                                member.on('updated', function (args) {\n                                    return _this3.emit('memberUpdated', args);\n                                });\n                                return _context2.abrupt(\"return\", member);\n\n                            case 7:\n                            case \"end\":\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n\n            function upsertMember(_x, _x2) {\n                return _ref2.apply(this, arguments);\n            }\n\n            return upsertMember;\n        }()\n        /**\n         * @returns {Promise<Array<Member>>} returns list of members {@see Member}\n         */\n\n    }, {\n        key: \"getMembers\",\n        value: function getMembers() {\n            var _this4 = this;\n\n            return this.rosterEntityPromise.then(function () {\n                var members = [];\n                _this4.members.forEach(function (member) {\n                    return members.push(member);\n                });\n                return members;\n            });\n        }\n        /**\n         * Get member by SID from channel\n         * @returns {Promise<|Error>}\n         */\n\n    }, {\n        key: \"getMemberBySid\",\n        value: function () {\n            var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(memberSid) {\n                var _this5 = this;\n\n                return _regenerator2.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                return _context3.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                                    var member = _this5.members.get(memberSid);\n                                    if (!member) {\n                                        throw new Error('Member with SID ' + memberSid + ' was not found');\n                                    }\n                                    return member;\n                                }));\n\n                            case 1:\n                            case \"end\":\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            function getMemberBySid(_x3) {\n                return _ref3.apply(this, arguments);\n            }\n\n            return getMemberBySid;\n        }()\n        /**\n         * Get member by identity from channel\n         * @returns {Promise<|Error>}\n         */\n\n    }, {\n        key: \"getMemberByIdentity\",\n        value: function () {\n            var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(identity) {\n                var _this6 = this;\n\n                var foundMember;\n                return _regenerator2.default.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                foundMember = null;\n                                return _context4.abrupt(\"return\", this.rosterEntityPromise.then(function () {\n                                    _this6.members.forEach(function (member) {\n                                        if (member.identity === identity) {\n                                            foundMember = member;\n                                        }\n                                    });\n                                    if (!foundMember) {\n                                        throw new Error('Member with identity ' + identity + ' was not found');\n                                    }\n                                    return foundMember;\n                                }));\n\n                            case 2:\n                            case \"end\":\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            }));\n\n            function getMemberByIdentity(_x4) {\n                return _ref4.apply(this, arguments);\n            }\n\n            return getMemberByIdentity;\n        }()\n        /**\n         * Add user to the channel\n         * @returns {Promise<void|SessionError>}\n         */\n\n    }, {\n        key: \"add\",\n        value: function add(identity) {\n            return this.services.session.addCommand('addMemberV2', {\n                channelSid: this.channel.sid,\n                username: identity\n            });\n        }\n        /**\n         * Invites user to the channel\n         * User can choose either to join or not\n         * @returns {Promise<|SessionError>}\n         */\n\n    }, {\n        key: \"invite\",\n        value: function invite(identity) {\n            return this.services.session.addCommand('inviteMember', {\n                channelSid: this.channel.sid,\n                username: identity\n            });\n        }\n        /**\n         * Remove member from channel by Identity\n         * @returns {Promise<|SessionError>}\n         */\n\n    }, {\n        key: \"removeByIdentity\",\n        value: function removeByIdentity(identity) {\n            return this.services.session.addCommand('removeMember', {\n                channelSid: this.channel.sid,\n                username: identity\n            });\n        }\n        /**\n         * Remove member from channel by sid\n         * @returns {Promise<|SessionError>}\n         */\n\n    }, {\n        key: \"removeBySid\",\n        value: function removeBySid(sid) {\n            return this.services.session.addCommand('removeMember', {\n                channelSid: this.channel.sid,\n                memberSid: sid\n            });\n        }\n    }]);\n    return Members;\n}(events_1.EventEmitter);\n\nexports.Members = Members;\n/**\n * Fired when member joined channel\n * @event Members#memberJoined\n * @type {Member}\n */\n/**\n * Fired when member left channel\n * @event Members#memberLeft\n * @type {Member}\n */\n/**\n * Fired when member updated\n * @event Members#memberUpdated\n * @type {Object}\n * @property {Member} member - Updated Member\n * @property {Member#UpdateReason[]} updateReasons - Array of Member's updated event reasons\n */"]},"metadata":{},"sourceType":"script"}