{"ast":null,"code":"import { useState, useEffect } from 'react';\n// The 'switchedOff' event is emitted when there is not enough bandwidth to support\n// a track. See: https://www.twilio.com/docs/video/tutorials/using-bandwidth-profile-api#understanding-track-switch-offs\nexport default function useIsTrackSwitchedOff(track) {\n  const [isSwitchedOff, setIsSwitchedOff] = useState(track && track.isSwitchedOff);\n  useEffect(() => {\n    // Reset the value if the 'track' variable changes\n    setIsSwitchedOff(track && track.isSwitchedOff);\n\n    if (track) {\n      const handleSwitchedOff = () => setIsSwitchedOff(true);\n\n      const handleSwitchedOn = () => setIsSwitchedOff(false);\n\n      track.on('switchedOff', handleSwitchedOff);\n      track.on('switchedOn', handleSwitchedOn);\n      return () => {\n        track.off('switchedOff', handleSwitchedOff);\n        track.off('switchedOn', handleSwitchedOn);\n      };\n    }\n  }, [track]);\n  return !!isSwitchedOff;\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/hooks/useIsTrackSwitchedOff/useIsTrackSwitchedOff.tsx"],"names":["useState","useEffect","useIsTrackSwitchedOff","track","isSwitchedOff","setIsSwitchedOff","handleSwitchedOff","handleSwitchedOn","on","off"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAKA;AACA;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAiD;AAC9D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAAlD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,gBAAgB,CAACF,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAAhB;;AAEA,QAAID,KAAJ,EAAW;AACT,YAAMG,iBAAiB,GAAG,MAAMD,gBAAgB,CAAC,IAAD,CAAhD;;AACA,YAAME,gBAAgB,GAAG,MAAMF,gBAAgB,CAAC,KAAD,CAA/C;;AACAF,MAAAA,KAAK,CAACK,EAAN,CAAS,aAAT,EAAwBF,iBAAxB;AACAH,MAAAA,KAAK,CAACK,EAAN,CAAS,YAAT,EAAuBD,gBAAvB;AACA,aAAO,MAAM;AACXJ,QAAAA,KAAK,CAACM,GAAN,CAAU,aAAV,EAAyBH,iBAAzB;AACAH,QAAAA,KAAK,CAACM,GAAN,CAAU,YAAV,EAAwBF,gBAAxB;AACD,OAHD;AAID;AACF,GAdQ,EAcN,CAACJ,KAAD,CAdM,CAAT;AAgBA,SAAO,CAAC,CAACC,aAAT;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { LocalVideoTrack, RemoteVideoTrack } from 'twilio-video';\n\ntype TrackType = RemoteVideoTrack | LocalVideoTrack | undefined | null;\n\n// The 'switchedOff' event is emitted when there is not enough bandwidth to support\n// a track. See: https://www.twilio.com/docs/video/tutorials/using-bandwidth-profile-api#understanding-track-switch-offs\n\nexport default function useIsTrackSwitchedOff(track: TrackType) {\n  const [isSwitchedOff, setIsSwitchedOff] = useState(track && track.isSwitchedOff);\n\n  useEffect(() => {\n    // Reset the value if the 'track' variable changes\n    setIsSwitchedOff(track && track.isSwitchedOff);\n\n    if (track) {\n      const handleSwitchedOff = () => setIsSwitchedOff(true);\n      const handleSwitchedOn = () => setIsSwitchedOff(false);\n      track.on('switchedOff', handleSwitchedOff);\n      track.on('switchedOn', handleSwitchedOn);\n      return () => {\n        track.off('switchedOff', handleSwitchedOff);\n        track.off('switchedOn', handleSwitchedOn);\n      };\n    }\n  }, [track]);\n\n  return !!isSwitchedOff;\n}\n"]},"metadata":{},"sourceType":"module"}