{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/Chat/ChatApp.js\";\nimport React, { Component } from 'react';\nimport NameBox from './NameBox.js';\nimport Chat from 'twilio-chat';\nimport ChatIcon from './assets/chat';\nimport ChatIconClose from './assets/chat';\nimport ChatMessage from './ChatMessage';\nimport SubmitICon from './assets/submit';\nimport \"./style.css\";\nimport { Participant } from 'twilio-video';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openChat = () => {\n      const chatContainer = document.getElementsByClassName(\"chat-container\")[0];\n      chatContainer.classList.replace(\"chat-closed\", \"chat-opened\");\n      this.setState({\n        opened: true\n      });\n    };\n\n    this.closeChat = () => {\n      const chatContainer = document.getElementsByClassName(\"chat-container\")[0];\n      chatContainer.classList.replace(\"chat-opened\", \"chat-closed\");\n      this.setState({\n        opened: false\n      });\n    };\n\n    this.componentWillMount = () => {\n      if (this.state.loggedIn) {\n        this.getToken();\n      }\n    };\n\n    this.onNameChanged = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.logIn = event => {\n      event.preventDefault();\n\n      if (this.state.name !== '') {\n        localStorage.setItem('name', this.state.name);\n        this.setState({\n          loggedIn: true\n        }, this.getToken);\n      }\n    };\n\n    this.logOut = event => {\n      event.preventDefault();\n      this.setState({\n        name: '',\n        loggedIn: false,\n        token: '',\n        chatReady: false,\n        messages: [],\n        newMessage: ''\n      });\n      localStorage.removeItem('name');\n      this.chatClient.shutdown();\n      this.channel = null;\n    };\n\n    this.getToken = () => {\n      const header = new Headers([['Access-Control-Allow-Origin', '*']]);\n      fetch(\"http://rocky-basin-52490.herokuapp.com/token/\" + `${this.state.name}`, {\n        method: 'POST',\n        headers: header\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          token: data.token\n        }, this.initChat);\n      });\n    };\n\n    this.initChat = () => {\n      this.chatClient = new Chat(this.state.token);\n      this.chatClient.initialize().then(this.clientInitiated.bind(this));\n    };\n\n    this.clientInitiated = () => {\n      this.setState({\n        chatReady: true\n      }, () => {\n        this.chatClient.getChannelByUniqueName(this.channelName).then(channel => {\n          if (channel) {\n            return this.channel = channel;\n          }\n        }).catch(err => {\n          if (err.body.code === 50300) {\n            //Cria canal caso ele não existir\n            return this.chatClient.createChannel({\n              uniqueName: this.channelName\n            });\n          }\n        }).then(channel => {\n          this.channel = channel;\n          window.channel = channel; //Juntando se ao canal\n          //Checa se o membro já existe a partir de seu nome\n\n          const identity = this.channel.getMemberByIdentity(this.state.name);\n          console.log(identity); //Se o membro não existir adiciona ele ao canal\n\n          if (!identity) {\n            this.channel.join();\n          }\n\n          return;\n        }).then(() => {\n          //Carrega mensagens e executa o callback\n          this.channel.getMessages().then(this.messagesLoaded); //Adiciona listener ao canal messageAdded => Atualiza o canal\n\n          this.channel.on('messageAdded', this.messageAdded);\n        });\n      });\n    };\n\n    this.messagesLoaded = messagePage => {\n      this.setState({\n        messages: messagePage.items\n      });\n    };\n\n    this.messageAdded = message => {\n      this.setState((prevState, props) => ({\n        messages: [...prevState.messages, message]\n      }));\n    };\n\n    this.onMessageChanged = event => {\n      this.setState({\n        newMessage: event.target.value\n      });\n    };\n\n    this.sendMessage = event => {\n      event.preventDefault();\n      const message = this.state.newMessage;\n      this.setState({\n        newMessage: ''\n      });\n      this.channel.sendMessage(message);\n    };\n\n    this.newMessageAdded = comp => {\n      console.log(comp);\n\n      if (comp) {\n        comp._reactInternalFiber.child.stateNode.scrollIntoView();\n      }\n    };\n\n    this.state = {\n      name: \"Aluno\",\n      loggedIn,\n      token: '',\n      chatReady: false,\n      messages: [],\n      newMessage: '',\n      opened: true\n    };\n    const loggedIn = this.state.name !== '';\n    this.channelName = 'general';\n  } //Revisar essa lógica\n\n\n  render() {\n    var loginOrChat;\n    const messages = this.state.messages.map(message => {\n      return /*#__PURE__*/React.createElement(ChatMessage, {\n        ref: this.newMessageAdded,\n        key: message.sid,\n        author: message.author,\n        body: message.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      });\n    });\n    const {\n      opened\n    } = this.state;\n\n    if (this.state.loggedIn) {\n      loginOrChat = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"open-chat-icon-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, !opened ? /*#__PURE__*/React.createElement(ChatIcon, {\n        onClick: this.openChat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }) : /*#__PURE__*/React.createElement(ChatIconClose, {\n        onClick: this.closeChat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 69\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-container chat-opened\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"user-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }, this.state.name), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"messages\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, messages), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"edit-input-container\",\n        onSubmit: this.sendMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"edit-input\",\n        type: \"text\",\n        name: \"message\",\n        id: \"message\",\n        placeholder: \"Digite sua mensagem\",\n        onChange: this.onMessageChanged,\n        value: this.state.newMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SubmitICon, {\n        onClick: this.sendMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      })))));\n    } else {\n      loginOrChat = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NameBox, {\n        name: this.state.name,\n        onNameChanged: this.onNameChanged,\n        logIn: this.logIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return loginOrChat;\n  }\n\n}\n\nexport default ChatApp;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/Chat/ChatApp.js"],"names":["React","Component","NameBox","Chat","ChatIcon","ChatIconClose","ChatMessage","SubmitICon","Participant","ChatApp","constructor","props","openChat","chatContainer","document","getElementsByClassName","classList","replace","setState","opened","closeChat","componentWillMount","state","loggedIn","getToken","onNameChanged","event","name","target","value","logIn","preventDefault","localStorage","setItem","logOut","token","chatReady","messages","newMessage","removeItem","chatClient","shutdown","channel","header","Headers","fetch","method","headers","then","response","json","data","initChat","initialize","clientInitiated","bind","getChannelByUniqueName","channelName","catch","err","body","code","createChannel","uniqueName","window","identity","getMemberByIdentity","console","log","join","getMessages","messagesLoaded","on","messageAdded","messagePage","items","message","prevState","onMessageChanged","sendMessage","newMessageAdded","comp","_reactInternalFiber","child","stateNode","scrollIntoView","render","loginOrChat","map","sid","author","display","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NameBox from './NameBox.js';\nimport Chat from 'twilio-chat';\nimport ChatIcon from './assets/chat';\nimport ChatIconClose from './assets/chat';\nimport ChatMessage from './ChatMessage';\nimport SubmitICon from './assets/submit';\nimport \"./style.css\"\nimport { Participant} from 'twilio-video';\n\nclass ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    \n    \n    this.state = {\n      name:\"Aluno\",\n      loggedIn,\n      token: '',\n      chatReady: false,\n      messages: [],\n      newMessage: '',\n      opened: true,\n    };\n    const loggedIn = this.state.name !== '';\n    this.channelName = 'general';\n  }\n\n  //Revisar essa lógica\n  openChat = () => {\n    const chatContainer = document.getElementsByClassName(\"chat-container\")[0];\n    chatContainer.classList.replace(\"chat-closed\", \"chat-opened\");\n    this.setState({ opened: true });\n  }\n\n  closeChat = () => {\n    const chatContainer = document.getElementsByClassName(\"chat-container\")[0];\n    chatContainer.classList.replace(\"chat-opened\", \"chat-closed\");\n    this.setState({ opened: false });\n  }\n\n  componentWillMount = () => {\n\n    if (this.state.loggedIn) {\n      this.getToken();\n    }\n  };\n\n  onNameChanged = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  logIn = event => {\n    event.preventDefault();\n    if (this.state.name !== '') {\n      localStorage.setItem('name', this.state.name);\n      this.setState({ loggedIn: true }, this.getToken);\n    }\n  };\n\n  logOut = event => {\n    event.preventDefault();\n    this.setState({\n      name: '',\n      loggedIn: false,\n      token: '',\n      chatReady: false,\n      messages: [],\n      newMessage: ''\n    });\n    localStorage.removeItem('name');\n    this.chatClient.shutdown();\n    this.channel = null;\n  };\n  getToken = () => {\n    const header = new Headers([\n      ['Access-Control-Allow-Origin', '*'],\n    ]);\n    fetch(\"http://rocky-basin-52490.herokuapp.com/token/\" + `${this.state.name}`, {\n      method: 'POST',\n      headers: header\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ token: data.token }, this.initChat);\n      });\n  };\n\n  //Inicializando Chat\n  initChat = () => {\n    this.chatClient = new Chat(this.state.token);\n    this.chatClient.initialize().then(this.clientInitiated.bind(this));\n  };\n\n  //Chat incializado\n  clientInitiated = () => {\n    this.setState({ chatReady: true }, () => {\n      this.chatClient\n        .getChannelByUniqueName(this.channelName)\n        .then(channel => {\n          if (channel) {\n            return (this.channel = channel);\n          }\n        })\n        .catch(err => {\n          if (err.body.code === 50300) {\n            //Cria canal caso ele não existir\n            return this.chatClient.createChannel({\n              uniqueName: this.channelName\n            });\n          }\n        })\n        .then(channel => {\n          this.channel = channel;\n          window.channel = channel;\n          //Juntando se ao canal\n          //Checa se o membro já existe a partir de seu nome\n          const identity = this.channel.getMemberByIdentity(this.state.name)\n          console.log(identity);\n          //Se o membro não existir adiciona ele ao canal\n          if (!identity) {\n            this.channel.join();\n          }\n          return;\n        })\n        .then(() => {\n          //Carrega mensagens e executa o callback\n          this.channel.getMessages().then(this.messagesLoaded);\n          //Adiciona listener ao canal messageAdded => Atualiza o canal\n          this.channel.on('messageAdded', this.messageAdded);\n        });\n    });\n  };\n\n\n  messagesLoaded = messagePage => {\n    this.setState({ messages: messagePage.items });\n  };\n\n  messageAdded = message => {\n    \n    this.setState((prevState, props) => ({\n      messages: [...prevState.messages, message]\n    }));\n  };\n\n  onMessageChanged = event => {\n    this.setState({ newMessage: event.target.value });\n  };\n\n  //Envia mensagem\n  sendMessage = event => {\n    event.preventDefault();\n    const message = this.state.newMessage;\n    this.setState({ newMessage: '' });\n    this.channel.sendMessage(message);\n\n  };\n\n  //Warning: Revisar esse callback\n  newMessageAdded = comp => {\n    console.log(comp);\n    if (comp) {\n      comp._reactInternalFiber.child.stateNode.scrollIntoView();\n    }\n  };\n\n  render() {\n    var loginOrChat;\n    const messages = this.state.messages.map(message => {\n      return (\n        <ChatMessage ref={this.newMessageAdded} key={message.sid} author={message.author} body={message.body}></ChatMessage>\n      );\n    });\n    const { opened } = this.state;\n    if (this.state.loggedIn) {\n      \n        loginOrChat = <>\n        <div className=\"open-chat-icon-container\">\n         {!opened ? <ChatIcon onClick={this.openChat}></ChatIcon> : <ChatIconClose onClick={this.closeChat}></ChatIconClose>} \n        </div>\n        <div className={\"chat-container chat-opened\"}>\n        <p className={\"user-name\"}>{this.state.name}</p>\n        <ul className=\"messages\">\n          {messages}\n        </ul>\n        <div style={{ display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <form className={\"edit-input-container\"} onSubmit={this.sendMessage}>\n            <input\n              className={\"edit-input\"}\n              type=\"text\"\n              name=\"message\"\n              id=\"message\"\n              placeholder={\"Digite sua mensagem\"}\n              onChange={this.onMessageChanged}\n              value={this.state.newMessage}\n            />\n            <SubmitICon onClick={this.sendMessage}></SubmitICon>\n          </form>\n        </div>\n      </div>\n      </>\n    } else {\n      loginOrChat =\n        <div>\n          <NameBox\n            name={this.state.name}\n            onNameChanged={this.onNameChanged}\n            logIn={this.logIn}\n          />\n        </div>\n\n    }\n    return (\n      loginOrChat\n    );\n  }\n}\n\nexport default ChatApp;\n"]},"metadata":{},"sourceType":"module"}