{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MediaTrackTransceiver = require('./transceiver');\n/**\n * A {@link MediaTrackReceiver} represents a remote MediaStreamTrack.\n * @extends MediaTrackTransceiver\n */\n\n\nvar MediaTrackReceiver = function (_MediaTrackTransceive) {\n  _inherits(MediaTrackReceiver, _MediaTrackTransceive);\n  /**\n   * Construct a {@link MediaTrackReceiver}.\n   * @param {Track.ID} id - The MediaStreamTrack ID signaled through RSP/SDP\n   * @param {MediaStreamTrack} mediaStreamTrack - The remote MediaStreamTrack\n   */\n\n\n  function MediaTrackReceiver(id, mediaStreamTrack) {\n    _classCallCheck(this, MediaTrackReceiver);\n\n    return _possibleConstructorReturn(this, (MediaTrackReceiver.__proto__ || Object.getPrototypeOf(MediaTrackReceiver)).call(this, id, mediaStreamTrack));\n  }\n\n  return MediaTrackReceiver;\n}(MediaTrackTransceiver);\n\nmodule.exports = MediaTrackReceiver;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/media/track/receiver.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","MediaTrackTransceiver","require","MediaTrackReceiver","_MediaTrackTransceive","id","mediaStreamTrack","getPrototypeOf","module","exports"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAI,CAACD,IAAL,EAAW;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;AAAEG,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAEN,QAAT;AAAmBO,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIR,UAAJ,EAAgBE,MAAM,CAACO,cAAP,GAAwBP,MAAM,CAACO,cAAP,CAAsBV,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACW,SAAT,GAAqBV,UAA3F;AAAwG;;AAE9e,IAAIW,qBAAqB,GAAGC,OAAO,CAAC,eAAD,CAAnC;AAEA;;;;;;AAKA,IAAIC,kBAAkB,GAAG,UAAUC,qBAAV,EAAiC;AACxDhB,EAAAA,SAAS,CAACe,kBAAD,EAAqBC,qBAArB,CAAT;AAEA;;;;;;;AAKA,WAASD,kBAAT,CAA4BE,EAA5B,EAAgCC,gBAAhC,EAAkD;AAChD1B,IAAAA,eAAe,CAAC,IAAD,EAAOuB,kBAAP,CAAf;;AAEA,WAAOnB,0BAA0B,CAAC,IAAD,EAAO,CAACmB,kBAAkB,CAACH,SAAnB,IAAgCR,MAAM,CAACe,cAAP,CAAsBJ,kBAAtB,CAAjC,EAA4EjB,IAA5E,CAAiF,IAAjF,EAAuFmB,EAAvF,EAA2FC,gBAA3F,CAAP,CAAjC;AACD;;AAED,SAAOH,kBAAP;AACD,CAfwB,CAevBF,qBAfuB,CAAzB;;AAiBAO,MAAM,CAACC,OAAP,GAAiBN,kBAAjB","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaTrackTransceiver = require('./transceiver');\n\n/**\n * A {@link MediaTrackReceiver} represents a remote MediaStreamTrack.\n * @extends MediaTrackTransceiver\n */\n\nvar MediaTrackReceiver = function (_MediaTrackTransceive) {\n  _inherits(MediaTrackReceiver, _MediaTrackTransceive);\n\n  /**\n   * Construct a {@link MediaTrackReceiver}.\n   * @param {Track.ID} id - The MediaStreamTrack ID signaled through RSP/SDP\n   * @param {MediaStreamTrack} mediaStreamTrack - The remote MediaStreamTrack\n   */\n  function MediaTrackReceiver(id, mediaStreamTrack) {\n    _classCallCheck(this, MediaTrackReceiver);\n\n    return _possibleConstructorReturn(this, (MediaTrackReceiver.__proto__ || Object.getPrototypeOf(MediaTrackReceiver)).call(this, id, mediaStreamTrack));\n  }\n\n  return MediaTrackReceiver;\n}(MediaTrackTransceiver);\n\nmodule.exports = MediaTrackReceiver;"]},"metadata":{},"sourceType":"script"}