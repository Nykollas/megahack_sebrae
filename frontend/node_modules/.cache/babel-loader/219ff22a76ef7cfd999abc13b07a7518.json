{"ast":null,"code":"/* globals RTCPeerConnection, webkitRTCPeerConnection, mozRTCPeerConnection, chrome, navigator */\n'use strict';\n\nvar _require = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _require.guessBrowser;\n/**\n * Check whether PeerConnection API is supported.\n * @returns {boolean}\n */\n\n\nfunction isRTCPeerConnectionSupported() {\n  return typeof RTCPeerConnection !== 'undefined' || typeof webkitRTCPeerConnection !== 'undefined' || typeof mozRTCPeerConnection !== 'undefined';\n}\n/**\n * Check whether GetUserMedia API is supported.\n * @returns {boolean}\n */\n\n\nfunction isGetUserMediaSupported() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) || !!navigator.getUserMedia || !!navigator.webkitGetUserMedia || !!navigator.mozGetUserMedia;\n}\n/**\n * Check whether the current browser is non-Chromium Edge.\n * @param {string} browser\n * @returns {boolean}\n */\n\n\nfunction isNonChromiumEdge(browser) {\n  return browser === 'chrome' && /Edge/.test(navigator.userAgent) && (typeof chrome === 'undefined' || typeof chrome.runtime === 'undefined');\n}\n/**\n * Check if the current environment is supported by the SDK.\n * @returns {boolean}\n */\n\n\nfunction isSupported() {\n  var browser = guessBrowser();\n  return !!browser && !isNonChromiumEdge(browser) && isGetUserMediaSupported() && isRTCPeerConnectionSupported();\n}\n\nmodule.exports = isSupported;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/util/support.js"],"names":["_require","require","guessBrowser","isRTCPeerConnectionSupported","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","isGetUserMediaSupported","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","isNonChromiumEdge","browser","test","userAgent","chrome","runtime","isSupported","module","exports"],"mappings":"AAAA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAAtB;AAAA,IACIC,YAAY,GAAGF,QAAQ,CAACE,YAD5B;AAGA;;;;;;AAMA,SAASC,4BAAT,GAAwC;AACtC,SAAO,OAAOC,iBAAP,KAA6B,WAA7B,IAA4C,OAAOC,uBAAP,KAAmC,WAA/E,IAA8F,OAAOC,oBAAP,KAAgC,WAArI;AACD;AAED;;;;;;AAIA,SAASC,uBAAT,GAAmC;AACjC,SAAO,CAAC,EAAEC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAAnD,CAAD,IAAqE,CAAC,CAACF,SAAS,CAACE,YAAjF,IAAiG,CAAC,CAACF,SAAS,CAACG,kBAA7G,IAAmI,CAAC,CAACH,SAAS,CAACI,eAAtJ;AACD;AAED;;;;;;;AAKA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,SAAOA,OAAO,KAAK,QAAZ,IAAwB,OAAOC,IAAP,CAAYP,SAAS,CAACQ,SAAtB,CAAxB,KAA6D,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,OAAd,KAA0B,WAAxH,CAAP;AACD;AAED;;;;;;AAIA,SAASC,WAAT,GAAuB;AACrB,MAAIL,OAAO,GAAGZ,YAAY,EAA1B;AACA,SAAO,CAAC,CAACY,OAAF,IAAa,CAACD,iBAAiB,CAACC,OAAD,CAA/B,IAA4CP,uBAAuB,EAAnE,IAAyEJ,4BAA4B,EAA5G;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBF,WAAjB","sourcesContent":["/* globals RTCPeerConnection, webkitRTCPeerConnection, mozRTCPeerConnection, chrome, navigator */\n'use strict';\n\nvar _require = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _require.guessBrowser;\n\n/**\n * Check whether PeerConnection API is supported.\n * @returns {boolean}\n */\n\n\nfunction isRTCPeerConnectionSupported() {\n  return typeof RTCPeerConnection !== 'undefined' || typeof webkitRTCPeerConnection !== 'undefined' || typeof mozRTCPeerConnection !== 'undefined';\n}\n\n/**\n * Check whether GetUserMedia API is supported.\n * @returns {boolean}\n */\nfunction isGetUserMediaSupported() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) || !!navigator.getUserMedia || !!navigator.webkitGetUserMedia || !!navigator.mozGetUserMedia;\n}\n\n/**\n * Check whether the current browser is non-Chromium Edge.\n * @param {string} browser\n * @returns {boolean}\n */\nfunction isNonChromiumEdge(browser) {\n  return browser === 'chrome' && /Edge/.test(navigator.userAgent) && (typeof chrome === 'undefined' || typeof chrome.runtime === 'undefined');\n}\n\n/**\n * Check if the current environment is supported by the SDK.\n * @returns {boolean}\n */\nfunction isSupported() {\n  var browser = guessBrowser();\n  return !!browser && !isNonChromiumEdge(browser) && isGetUserMediaSupported() && isRTCPeerConnectionSupported();\n}\n\nmodule.exports = isSupported;"]},"metadata":{},"sourceType":"script"}