{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID\n};\nexport default function useFirebaseAuth() {\n  const [user, setUser] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const getToken = useCallback(async (identity, roomName) => {\n    const headers = new window.Headers();\n    const idToken = await user.getIdToken();\n    headers.set('Authorization', idToken);\n    const endpoint = process.env.REACT_APP_TOKEN_ENDPOINT || '/token';\n    const params = new window.URLSearchParams({\n      identity,\n      roomName\n    });\n    return fetch(`${endpoint}?${params}`, {\n      headers\n    }).then(res => res.text());\n  }, [user]);\n  useEffect(() => {\n    firebase.initializeApp(firebaseConfig);\n    firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n      setIsAuthReady(true);\n    });\n  }, []);\n  const signIn = useCallback(() => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/plus.login');\n    return firebase.auth().signInWithPopup(provider).then(user => {\n      setUser(user.user);\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    return firebase.auth().signOut().then(() => {\n      setUser(null);\n    });\n  }, []);\n  return {\n    user,\n    signIn,\n    signOut,\n    isAuthReady,\n    getToken\n  };\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/state/useFirebaseAuth/useFirebaseAuth.ts"],"names":["useCallback","useEffect","useState","firebase","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","useFirebaseAuth","user","setUser","isAuthReady","setIsAuthReady","getToken","identity","roomName","headers","window","Headers","idToken","getIdToken","set","endpoint","REACT_APP_TOKEN_ENDPOINT","params","URLSearchParams","fetch","then","res","text","initializeApp","auth","onAuthStateChanged","signIn","provider","GoogleAuthProvider","addScope","signInWithPopup","signOut"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADC;AAErBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFH;AAGrBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,+BAHJ;AAIrBC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,iCAJN;AAKrBC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS;AALV,CAAvB;AAQA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAuB,IAAvB,CAAhC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMoB,QAAQ,GAAGtB,WAAW,CAC1B,OAAOuB,QAAP,EAAyBC,QAAzB,KAA8C;AAC5C,UAAMC,OAAO,GAAG,IAAIC,MAAM,CAACC,OAAX,EAAhB;AAEA,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAAEW,UAAN,EAAtB;AACAJ,IAAAA,OAAO,CAACK,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AAEA,UAAMG,QAAQ,GAAGzB,OAAO,CAACC,GAAR,CAAYyB,wBAAZ,IAAwC,QAAzD;AACA,UAAMC,MAAM,GAAG,IAAIP,MAAM,CAACQ,eAAX,CAA2B;AAAEX,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA3B,CAAf;AAEA,WAAOW,KAAK,CAAE,GAAEJ,QAAS,IAAGE,MAAO,EAAvB,EAA0B;AAAER,MAAAA;AAAF,KAA1B,CAAL,CAA4CW,IAA5C,CAAiDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAxD,CAAP;AACD,GAXyB,EAY1B,CAACpB,IAAD,CAZ0B,CAA5B;AAeAjB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,QAAQ,CAACoC,aAAT,CAAuBnC,cAAvB;AACAD,IAAAA,QAAQ,CAACqC,IAAT,GAAgBC,kBAAhB,CAAmCvB,IAAI,IAAI;AACzCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;AAQA,QAAMqB,MAAM,GAAG1C,WAAW,CAAC,MAAM;AAC/B,UAAM2C,QAAQ,GAAG,IAAIxC,QAAQ,CAACqC,IAAT,CAAcI,kBAAlB,EAAjB;AACAD,IAAAA,QAAQ,CAACE,QAAT,CAAkB,4CAAlB;AAEA,WAAO1C,QAAQ,CACZqC,IADI,GAEJM,eAFI,CAEYH,QAFZ,EAGJP,IAHI,CAGClB,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACD,KALI,CAAP;AAMD,GAVyB,EAUvB,EAVuB,CAA1B;AAYA,QAAM6B,OAAO,GAAG/C,WAAW,CAAC,MAAM;AAChC,WAAOG,QAAQ,CACZqC,IADI,GAEJO,OAFI,GAGJX,IAHI,CAGC,MAAM;AACVjB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KALI,CAAP;AAMD,GAP0B,EAOxB,EAPwB,CAA3B;AASA,SAAO;AAAED,IAAAA,IAAF;AAAQwB,IAAAA,MAAR;AAAgBK,IAAAA,OAAhB;AAAyB3B,IAAAA,WAAzB;AAAsCE,IAAAA;AAAtC,GAAP;AACD","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n};\n\nexport default function useFirebaseAuth() {\n  const [user, setUser] = useState<firebase.User | null>(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n\n  const getToken = useCallback(\n    async (identity: string, roomName: string) => {\n      const headers = new window.Headers();\n\n      const idToken = await user!.getIdToken();\n      headers.set('Authorization', idToken);\n\n      const endpoint = process.env.REACT_APP_TOKEN_ENDPOINT || '/token';\n      const params = new window.URLSearchParams({ identity, roomName });\n\n      return fetch(`${endpoint}?${params}`, { headers }).then(res => res.text());\n    },\n    [user]\n  );\n\n  useEffect(() => {\n    firebase.initializeApp(firebaseConfig);\n    firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n      setIsAuthReady(true);\n    });\n  }, []);\n\n  const signIn = useCallback(() => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/plus.login');\n\n    return firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(user => {\n        setUser(user.user);\n      });\n  }, []);\n\n  const signOut = useCallback(() => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(null);\n      });\n  }, []);\n\n  return { user, signIn, signOut, isAuthReady, getToken };\n}\n"]},"metadata":{},"sourceType":"module"}