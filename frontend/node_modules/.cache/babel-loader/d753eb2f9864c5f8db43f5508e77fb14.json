{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nclass TokenStorage {\n  static get sessionStorage() {\n    try {\n      return global['sessionStorage'];\n    } catch (err) {\n      return null;\n    }\n  }\n\n  static get window() {\n    try {\n      return global['window'];\n    } catch (err) {\n      return null;\n    }\n  }\n\n  static storeToken(continuationToken, productId) {\n    if (TokenStorage.canStore) {\n      TokenStorage.sessionStorage.setItem(TokenStorage.getKeyName(productId), continuationToken);\n    }\n  }\n\n  static getStoredToken(productId) {\n    if (!TokenStorage.canStore) {\n      return null;\n    }\n\n    return TokenStorage.sessionStorage.getItem(TokenStorage.getKeyName(productId));\n  }\n\n  static initialize() {\n    if (TokenStorage.canStore) {\n      const flag = TokenStorage.sessionStorage.getItem(TokenStorage.initializedFlag); // Duplicated tab, cleaning up all stored keys\n\n      if (flag) {\n        this.clear();\n      }\n\n      TokenStorage.sessionStorage.setItem(TokenStorage.initializedFlag, 'true'); // When leaving page or refreshing\n\n      TokenStorage.window.addEventListener('unload', () => {\n        TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n      });\n    }\n  }\n\n  static clear() {\n    if (TokenStorage.canStore) {\n      let keyToDelete = [];\n\n      for (let i = 0; i < TokenStorage.sessionStorage.length; i++) {\n        const key = TokenStorage.sessionStorage.key(i); // We manually removed startsWith here due to some problems with babel polyfill setup.\n        // Restore it when we figure out what's wrong.\n        //if (key.startsWith(TokenStorage.tokenStoragePrefix)) {\n\n        if (key.indexOf(TokenStorage.tokenStoragePrefix) === 0) {\n          keyToDelete.push(key);\n        }\n      }\n\n      keyToDelete.forEach(key => TokenStorage.sessionStorage.removeItem(key));\n      TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n    }\n  }\n\n  static getKeyName(productId) {\n    return `${TokenStorage.tokenStoragePrefix}${productId}`;\n  }\n\n  static get canStore() {\n    return TokenStorage.sessionStorage && TokenStorage.window;\n  }\n\n}\n\nexports.TokenStorage = TokenStorage;\nTokenStorage.initializedFlag = 'twilio_twilsock_token_storage';\nTokenStorage.tokenStoragePrefix = 'twilio_continuation_token_';\nTokenStorage.initialize();","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilsock/lib/tokenStorage.js"],"names":["Object","defineProperty","exports","value","TokenStorage","sessionStorage","global","err","window","storeToken","continuationToken","productId","canStore","setItem","getKeyName","getStoredToken","getItem","initialize","flag","initializedFlag","clear","addEventListener","removeItem","keyToDelete","i","length","key","indexOf","tokenStoragePrefix","push","forEach"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TokenStorage {\n    static get sessionStorage() {\n        try {\n            return global['sessionStorage'];\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    static get window() {\n        try {\n            return global['window'];\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    static storeToken(continuationToken, productId) {\n        if (TokenStorage.canStore) {\n            TokenStorage.sessionStorage.setItem(TokenStorage.getKeyName(productId), continuationToken);\n        }\n    }\n    static getStoredToken(productId) {\n        if (!TokenStorage.canStore) {\n            return null;\n        }\n        return TokenStorage.sessionStorage.getItem(TokenStorage.getKeyName(productId));\n    }\n    static initialize() {\n        if (TokenStorage.canStore) {\n            const flag = TokenStorage.sessionStorage.getItem(TokenStorage.initializedFlag);\n            // Duplicated tab, cleaning up all stored keys\n            if (flag) {\n                this.clear();\n            }\n            TokenStorage.sessionStorage.setItem(TokenStorage.initializedFlag, 'true');\n            // When leaving page or refreshing\n            TokenStorage.window.addEventListener('unload', () => {\n                TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n            });\n        }\n    }\n    static clear() {\n        if (TokenStorage.canStore) {\n            let keyToDelete = [];\n            for (let i = 0; i < TokenStorage.sessionStorage.length; i++) {\n                const key = TokenStorage.sessionStorage.key(i);\n                // We manually removed startsWith here due to some problems with babel polyfill setup.\n                // Restore it when we figure out what's wrong.\n                //if (key.startsWith(TokenStorage.tokenStoragePrefix)) {\n                if (key.indexOf(TokenStorage.tokenStoragePrefix) === 0) {\n                    keyToDelete.push(key);\n                }\n            }\n            keyToDelete.forEach(key => TokenStorage.sessionStorage.removeItem(key));\n            TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n        }\n    }\n    static getKeyName(productId) {\n        return `${TokenStorage.tokenStoragePrefix}${productId}`;\n    }\n    static get canStore() {\n        return TokenStorage.sessionStorage && TokenStorage.window;\n    }\n}\nexports.TokenStorage = TokenStorage;\nTokenStorage.initializedFlag = 'twilio_twilsock_token_storage';\nTokenStorage.tokenStoragePrefix = 'twilio_continuation_token_';\nTokenStorage.initialize();\n"]},"metadata":{},"sourceType":"script"}