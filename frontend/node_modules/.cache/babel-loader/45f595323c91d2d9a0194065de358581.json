{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/MenuBar/MenuBar.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport LocalAudioLevelIndicator from './LocalAudioLevelIndicator/LocalAudioLevelIndicator';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ToggleFullscreenButton from './ToggleFullScreenButton/ToggleFullScreenButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Menu from './Menu/Menu';\nimport { useAppState } from '../../state';\nimport { useParams } from 'react-router-dom';\nimport useRoomState from '../../hooks/useRoomState/useRoomState';\nimport useVideoContext from '../../hooks/useVideoContext/useVideoContext';\nimport FlipCameraButton from './FlipCameraButton/FlipCameraButton';\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    backgroundColor: '#4D66DD'\n  },\n  toolbar: {\n    [theme.breakpoints.down('xs')]: {\n      padding: 0\n    }\n  },\n  rightButtonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto'\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: '2.2em'\n    }\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    maxWidth: 200\n  },\n  loadingSpinner: {\n    marginLeft: '1em'\n  },\n  displayName: {\n    margin: '1.1em 0.6em',\n    minWidth: '200px',\n    fontWeight: 600\n  },\n  joinButton: {\n    margin: '1em'\n  }\n}));\nexport default function MenuBar() {\n  const classes = useStyles();\n  const {\n    URLRoomName\n  } = useParams();\n  const {\n    user,\n    getToken,\n    isFetching\n  } = useAppState();\n  const {\n    isConnecting,\n    connect\n  } = useVideoContext();\n  const roomState = useRoomState();\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.displayName) || '');\n  const [roomName, setRoomName] = useState('');\n  useEffect(() => {\n    if (URLRoomName) {\n      setRoomName(URLRoomName);\n    }\n  }, [URLRoomName]);\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleRoomNameChange = event => {\n    setRoomName(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // If this app is deployed as a twilio function, don't change the URL because routing isn't supported.\n\n    if (!window.location.origin.includes('twil.io')) {\n      window.history.replaceState(null, '', window.encodeURI(`/room/${roomName}${window.location.search || ''}`));\n    } //getToken(name, roomName).then(token => connect(token));\n\n\n    const identity = window.location.pathname.split(\"/\")[2];\n    console.log(identity);\n    getToken(identity, \"Sala\").then(token => connect(token));\n  };\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.container,\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, roomState === 'disconnected' ? /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.joinButton,\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    disabled: isConnecting || isFetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Participar\"), (isConnecting || isFetching) && /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.loadingSpinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 46\n    }\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rightButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LocalAudioLevelIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FlipCameraButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ToggleFullscreenButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/MenuBar/MenuBar.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","AppBar","LocalAudioLevelIndicator","Button","CircularProgress","ToggleFullscreenButton","Toolbar","Menu","useAppState","useParams","useRoomState","useVideoContext","FlipCameraButton","useStyles","theme","container","backgroundColor","toolbar","breakpoints","down","padding","rightButtonContainer","display","alignItems","marginLeft","form","flexWrap","up","textField","spacing","marginRight","maxWidth","loadingSpinner","displayName","margin","minWidth","fontWeight","joinButton","MenuBar","classes","URLRoomName","user","getToken","isFetching","isConnecting","connect","roomState","name","setName","roomName","setRoomName","handleNameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","window","location","origin","includes","history","replaceState","encodeURI","search","identity","pathname","split","console","log","then","token"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport LocalAudioLevelIndicator from './LocalAudioLevelIndicator/LocalAudioLevelIndicator';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ToggleFullscreenButton from './ToggleFullScreenButton/ToggleFullScreenButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Menu from './Menu/Menu';\nimport { useAppState } from '../../state';\nimport { useParams } from 'react-router-dom';\nimport useRoomState from '../../hooks/useRoomState/useRoomState';\nimport useVideoContext from '../../hooks/useVideoContext/useVideoContext';\nimport FlipCameraButton from './FlipCameraButton/FlipCameraButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      backgroundColor: '#4D66DD',\n    },\n    toolbar: {\n      [theme.breakpoints.down('xs')]: {\n        padding: 0,\n      },\n    },\n    rightButtonContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n    },\n    form: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      [theme.breakpoints.up('md')]: {\n        marginLeft: '2.2em',\n      },\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      maxWidth: 200,\n    },\n    loadingSpinner: {\n      marginLeft: '1em',\n    },\n    displayName: {\n      margin: '1.1em 0.6em',\n      minWidth: '200px',\n      fontWeight: 600,\n    },\n    joinButton: {\n      margin: '1em',\n    },\n  })\n);\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { URLRoomName } = useParams();\n  const { user, getToken, isFetching } = useAppState();\n  const { isConnecting, connect } = useVideoContext();\n  const roomState = useRoomState();\n\n  const [name, setName] = useState<string>(user?.displayName || '');\n  const [roomName, setRoomName] = useState<string>('');\n\n  useEffect(() => {\n    if (URLRoomName) {\n      setRoomName(URLRoomName);\n    }\n  }, [URLRoomName]);\n\n  const handleNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleRoomNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setRoomName(event.target.value);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // If this app is deployed as a twilio function, don't change the URL because routing isn't supported.\n    if (!window.location.origin.includes('twil.io')) {\n      window.history.replaceState(null, '', window.encodeURI(`/room/${roomName}${window.location.search || ''}`));\n    }\n    //getToken(name, roomName).then(token => connect(token));\n    const identity = window.location.pathname.split(\"/\")[2];\n    console.log(identity);\n    getToken(identity, \"Sala\").then(token => connect(token));\n  };\n\n  return (\n    <AppBar className={classes.container} position=\"static\">\n      <Toolbar className={classes.toolbar}>\n        {roomState === 'disconnected' ? (\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <Button\n              className={classes.joinButton}\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={ isConnecting || isFetching }\n            >\n             Participar\n            </Button>\n            {(isConnecting || isFetching) && <CircularProgress className={classes.loadingSpinner} />}\n          </form>\n        ) : (\n          <h3>{roomName}</h3>\n        )}\n        <div className={classes.rightButtonContainer}>\n          <LocalAudioLevelIndicator />\n          <FlipCameraButton />\n          <ToggleFullscreenButton />\n          <Menu />\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}