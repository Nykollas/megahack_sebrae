{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar NetworkQualitySendStats = require('./networkqualitysendstats');\n\nvar NetworkQualityRecvStats = require('./networkqualityrecvstats');\n/**\n * Network quality statistics shared between a {@link Participant}'s audio or video.\n * @property {NetworkQualityLevel} send - {@link NetworkQualityLevel} of the\n *  {@link Participant}'s published audio or video\n * @property {number} recv - {@link NetworkQualityLevel} of the\n *  {@link Participant}'s subscribed audio or video\n * @property {?NetworkQualitySendOrRecvStats} sendStats - {@link NetworkQualitySendOrRecvStats}\n *   based on which {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#send</code>\n *   is calculated\n * @property {?NetworkQualitySendOrRecvStats} recvStats - {@link NetworkQualitySendOrRecvStats}\n *   based on which {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#recv</code>\n *   is calculated\n */\n\n\nvar NetworkQualityMediaStats =\n/**\n * Construct a {@link NetworkQualityMediaStats}.\n * @param {MediaLevels} mediaLevels\n */\nfunction NetworkQualityMediaStats(_ref) {\n  var send = _ref.send,\n      recv = _ref.recv,\n      _ref$sendStats = _ref.sendStats,\n      sendStats = _ref$sendStats === undefined ? null : _ref$sendStats,\n      _ref$recvStats = _ref.recvStats,\n      recvStats = _ref$recvStats === undefined ? null : _ref$recvStats;\n\n  _classCallCheck(this, NetworkQualityMediaStats);\n\n  Object.defineProperties(this, {\n    send: {\n      value: send,\n      enumerable: true\n    },\n    recv: {\n      value: recv,\n      enumerable: true\n    },\n    sendStats: {\n      value: sendStats ? new NetworkQualitySendStats(sendStats) : null,\n      enumerable: true\n    },\n    recvStats: {\n      value: recvStats ? new NetworkQualityRecvStats(recvStats) : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityMediaStats;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/stats/networkqualitymediastats.js"],"names":["_classCallCheck","instance","Constructor","TypeError","NetworkQualitySendStats","require","NetworkQualityRecvStats","NetworkQualityMediaStats","_ref","send","recv","_ref$sendStats","sendStats","undefined","_ref$recvStats","recvStats","Object","defineProperties","value","enumerable","module","exports"],"mappings":"AAAA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAArC;AAEA;;;;;;;;;;;;;;;AAcA,IAAIE,wBAAwB;AAC5B;;;;AAIA,SAASA,wBAAT,CAAkCC,IAAlC,EAAwC;AACtC,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,MAEIC,cAAc,GAAGH,IAAI,CAACI,SAF1B;AAAA,MAGIA,SAAS,GAAGD,cAAc,KAAKE,SAAnB,GAA+B,IAA/B,GAAsCF,cAHtD;AAAA,MAIIG,cAAc,GAAGN,IAAI,CAACO,SAJ1B;AAAA,MAKIA,SAAS,GAAGD,cAAc,KAAKD,SAAnB,GAA+B,IAA/B,GAAsCC,cALtD;;AAOAd,EAAAA,eAAe,CAAC,IAAD,EAAOO,wBAAP,CAAf;;AAEAS,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BR,IAAAA,IAAI,EAAE;AACJS,MAAAA,KAAK,EAAET,IADH;AAEJU,MAAAA,UAAU,EAAE;AAFR,KADsB;AAK5BT,IAAAA,IAAI,EAAE;AACJQ,MAAAA,KAAK,EAAER,IADH;AAEJS,MAAAA,UAAU,EAAE;AAFR,KALsB;AAS5BP,IAAAA,SAAS,EAAE;AACTM,MAAAA,KAAK,EAAEN,SAAS,GAAG,IAAIR,uBAAJ,CAA4BQ,SAA5B,CAAH,GAA4C,IADnD;AAETO,MAAAA,UAAU,EAAE;AAFH,KATiB;AAa5BJ,IAAAA,SAAS,EAAE;AACTG,MAAAA,KAAK,EAAEH,SAAS,GAAG,IAAIT,uBAAJ,CAA4BS,SAA5B,CAAH,GAA4C,IADnD;AAETI,MAAAA,UAAU,EAAE;AAFH;AAbiB,GAA9B;AAkBD,CAjCD;;AAmCAC,MAAM,CAACC,OAAP,GAAiBd,wBAAjB","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NetworkQualitySendStats = require('./networkqualitysendstats');\nvar NetworkQualityRecvStats = require('./networkqualityrecvstats');\n\n/**\n * Network quality statistics shared between a {@link Participant}'s audio or video.\n * @property {NetworkQualityLevel} send - {@link NetworkQualityLevel} of the\n *  {@link Participant}'s published audio or video\n * @property {number} recv - {@link NetworkQualityLevel} of the\n *  {@link Participant}'s subscribed audio or video\n * @property {?NetworkQualitySendOrRecvStats} sendStats - {@link NetworkQualitySendOrRecvStats}\n *   based on which {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#send</code>\n *   is calculated\n * @property {?NetworkQualitySendOrRecvStats} recvStats - {@link NetworkQualitySendOrRecvStats}\n *   based on which {@link NetworkQualityMediaStats}<code style=\"padding:0 0\">#recv</code>\n *   is calculated\n */\n\nvar NetworkQualityMediaStats =\n/**\n * Construct a {@link NetworkQualityMediaStats}.\n * @param {MediaLevels} mediaLevels\n */\nfunction NetworkQualityMediaStats(_ref) {\n  var send = _ref.send,\n      recv = _ref.recv,\n      _ref$sendStats = _ref.sendStats,\n      sendStats = _ref$sendStats === undefined ? null : _ref$sendStats,\n      _ref$recvStats = _ref.recvStats,\n      recvStats = _ref$recvStats === undefined ? null : _ref$recvStats;\n\n  _classCallCheck(this, NetworkQualityMediaStats);\n\n  Object.defineProperties(this, {\n    send: {\n      value: send,\n      enumerable: true\n    },\n    recv: {\n      value: recv,\n      enumerable: true\n    },\n    sendStats: {\n      value: sendStats ? new NetworkQualitySendStats(sendStats) : null,\n      enumerable: true\n    },\n    recvStats: {\n      value: recvStats ? new NetworkQualityRecvStats(recvStats) : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = NetworkQualityMediaStats;"]},"metadata":{},"sourceType":"script"}