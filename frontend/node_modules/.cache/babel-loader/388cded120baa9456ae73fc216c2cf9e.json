{"ast":null,"code":"'use strict';\n/**\n * Statistics for a {@link Track}.\n * @property {Track.ID} trackId - The {@link Track} ID\n * @property {Track.SID} trackSid - The {@link Track}'s SID when published in\n *  in a {@link Room}\n * @property {number} timestamp - A Unix timestamp in milliseconds indicating\n *   when the {@link TrackStats} were gathered\n * @property {string} ssrc - The {@link Track}'s SSRC when transmitted over the\n *   RTCPeerConnection\n * @property {?number} packetsLost - The number of packets lost\n * @property {?string} codec - The name of the codec used to encode the\n *   {@link Track}'s media\n */\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar TrackStats =\n/**\n * @param {string} trackId - {@link Track} ID\n * @param {StandardizedTrackStatsReport} statsReport\n */\nfunction TrackStats(trackId, statsReport) {\n  _classCallCheck(this, TrackStats);\n\n  if (typeof trackId !== 'string') {\n    throw new Error('Track id must be a string');\n  }\n\n  Object.defineProperties(this, {\n    trackId: {\n      value: trackId,\n      enumerable: true\n    },\n    trackSid: {\n      value: statsReport.trackSid,\n      enumerable: true\n    },\n    timestamp: {\n      value: statsReport.timestamp,\n      enumerable: true\n    },\n    ssrc: {\n      value: statsReport.ssrc,\n      enumerable: true\n    },\n    packetsLost: {\n      value: typeof statsReport.packetsLost === 'number' ? statsReport.packetsLost : null,\n      enumerable: true\n    },\n    codec: {\n      value: typeof statsReport.codecName === 'string' ? statsReport.codecName : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = TrackStats;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/stats/trackstats.js"],"names":["_classCallCheck","instance","Constructor","TypeError","TrackStats","trackId","statsReport","Error","Object","defineProperties","value","enumerable","trackSid","timestamp","ssrc","packetsLost","codec","codecName","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;;;;;;AAcA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,UAAU;AACd;;;;AAIA,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,WAA7B,EAA0C;AACxCN,EAAAA,eAAe,CAAC,IAAD,EAAOI,UAAP,CAAf;;AAEA,MAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAEDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BJ,IAAAA,OAAO,EAAE;AACPK,MAAAA,KAAK,EAAEL,OADA;AAEPM,MAAAA,UAAU,EAAE;AAFL,KADmB;AAK5BC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,KAAK,EAAEJ,WAAW,CAACM,QADX;AAERD,MAAAA,UAAU,EAAE;AAFJ,KALkB;AAS5BE,IAAAA,SAAS,EAAE;AACTH,MAAAA,KAAK,EAAEJ,WAAW,CAACO,SADV;AAETF,MAAAA,UAAU,EAAE;AAFH,KATiB;AAa5BG,IAAAA,IAAI,EAAE;AACJJ,MAAAA,KAAK,EAAEJ,WAAW,CAACQ,IADf;AAEJH,MAAAA,UAAU,EAAE;AAFR,KAbsB;AAiB5BI,IAAAA,WAAW,EAAE;AACXL,MAAAA,KAAK,EAAE,OAAOJ,WAAW,CAACS,WAAnB,KAAmC,QAAnC,GAA8CT,WAAW,CAACS,WAA1D,GAAwE,IADpE;AAEXJ,MAAAA,UAAU,EAAE;AAFD,KAjBe;AAqB5BK,IAAAA,KAAK,EAAE;AACLN,MAAAA,KAAK,EAAE,OAAOJ,WAAW,CAACW,SAAnB,KAAiC,QAAjC,GAA4CX,WAAW,CAACW,SAAxD,GAAoE,IADtE;AAELN,MAAAA,UAAU,EAAE;AAFP;AArBqB,GAA9B;AA0BD,CAtCD;;AAwCAO,MAAM,CAACC,OAAP,GAAiBf,UAAjB","sourcesContent":["'use strict';\n\n/**\n * Statistics for a {@link Track}.\n * @property {Track.ID} trackId - The {@link Track} ID\n * @property {Track.SID} trackSid - The {@link Track}'s SID when published in\n *  in a {@link Room}\n * @property {number} timestamp - A Unix timestamp in milliseconds indicating\n *   when the {@link TrackStats} were gathered\n * @property {string} ssrc - The {@link Track}'s SSRC when transmitted over the\n *   RTCPeerConnection\n * @property {?number} packetsLost - The number of packets lost\n * @property {?string} codec - The name of the codec used to encode the\n *   {@link Track}'s media\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TrackStats =\n/**\n * @param {string} trackId - {@link Track} ID\n * @param {StandardizedTrackStatsReport} statsReport\n */\nfunction TrackStats(trackId, statsReport) {\n  _classCallCheck(this, TrackStats);\n\n  if (typeof trackId !== 'string') {\n    throw new Error('Track id must be a string');\n  }\n\n  Object.defineProperties(this, {\n    trackId: {\n      value: trackId,\n      enumerable: true\n    },\n    trackSid: {\n      value: statsReport.trackSid,\n      enumerable: true\n    },\n    timestamp: {\n      value: statsReport.timestamp,\n      enumerable: true\n    },\n    ssrc: {\n      value: statsReport.ssrc,\n      enumerable: true\n    },\n    packetsLost: {\n      value: typeof statsReport.packetsLost === 'number' ? statsReport.packetsLost : null,\n      enumerable: true\n    },\n    codec: {\n      value: typeof statsReport.codecName === 'string' ? statsReport.codecName : null,\n      enumerable: true\n    }\n  });\n};\n\nmodule.exports = TrackStats;"]},"metadata":{},"sourceType":"script"}