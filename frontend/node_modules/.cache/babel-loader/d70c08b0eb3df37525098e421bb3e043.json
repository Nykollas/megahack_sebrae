{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DominantSpeakerSignaling = require('./dominantspeakersignaling');\n\nvar NetworkQualityMonitor = require('./networkqualitymonitor');\n\nvar NetworkQualitySignaling = require('./networkqualitysignaling');\n\nvar RecordingV2 = require('./recording');\n\nvar RoomSignaling = require('../room');\n\nvar RemoteParticipantV2 = require('./remoteparticipant');\n\nvar StatsReport = require('../../stats/statsreport');\n\nvar TrackPrioritySignaling = require('./trackprioritysignaling');\n\nvar TrackSwitchOffSignaling = require('./trackswitchoffsignaling');\n\nvar _require = require('../../util'),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar _require2 = require('../../util/twilio-video-errors'),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 1000;\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    Object.defineProperties(_this, {\n      _dominantSpeakerSignaling: {\n        value: null,\n        writable: true\n      },\n      _DominantSpeakerSignaling: {\n        value: options.DominantSpeakerSignaling\n      },\n      _dominantSpeakerSignalingPromise: {\n        value: null,\n        writable: true\n      },\n      _disconnectedParticipantSids: {\n        value: new Set()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _NetworkQualitySignaling: {\n        value: options.NetworkQualitySignaling\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityMonitorPromise: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _trackPriorityPromise: {\n        value: null,\n        writable: true\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffPromise: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffSignaling: {\n        value: null,\n        writable: true\n      },\n      _TrackPrioritySignaling: {\n        value: options.TrackPrioritySignaling\n      },\n      _TrackSwitchOffSignaling: {\n        value: options.TrackSwitchOffSignaling\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n\n    return _this;\n  }\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers(); // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n\n\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n\n      if (didDisconnect) {\n        this._teardownDominantSpeakerSignaling();\n\n        this._teardownNetworkQualityMonitor();\n\n        this._transport.disconnect();\n\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n      return didDisconnect;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n\n        return trackReceiver;\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, this._getTrackReceiver.bind(this));\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n\n            self._disconnectedParticipantSids.add(participant.sid);\n          }\n        });\n        this.connectParticipant(participant);\n        participant.setTrackPrioritySignaling(this._trackPrioritySignaling);\n      }\n\n      return participant;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this3 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this3._subscriptionFailures.delete(trackState.sid);\n\n            _this3._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this3._subscriptionFailures.has(trackState.sid)) {\n            _this3._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this3._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set(); // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this3.localParticipant.sid || _this3._disconnectedParticipantSids.has(participantState.sid)) {\n          return;\n        }\n\n        var participant = _this3._getOrCreateRemoteParticipant(participantState);\n\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this); // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n\n      /* eslint camelcase:0 */\n\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this3._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      if (!this._dominantSpeakerSignalingPromise && roomState.media_signaling && roomState.media_signaling.active_speaker && roomState.media_signaling.active_speaker.transport && roomState.media_signaling.active_speaker.transport.type === 'data-channel') {\n        this._setupDataTransportBackedDominantSpeakerSignaling(roomState.media_signaling.active_speaker.transport.label);\n      }\n\n      if (!this._networkQualityMonitorPromise && roomState.media_signaling && roomState.media_signaling.network_quality && roomState.media_signaling.network_quality.transport && roomState.media_signaling.network_quality.transport.type === 'data-channel') {\n        this._setupDataTransportBackedNetworkQualityMonitor(roomState.media_signaling.network_quality.transport.label);\n      }\n\n      if (!this._trackPriorityPromise && roomState.media_signaling && roomState.media_signaling.track_priority && roomState.media_signaling.track_priority.transport && roomState.media_signaling.track_priority.transport.type === 'data-channel') {\n        this._setupTrackPrioritySignaling(roomState.media_signaling.track_priority.transport.label);\n      }\n\n      if (!this._trackSwitchOffPromise && roomState.media_signaling && roomState.media_signaling.track_switch_off && roomState.media_signaling.track_switch_off.transport && roomState.media_signaling.track_switch_off.transport.type === 'data-channel') {\n        this._setupTrackSwitchOffMonitor(roomState.media_signaling.track_switch_off.transport.label);\n      }\n\n      return this;\n    } // track priority signaling MSP is now used only for subscribe side priority changes.\n    // publisher side priority changes and notifications are handled by RSP.\n\n  }, {\n    key: '_setupTrackPrioritySignaling',\n    value: function _setupTrackPrioritySignaling(id) {\n      var _this4 = this;\n\n      this._teardownTrackPrioritySignaling();\n\n      var trackPriorityPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this4._trackPriorityPromise !== trackPriorityPromise) {\n          return;\n        } // NOTE(mmalavalli): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Track Priority updates.\n\n\n        receiver.once('close', function () {\n          return _this4._teardownTrackPrioritySignaling();\n        });\n        _this4._trackPrioritySignaling = new _this4._TrackPrioritySignaling(receiver.toDataTransport());\n        [].concat(_toConsumableArray(_this4.participants.values())).forEach(function (participant) {\n          participant.setTrackPrioritySignaling(_this4._trackPrioritySignaling);\n        });\n      });\n\n      this._trackPriorityPromise = trackPriorityPromise;\n    }\n  }, {\n    key: '_setupTrackSwitchOff',\n    value: function _setupTrackSwitchOff(trackSwitchOffSignaling) {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling = trackSwitchOffSignaling;\n      trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        _this5.participants.forEach(function (participant) {\n          participant.tracks.forEach(function (track) {\n            if (tracksOff.includes(track.sid)) {\n              track.setSwitchedOff(true);\n            }\n\n            if (tracksOn.includes(track.sid)) {\n              track.setSwitchedOff(false);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: '_setupTrackSwitchOffMonitor',\n    value: function _setupTrackSwitchOffMonitor(id) {\n      var _this6 = this;\n\n      this._teardownTrackSwitchOff();\n\n      var trackSwitchOffPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this6._trackSwitchOffPromise !== trackSwitchOffPromise) {\n          return;\n        } // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n\n\n        receiver.once('close', function () {\n          return _this6._teardownTrackSwitchOff();\n        });\n        var trackSwitchOffSignaling = new _this6._TrackSwitchOffSignaling(receiver.toDataTransport());\n\n        _this6._setupTrackSwitchOff(trackSwitchOffSignaling);\n      });\n\n      this._trackSwitchOffPromise = trackSwitchOffPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link DominantSpeakerSignaling}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link DominantSpeakerSignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedDominantSpeakerSignaling',\n    value: function _setupDataTransportBackedDominantSpeakerSignaling(id) {\n      var _this7 = this;\n\n      this._teardownDominantSpeakerSignaling();\n\n      var dominantSpeakerSignalingPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this7._dominantSpeakerSignalingPromise !== dominantSpeakerSignalingPromise) {\n          // NOTE(mroberts): _teardownDominantSpeakerSignaling was called.\n          return;\n        } // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n\n\n        receiver.once('close', function () {\n          return _this7._teardownDominantSpeakerSignaling();\n        });\n        var dominantSpeakerSignaling = new _this7._DominantSpeakerSignaling(receiver.toDataTransport());\n\n        _this7._setDominantSpeakerSignaling(dominantSpeakerSignaling);\n      });\n\n      this._dominantSpeakerSignalingPromise = dominantSpeakerSignalingPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link NetworkQualityMonitor}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link NetworkQualitySignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedNetworkQualityMonitor',\n    value: function _setupDataTransportBackedNetworkQualityMonitor(id) {\n      var _this8 = this;\n\n      var self = this;\n\n      this._teardownNetworkQualityMonitor();\n\n      var networkQualityMonitorPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this8._networkQualityMonitorPromise !== networkQualityMonitorPromise) {\n          // NOTE(mroberts): _teardownNetworkQualityMonitor was called.\n          return;\n        } // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and new a RTCDataChannel is created in order\n        // to resume exchanging Network Quality messages.\n\n\n        receiver.once('close', function () {\n          return _this8._teardownNetworkQualityMonitor();\n        });\n        var networkQualitySignaling = new _this8._NetworkQualitySignaling(receiver.toDataTransport(), self._networkQualityConfiguration);\n        var networkQualityMonitor = new _this8._NetworkQualityMonitor(_this8._peerConnectionManager, networkQualitySignaling);\n\n        _this8._setNetworkQualityMonitor(networkQualityMonitor);\n      });\n\n      this._networkQualityMonitorPromise = networkQualityMonitorPromise;\n    }\n  }, {\n    key: '_setDominantSpeakerSignaling',\n    value: function _setDominantSpeakerSignaling(dominantSpeakerSignaling) {\n      var _this9 = this;\n\n      this._dominantSpeakerSignaling = dominantSpeakerSignaling;\n      dominantSpeakerSignaling.on('updated', function () {\n        return _this9.setDominantSpeaker(dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_setNetworkQualityMonitor',\n    value: function _setNetworkQualityMonitor(networkQualityMonitor) {\n      var _this10 = this;\n\n      this._networkQualityMonitor = networkQualityMonitor;\n      networkQualityMonitor.on('updated', function () {\n        if (_this10.iceConnectionState === 'failed') {\n          return;\n        }\n\n        _this10.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n\n        _this10.participants.forEach(function (participant) {\n          var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n\n          if (levels) {\n            participant.setNetworkQualityLevel(levels.level, levels);\n          }\n        });\n      });\n      networkQualityMonitor.start();\n    }\n  }, {\n    key: '_teardownDominantSpeakerSignaling',\n    value: function _teardownDominantSpeakerSignaling() {\n      this._dominantSpeakerSignalingPromise = null;\n      this._dominantSpeakerSignaling = null;\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      this._networkQualityMonitorPromise = null;\n\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n\n        this._networkQualityMonitor = null;\n      }\n    }\n  }, {\n    key: '_teardownTrackPrioritySignaling',\n    value: function _teardownTrackPrioritySignaling() {\n      this._trackPrioritySignaling = null;\n      this._trackPriorityPromise = null;\n      this.localParticipant.setTrackPrioritySignaling(null);\n      this.participants.forEach(function (participant) {\n        participant.setTrackPrioritySignaling(null);\n      });\n    }\n  }, {\n    key: '_teardownTrackSwitchOff',\n    value: function _teardownTrackSwitchOff() {\n      this._trackSwitchOffSignaling = null;\n      this._trackSwitchOffPromise = null;\n    }\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this11 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this11, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this11, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, {\n      trackSid: trackSid\n    })].concat(trackStats) : trackStats;\n  }, []);\n}\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\n\n\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\n\n\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n\n      transport.removeListener('stateChanged', stateChanged);\n    }\n\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\n\n\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add nulls to properties that do not exist.\n        var report = new StatsReport(id, response);\n        transport.publishEvent('quality', 'stats-report', {\n          audioTrackStats: report.remoteAudioTrackStats,\n          localAudioTrackStats: report.localAudioTrackStats,\n          localVideoTrackStats: report.localVideoTrackStats,\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats\n        }); // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n        // payload are assigned default values until the Insights gateway\n        // accepts null values.\n\n        var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n        transport.publishEvent('quality', 'active-ice-candidate-pair', activeIceCandidatePair);\n      });\n    }, function () {// Do nothing.\n    });\n  }, intervalMs);\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    relayProtocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/signaling/v2/room.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","call","_toConsumableArray","arr2","from","_classCallCheck","instance","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","DominantSpeakerSignaling","require","NetworkQualityMonitor","NetworkQualitySignaling","RecordingV2","RoomSignaling","RemoteParticipantV2","StatsReport","TrackPrioritySignaling","TrackSwitchOffSignaling","_require","DEFAULT_SESSION_TIMEOUT_SEC","constants","createBandwidthProfilePayload","defer","filterObject","flatMap","oncePerTick","_require2","createTwilioError","STATS_PUBLISH_INTERVAL_MS","RoomV2","_RoomSignaling","localParticipant","initialState","transport","peerConnectionManager","options","assign","session_timeout","RecordingSignaling","bandwidthProfile","sessionTimeout","statsPublishIntervalMs","setBandwidthProfile","setIceReconnectTimeout","_this","sid","name","_dominantSpeakerSignaling","_DominantSpeakerSignaling","_dominantSpeakerSignalingPromise","_disconnectedParticipantSids","Set","_NetworkQualityMonitor","_NetworkQualitySignaling","_lastBandwidthProfileRevision","bandwidthProfileRevision","_networkQualityMonitor","_networkQualityMonitorPromise","_networkQualityConfiguration","networkQualityConfiguration","_peerConnectionManager","_published","Map","_publishedRevision","_RemoteParticipantV2","_subscribed","_subscribedRevision","_subscriptionFailures","_trackPriorityPromise","_trackPrioritySignaling","_trackSwitchOffPromise","_trackSwitchOffSignaling","_TrackPrioritySignaling","_TrackSwitchOffSignaling","_transport","_trackReceiverDeferreds","mediaRegion","media_region","handleLocalParticipantEvents","handlePeerConnectionEvents","handleTransportEvents","periodicallyPublishStats","_update","_deleteTrackReceiverDeferred","id","delete","_getOrCreateTrackReceiverDeferred","deferred","trackReceivers","getTrackReceivers","trackReceiver","find","readyState","resolve","set","_addTrackReceiver","_disconnect","error","didDisconnect","_teardownDominantSpeakerSignaling","_teardownNetworkQualityMonitor","disconnect","close","tracks","forEach","track","publishFailed","Error","_getTrackReceiver","_this2","promise","then","_getTrackSidsToTrackSignalings","trackSidsToTrackSignalings","participants","participant","_getOrCreateRemoteParticipant","participantState","bind","on","stateChanged","state","removeListener","add","connectParticipant","setTrackPrioritySignaling","_getState","getState","_maybeAddBandwidthProfile","update","_localParticipant","bandwidth_profile","_publishNewLocalParticipantState","publish","_publishPeerConnectionState","peerConnectionState","peer_connections","roomState","_this3","subscribed","revision","trackState","has","subscribedTrackSids","filter","map","trackId","trackSid","participantsToKeep","type","handleSubscriptions","recording","published","connect","identity","media_signaling","active_speaker","_setupDataTransportBackedDominantSpeakerSignaling","label","network_quality","_setupDataTransportBackedNetworkQualityMonitor","track_priority","_setupTrackPrioritySignaling","track_switch_off","_setupTrackSwitchOffMonitor","_this4","_teardownTrackPrioritySignaling","trackPriorityPromise","kind","once","toDataTransport","concat","values","_setupTrackSwitchOff","trackSwitchOffSignaling","_this5","tracksOff","tracksOn","includes","setSwitchedOff","_this6","_teardownTrackSwitchOff","trackSwitchOffPromise","_this7","dominantSpeakerSignalingPromise","dominantSpeakerSignaling","_setDominantSpeakerSignaling","_this8","networkQualityMonitorPromise","networkQualitySignaling","networkQualityMonitor","_setNetworkQualityMonitor","_this9","setDominantSpeaker","loudestParticipantSid","_this10","iceConnectionState","setNetworkQualityLevel","level","levels","remoteLevels","start","stop","getStats","_this11","responses","_ref","_ref2","response","localAudioTrackStats","filterAndAddLocalTrackSids","localVideoTrackStats","remoteAudioTrackStats","filterAndAddRemoteTrackSids","remoteVideoTrackStats","connectionState","filterAndAddTrackSids","idToSid","trackStats","reduce","trackStat","roomV2","localTrackStats","remoteTrackStats","entries","_ref3","_ref4","localParticipantUpdated","renegotiate","trackSenders","trackV2","trackTransceiver","setTrackSenders","signalingConnectionState","reconnecting","onDescription","description","dequeue","onCandidates","candidates","emit","networkQualityLevel","intervalMs","interval","setInterval","stats","report","publishEvent","audioTrackStats","peerConnectionId","videoTrackStats","activeIceCandidatePair","replaceNullsWithDefaults","onStateChanged","clearInterval","room","trackSignaling","subscribeFailed","code","message","isSubscribed","setTrackTransceiver","availableIncomingBitrate","availableOutgoingBitrate","bytesReceived","bytesSent","consentRequestsSent","currentRoundTripTime","lastPacketReceivedTimestamp","lastPacketSentTimestamp","nominated","priority","readable","requestsReceived","requestsSent","responsesReceived","responsesSent","retransmissionsReceived","retransmissionsSent","totalRoundTripTime","transportId","localCandidate","candidateType","deleted","ip","port","protocol","relayProtocol","url","remoteCandidate","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DominantSpeakerSignaling = require('./dominantspeakersignaling');\nvar NetworkQualityMonitor = require('./networkqualitymonitor');\nvar NetworkQualitySignaling = require('./networkqualitysignaling');\nvar RecordingV2 = require('./recording');\nvar RoomSignaling = require('../room');\nvar RemoteParticipantV2 = require('./remoteparticipant');\nvar StatsReport = require('../../stats/statsreport');\nvar TrackPrioritySignaling = require('./trackprioritysignaling');\nvar TrackSwitchOffSignaling = require('./trackswitchoffsignaling');\n\nvar _require = require('../../util'),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar _require2 = require('../../util/twilio-video-errors'),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 1000;\n\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    Object.defineProperties(_this, {\n      _dominantSpeakerSignaling: {\n        value: null,\n        writable: true\n      },\n      _DominantSpeakerSignaling: {\n        value: options.DominantSpeakerSignaling\n      },\n      _dominantSpeakerSignalingPromise: {\n        value: null,\n        writable: true\n      },\n      _disconnectedParticipantSids: {\n        value: new Set()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _NetworkQualitySignaling: {\n        value: options.NetworkQualitySignaling\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityMonitorPromise: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _trackPriorityPromise: {\n        value: null,\n        writable: true\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffPromise: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffSignaling: {\n        value: null,\n        writable: true\n      },\n      _TrackPrioritySignaling: {\n        value: options.TrackPrioritySignaling\n      },\n      _TrackSwitchOffSignaling: {\n        value: options.TrackSwitchOffSignaling\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n    return _this;\n  }\n\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers();\n\n      // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n      if (didDisconnect) {\n        this._teardownDominantSpeakerSignaling();\n        this._teardownNetworkQualityMonitor();\n        this._transport.disconnect();\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n\n      return didDisconnect;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n        return trackReceiver;\n      });\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, this._getTrackReceiver.bind(this));\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n            self._disconnectedParticipantSids.add(participant.sid);\n          }\n        });\n        this.connectParticipant(participant);\n        participant.setTrackPrioritySignaling(this._trackPrioritySignaling);\n      }\n      return participant;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this3 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this3._subscriptionFailures.delete(trackState.sid);\n            _this3._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this3._subscriptionFailures.has(trackState.sid)) {\n            _this3._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this3._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set();\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this3.localParticipant.sid || _this3._disconnectedParticipantSids.has(participantState.sid)) {\n          return;\n        }\n        var participant = _this3._getOrCreateRemoteParticipant(participantState);\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      /* eslint camelcase:0 */\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this3._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      if (!this._dominantSpeakerSignalingPromise && roomState.media_signaling && roomState.media_signaling.active_speaker && roomState.media_signaling.active_speaker.transport && roomState.media_signaling.active_speaker.transport.type === 'data-channel') {\n        this._setupDataTransportBackedDominantSpeakerSignaling(roomState.media_signaling.active_speaker.transport.label);\n      }\n\n      if (!this._networkQualityMonitorPromise && roomState.media_signaling && roomState.media_signaling.network_quality && roomState.media_signaling.network_quality.transport && roomState.media_signaling.network_quality.transport.type === 'data-channel') {\n        this._setupDataTransportBackedNetworkQualityMonitor(roomState.media_signaling.network_quality.transport.label);\n      }\n\n      if (!this._trackPriorityPromise && roomState.media_signaling && roomState.media_signaling.track_priority && roomState.media_signaling.track_priority.transport && roomState.media_signaling.track_priority.transport.type === 'data-channel') {\n        this._setupTrackPrioritySignaling(roomState.media_signaling.track_priority.transport.label);\n      }\n\n      if (!this._trackSwitchOffPromise && roomState.media_signaling && roomState.media_signaling.track_switch_off && roomState.media_signaling.track_switch_off.transport && roomState.media_signaling.track_switch_off.transport.type === 'data-channel') {\n        this._setupTrackSwitchOffMonitor(roomState.media_signaling.track_switch_off.transport.label);\n      }\n\n      return this;\n    }\n\n    // track priority signaling MSP is now used only for subscribe side priority changes.\n    // publisher side priority changes and notifications are handled by RSP.\n\n  }, {\n    key: '_setupTrackPrioritySignaling',\n    value: function _setupTrackPrioritySignaling(id) {\n      var _this4 = this;\n\n      this._teardownTrackPrioritySignaling();\n      var trackPriorityPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this4._trackPriorityPromise !== trackPriorityPromise) {\n          return;\n        }\n\n        // NOTE(mmalavalli): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Track Priority updates.\n        receiver.once('close', function () {\n          return _this4._teardownTrackPrioritySignaling();\n        });\n\n        _this4._trackPrioritySignaling = new _this4._TrackPrioritySignaling(receiver.toDataTransport());\n        [].concat(_toConsumableArray(_this4.participants.values())).forEach(function (participant) {\n          participant.setTrackPrioritySignaling(_this4._trackPrioritySignaling);\n        });\n      });\n      this._trackPriorityPromise = trackPriorityPromise;\n    }\n  }, {\n    key: '_setupTrackSwitchOff',\n    value: function _setupTrackSwitchOff(trackSwitchOffSignaling) {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling = trackSwitchOffSignaling;\n      trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        _this5.participants.forEach(function (participant) {\n          participant.tracks.forEach(function (track) {\n            if (tracksOff.includes(track.sid)) {\n              track.setSwitchedOff(true);\n            }\n            if (tracksOn.includes(track.sid)) {\n              track.setSwitchedOff(false);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: '_setupTrackSwitchOffMonitor',\n    value: function _setupTrackSwitchOffMonitor(id) {\n      var _this6 = this;\n\n      this._teardownTrackSwitchOff();\n      var trackSwitchOffPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this6._trackSwitchOffPromise !== trackSwitchOffPromise) {\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n        receiver.once('close', function () {\n          return _this6._teardownTrackSwitchOff();\n        });\n\n        var trackSwitchOffSignaling = new _this6._TrackSwitchOffSignaling(receiver.toDataTransport());\n        _this6._setupTrackSwitchOff(trackSwitchOffSignaling);\n      });\n      this._trackSwitchOffPromise = trackSwitchOffPromise;\n    }\n\n    /**\n     * Create a {@link DataTransport}-backed {@link DominantSpeakerSignaling}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link DominantSpeakerSignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedDominantSpeakerSignaling',\n    value: function _setupDataTransportBackedDominantSpeakerSignaling(id) {\n      var _this7 = this;\n\n      this._teardownDominantSpeakerSignaling();\n      var dominantSpeakerSignalingPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this7._dominantSpeakerSignalingPromise !== dominantSpeakerSignalingPromise) {\n          // NOTE(mroberts): _teardownDominantSpeakerSignaling was called.\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n        receiver.once('close', function () {\n          return _this7._teardownDominantSpeakerSignaling();\n        });\n\n        var dominantSpeakerSignaling = new _this7._DominantSpeakerSignaling(receiver.toDataTransport());\n        _this7._setDominantSpeakerSignaling(dominantSpeakerSignaling);\n      });\n      this._dominantSpeakerSignalingPromise = dominantSpeakerSignalingPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link NetworkQualityMonitor}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link NetworkQualitySignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedNetworkQualityMonitor',\n    value: function _setupDataTransportBackedNetworkQualityMonitor(id) {\n      var _this8 = this;\n\n      var self = this;\n      this._teardownNetworkQualityMonitor();\n      var networkQualityMonitorPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this8._networkQualityMonitorPromise !== networkQualityMonitorPromise) {\n          // NOTE(mroberts): _teardownNetworkQualityMonitor was called.\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and new a RTCDataChannel is created in order\n        // to resume exchanging Network Quality messages.\n        receiver.once('close', function () {\n          return _this8._teardownNetworkQualityMonitor();\n        });\n\n        var networkQualitySignaling = new _this8._NetworkQualitySignaling(receiver.toDataTransport(), self._networkQualityConfiguration);\n        var networkQualityMonitor = new _this8._NetworkQualityMonitor(_this8._peerConnectionManager, networkQualitySignaling);\n        _this8._setNetworkQualityMonitor(networkQualityMonitor);\n      });\n      this._networkQualityMonitorPromise = networkQualityMonitorPromise;\n    }\n  }, {\n    key: '_setDominantSpeakerSignaling',\n    value: function _setDominantSpeakerSignaling(dominantSpeakerSignaling) {\n      var _this9 = this;\n\n      this._dominantSpeakerSignaling = dominantSpeakerSignaling;\n      dominantSpeakerSignaling.on('updated', function () {\n        return _this9.setDominantSpeaker(dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_setNetworkQualityMonitor',\n    value: function _setNetworkQualityMonitor(networkQualityMonitor) {\n      var _this10 = this;\n\n      this._networkQualityMonitor = networkQualityMonitor;\n      networkQualityMonitor.on('updated', function () {\n        if (_this10.iceConnectionState === 'failed') {\n          return;\n        }\n        _this10.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n        _this10.participants.forEach(function (participant) {\n          var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n          if (levels) {\n            participant.setNetworkQualityLevel(levels.level, levels);\n          }\n        });\n      });\n      networkQualityMonitor.start();\n    }\n  }, {\n    key: '_teardownDominantSpeakerSignaling',\n    value: function _teardownDominantSpeakerSignaling() {\n      this._dominantSpeakerSignalingPromise = null;\n      this._dominantSpeakerSignaling = null;\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      this._networkQualityMonitorPromise = null;\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n        this._networkQualityMonitor = null;\n      }\n    }\n  }, {\n    key: '_teardownTrackPrioritySignaling',\n    value: function _teardownTrackPrioritySignaling() {\n      this._trackPrioritySignaling = null;\n      this._trackPriorityPromise = null;\n      this.localParticipant.setTrackPrioritySignaling(null);\n      this.participants.forEach(function (participant) {\n        participant.setTrackPrioritySignaling(null);\n      });\n    }\n  }, {\n    key: '_teardownTrackSwitchOff',\n    value: function _teardownTrackSwitchOff() {\n      this._trackSwitchOffSignaling = null;\n      this._trackSwitchOffPromise = null;\n    }\n\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this11 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this11, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this11, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, { trackSid: trackSid })].concat(trackStats) : trackStats;\n  }, []);\n}\n\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n      transport.removeListener('stateChanged', stateChanged);\n    }\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add nulls to properties that do not exist.\n        var report = new StatsReport(id, response);\n\n        transport.publishEvent('quality', 'stats-report', {\n          audioTrackStats: report.remoteAudioTrackStats,\n          localAudioTrackStats: report.localAudioTrackStats,\n          localVideoTrackStats: report.localVideoTrackStats,\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats\n        });\n\n        // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n        // payload are assigned default values until the Insights gateway\n        // accepts null values.\n        var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n\n        transport.publishEvent('quality', 'active-ice-candidate-pair', activeIceCandidatePair);\n      });\n    }, function () {\n      // Do nothing.\n    });\n  }, intervalMs);\n\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    relayProtocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;"]},"metadata":{},"sourceType":"script"}