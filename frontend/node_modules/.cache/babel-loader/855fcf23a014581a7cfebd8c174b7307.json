{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/ParticipantInfo/ParticipantConnectionIndicator/ParticipantConnectionIndicator.tsx\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useParticipantIsReconnecting from '../../../hooks/useParticipantIsReconnecting/useParticipantIsReconnecting';\nimport { Tooltip } from '@material-ui/core';\nconst useStyles = makeStyles({\n  indicator: {\n    width: '10px',\n    height: '10px',\n    borderRadius: '100%',\n    background: '#0c0',\n    display: 'inline-block',\n    marginRight: '3px'\n  },\n  isReconnecting: {\n    background: '#ffb100'\n  }\n});\nexport default function ParticipantConnectionIndicator({\n  participant\n}) {\n  const isReconnecting = useParticipantIsReconnecting(participant);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: isReconnecting ? 'Participant is reconnecting' : 'Participant is connected',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.indicator, {\n      [classes.isReconnecting]: isReconnecting\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/ParticipantInfo/ParticipantConnectionIndicator/ParticipantConnectionIndicator.tsx"],"names":["React","clsx","makeStyles","useParticipantIsReconnecting","Tooltip","useStyles","indicator","width","height","borderRadius","background","display","marginRight","isReconnecting","ParticipantConnectionIndicator","participant","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,4BAAP,MAAyC,0EAAzC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,YAAY,EAAE,MAHL;AAITC,IAAAA,UAAU,EAAE,MAJH;AAKTC,IAAAA,OAAO,EAAE,cALA;AAMTC,IAAAA,WAAW,EAAE;AANJ,GADgB;AAS3BC,EAAAA,cAAc,EAAE;AACdH,IAAAA,UAAU,EAAE;AADE;AATW,CAAD,CAA5B;AAcA,eAAe,SAASI,8BAAT,CAAwC;AAAEC,EAAAA;AAAF,CAAxC,EAAuF;AACpG,QAAMF,cAAc,GAAGV,4BAA4B,CAACY,WAAD,CAAnD;AACA,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,sBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEQ,cAAc,GAAG,6BAAH,GAAmC,0BAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEZ,IAAI,CAACe,OAAO,CAACV,SAAT,EAAoB;AAAE,OAACU,OAAO,CAACH,cAAT,GAA0BA;AAA5B,KAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Participant } from 'twilio-video';\nimport useParticipantIsReconnecting from '../../../hooks/useParticipantIsReconnecting/useParticipantIsReconnecting';\nimport { Tooltip } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  indicator: {\n    width: '10px',\n    height: '10px',\n    borderRadius: '100%',\n    background: '#0c0',\n    display: 'inline-block',\n    marginRight: '3px',\n  },\n  isReconnecting: {\n    background: '#ffb100',\n  },\n});\n\nexport default function ParticipantConnectionIndicator({ participant }: { participant: Participant }) {\n  const isReconnecting = useParticipantIsReconnecting(participant);\n  const classes = useStyles();\n  return (\n    <Tooltip title={isReconnecting ? 'Participant is reconnecting' : 'Participant is connected'}>\n      <span className={clsx(classes.indicator, { [classes.isReconnecting]: isReconnecting })}></span>\n    </Tooltip>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}