{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useVideoContext from '../useVideoContext/useVideoContext';\nexport default function useRoomState() {\n  const {\n    room\n  } = useVideoContext();\n  const [state, setState] = useState('disconnected');\n  useEffect(() => {\n    const setRoomState = () => setState(room.state || 'disconnected');\n\n    setRoomState();\n    room.on('disconnected', setRoomState).on('reconnected', setRoomState).on('reconnecting', setRoomState);\n    return () => {\n      room.off('disconnected', setRoomState).off('reconnected', setRoomState).off('reconnecting', setRoomState);\n    };\n  }, [room]);\n  return state;\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/hooks/useRoomState/useRoomState.tsx"],"names":["useEffect","useState","useVideoContext","useRoomState","room","state","setState","setRoomState","on","off"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAIA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAWF,eAAe,EAAhC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAgB,cAAhB,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,YAAY,GAAG,MAAMD,QAAQ,CAAEF,IAAI,CAACC,KAAL,IAAc,cAAhB,CAAnC;;AACAE,IAAAA,YAAY;AACZH,IAAAA,IAAI,CACDI,EADH,CACM,cADN,EACsBD,YADtB,EAEGC,EAFH,CAEM,aAFN,EAEqBD,YAFrB,EAGGC,EAHH,CAGM,cAHN,EAGsBD,YAHtB;AAIA,WAAO,MAAM;AACXH,MAAAA,IAAI,CACDK,GADH,CACO,cADP,EACuBF,YADvB,EAEGE,GAFH,CAEO,aAFP,EAEsBF,YAFtB,EAGGE,GAHH,CAGO,cAHP,EAGuBF,YAHvB;AAID,KALD;AAMD,GAbQ,EAaN,CAACH,IAAD,CAbM,CAAT;AAeA,SAAOC,KAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport useVideoContext from '../useVideoContext/useVideoContext';\n\ntype RoomStateType = 'disconnected' | 'connected' | 'reconnecting';\n\nexport default function useRoomState() {\n  const { room } = useVideoContext();\n  const [state, setState] = useState<RoomStateType>('disconnected');\n\n  useEffect(() => {\n    const setRoomState = () => setState((room.state || 'disconnected') as RoomStateType);\n    setRoomState();\n    room\n      .on('disconnected', setRoomState)\n      .on('reconnected', setRoomState)\n      .on('reconnecting', setRoomState);\n    return () => {\n      room\n        .off('disconnected', setRoomState)\n        .off('reconnected', setRoomState)\n        .off('reconnecting', setRoomState);\n    };\n  }, [room]);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}