{"ast":null,"code":"\"use strict\";\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar events_1 = require(\"events\");\n\nvar index_1 = require(\"./util/index\");\n\nvar logger_1 = require(\"./logger\");\n\nvar media_1 = require(\"./media\");\n\nvar log = logger_1.Logger.scope('Message');\n\nfunction parseAttributes(msgSid, attributes) {\n  try {\n    return attributes ? JSON.parse(attributes) : {};\n  } catch (e) {\n    log.warn('Got malformed attributes for the message', msgSid);\n    return {};\n  }\n}\n/**\n * @classdesc A Message represents a Message in a Channel.\n * @property {String} author - The name of the user that sent Message\n * @property {String} body - The body of the Message. Is null if Message is Media Message\n * @property {Object} attributes - Message custom attributes\n * @property {Channel} channel - Channel Message belongs to\n * @property {Date} dateUpdated - When Message was updated\n * @property {Number} index - Index of Message in the Channel's messages list\n * @property {String} lastUpdatedBy - Identity of the last user that updated Message\n * @property {Media} media - Contains Media information (if present)\n * @property {String} memberSid - Authoring Member's server-assigned unique identifier\n * @property {String} sid - The server-assigned unique identifier for Message\n * @property {Date} timestamp - When Message was created\n * @property {'text' | 'media' } type - Type of message: 'text' or 'media'\n * @fires Message#updated\n */\n\n\nvar Message = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Message, _events_1$EventEmitte);\n  /**\n   * The update reason for <code>updated</code> event emitted on Message\n   * @typedef {('body' | 'lastUpdatedBy' | 'dateUpdated' | 'timestamp' | 'attributes' | 'author')} Message#UpdateReason\n   */\n\n  function Message(channel, services, index, data) {\n    (0, _classCallCheck3.default)(this, Message);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Message.__proto__ || (0, _getPrototypeOf2.default)(Message)).call(this));\n\n    _this.channel = channel;\n    _this.services = services;\n    _this.state = {\n      sid: data.sid,\n      index: index,\n      author: data.author == null ? null : data.author,\n      body: data.text,\n      timestamp: data.timestamp ? new Date(data.timestamp) : null,\n      dateUpdated: data.dateUpdated ? new Date(data.dateUpdated) : null,\n      lastUpdatedBy: data.lastUpdatedBy ? data.lastUpdatedBy : null,\n      attributes: parseAttributes(data.sid, data.attributes),\n      type: data.type ? data.type : 'text',\n      media: data.type && data.type === 'media' && data.media ? new media_1.Media(data.media, _this.services) : null,\n      memberSid: data.memberSid == null ? null : data.memberSid\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Message, [{\n    key: \"_update\",\n    value: function _update(data) {\n      var updateReasons = [];\n\n      if ((data.text || typeof data.text === 'string') && data.text !== this.state.body) {\n        this.state.body = data.text;\n        updateReasons.push('body');\n      }\n\n      if (data.lastUpdatedBy && data.lastUpdatedBy !== this.state.lastUpdatedBy) {\n        this.state.lastUpdatedBy = data.lastUpdatedBy;\n        updateReasons.push('lastUpdatedBy');\n      }\n\n      if (data.author && data.author !== this.state.author) {\n        this.state.author = data.author;\n        updateReasons.push('author');\n      }\n\n      if (data.dateUpdated && new Date(data.dateUpdated).getTime() !== (this.state.dateUpdated && this.state.dateUpdated.getTime())) {\n        this.state.dateUpdated = new Date(data.dateUpdated);\n        updateReasons.push('dateUpdated');\n      }\n\n      if (data.timestamp && new Date(data.timestamp).getTime() !== (this.state.timestamp && this.state.timestamp.getTime())) {\n        this.state.timestamp = new Date(data.timestamp);\n        updateReasons.push('timestamp');\n      }\n\n      var updatedAttributes = parseAttributes(this.sid, data.attributes);\n\n      if (!index_1.isDeepEqual(this.state.attributes, updatedAttributes)) {\n        this.state.attributes = updatedAttributes;\n        updateReasons.push('attributes');\n      }\n\n      if (updateReasons.length > 0) {\n        this.emit('updated', {\n          message: this,\n          updateReasons: updateReasons\n        });\n      }\n    }\n    /**\n     * Get Member who is author of the Message\n     * @returns {Promise<Member>}\n     */\n\n  }, {\n    key: \"getMember\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n        var _this2 = this;\n\n        var member, errorMesage;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                member = null;\n\n                if (!this.state.memberSid) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.channel.getMemberBySid(this.memberSid).catch(function () {\n                  log.debug('Member with sid \"' + _this2.memberSid + '\" not found for message ' + _this2.sid);\n                  return null;\n                });\n\n              case 4:\n                member = _context.sent;\n\n              case 5:\n                if (!(!member && this.state.author)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.channel.getMemberByIdentity(this.state.author).catch(function () {\n                  log.debug('Member with identity \"' + _this2.author + '\" not found for message ' + _this2.sid);\n                  return null;\n                });\n\n              case 8:\n                member = _context.sent;\n\n              case 9:\n                if (!member) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", member);\n\n              case 11:\n                errorMesage = 'Member with ';\n\n                if (this.state.memberSid) {\n                  errorMesage += 'SID \\'' + this.state.memberSid + '\\' ';\n                }\n\n                if (this.state.author) {\n                  if (this.state.memberSid) {\n                    errorMesage += 'or ';\n                  }\n\n                  errorMesage += 'identity \\'' + this.state.author + '\\' ';\n                }\n\n                if (errorMesage === 'Member with ') {\n                  errorMesage = 'Member ';\n                }\n\n                errorMesage += 'was not found';\n                throw new Error(errorMesage);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMember() {\n        return _ref.apply(this, arguments);\n      }\n\n      return getMember;\n    }()\n    /**\n     * Remove the Message.\n     * @returns {Promise<Message|SessionError>}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {\n        return _regenerator2.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.services.session.addCommand('deleteMessage', {\n                  channelSid: this.channel.sid,\n                  messageIdx: this.index.toString()\n                });\n\n              case 2:\n                return _context2.abrupt(\"return\", this);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function remove() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return remove;\n    }()\n    /**\n     * Edit message body.\n     * @param {String} body - new body of Message.\n     * @returns {Promise<Message|Error|SessionError>}\n     */\n\n  }, {\n    key: \"updateBody\",\n    value: function () {\n      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(body) {\n        return _regenerator2.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(typeof body !== 'string')) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new Error('Body <String> is a required parameter for updateBody');\n\n              case 2:\n                _context3.next = 4;\n                return this.services.session.addCommand('editMessage', {\n                  channelSid: this.channel.sid,\n                  messageIdx: this.index.toString(),\n                  text: body\n                });\n\n              case 4:\n                return _context3.abrupt(\"return\", this);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateBody(_x) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return updateBody;\n    }()\n    /**\n     * Edit message attributes.\n     * @param {Object} attributes new attributes for Message.\n     * @returns {Promise<Message|Error|SessionError>}\n     */\n\n  }, {\n    key: \"updateAttributes\",\n    value: function () {\n      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(attributes) {\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(typeof attributes === 'undefined')) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new Error('Attributes is required parameter');\n\n              case 4:\n                if (!(attributes === null)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                throw new Error('Attributes can\\'t be null');\n\n              case 8:\n                if (!(attributes.constructor !== Object)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                throw new Error('Attributes must be a valid JSON object');\n\n              case 10:\n                _context4.next = 12;\n                return this.services.session.addCommand('editMessageAttributes', {\n                  channelSid: this.channel.sid,\n                  messageIdx: this.index,\n                  attributes: (0, _stringify2.default)(attributes)\n                });\n\n              case 12:\n                return _context4.abrupt(\"return\", this);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function updateAttributes(_x2) {\n        return _ref4.apply(this, arguments);\n      }\n\n      return updateAttributes;\n    }()\n  }, {\n    key: \"sid\",\n    get: function get() {\n      return this.state.sid;\n    }\n  }, {\n    key: \"author\",\n    get: function get() {\n      return this.state.author;\n    }\n  }, {\n    key: \"body\",\n    get: function get() {\n      if (this.type === 'media') {\n        return null;\n      }\n\n      return this.state.body;\n    }\n  }, {\n    key: \"dateUpdated\",\n    get: function get() {\n      return this.state.dateUpdated;\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this.state.index;\n    }\n  }, {\n    key: \"lastUpdatedBy\",\n    get: function get() {\n      return this.state.lastUpdatedBy;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return this.state.timestamp;\n    }\n  }, {\n    key: \"attributes\",\n    get: function get() {\n      return this.state.attributes;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.state.type;\n    }\n  }, {\n    key: \"media\",\n    get: function get() {\n      return this.state.media;\n    }\n  }, {\n    key: \"memberSid\",\n    get: function get() {\n      return this.state.memberSid;\n    }\n  }]);\n  return Message;\n}(events_1.EventEmitter);\n\nexports.Message = Message;\n/**\n * Fired when the Message's properties or body has been updated.\n * @event Message#updated\n * @type {Object}\n * @property {Message} message - Updated Message\n * @property {Message#UpdateReason[]} updateReasons - Array of Message's updated event reasons\n */","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-chat/browser/message.js"],"names":["_stringify","require","_stringify2","_interopRequireDefault","_regenerator","_regenerator2","_asyncToGenerator2","_asyncToGenerator3","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","events_1","index_1","logger_1","media_1","log","Logger","scope","parseAttributes","msgSid","attributes","JSON","parse","e","warn","Message","_events_1$EventEmitte","channel","services","index","data","_this","__proto__","call","state","sid","author","body","text","timestamp","Date","dateUpdated","lastUpdatedBy","type","media","Media","memberSid","key","_update","updateReasons","push","getTime","updatedAttributes","isDeepEqual","length","emit","message","_ref","mark","_callee","_this2","member","errorMesage","wrap","_callee$","_context","prev","next","getMemberBySid","catch","debug","sent","getMemberByIdentity","abrupt","Error","stop","getMember","apply","arguments","_ref2","_callee2","_callee2$","_context2","session","addCommand","channelSid","messageIdx","toString","remove","_ref3","_callee3","_callee3$","_context3","updateBody","_x","_ref4","_callee4","_callee4$","_context4","constructor","updateAttributes","_x2","get","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"events\");\nvar index_1 = require(\"./util/index\");\nvar logger_1 = require(\"./logger\");\nvar media_1 = require(\"./media\");\nvar log = logger_1.Logger.scope('Message');\nfunction parseAttributes(msgSid, attributes) {\n    try {\n        return attributes ? JSON.parse(attributes) : {};\n    } catch (e) {\n        log.warn('Got malformed attributes for the message', msgSid);\n        return {};\n    }\n}\n/**\n * @classdesc A Message represents a Message in a Channel.\n * @property {String} author - The name of the user that sent Message\n * @property {String} body - The body of the Message. Is null if Message is Media Message\n * @property {Object} attributes - Message custom attributes\n * @property {Channel} channel - Channel Message belongs to\n * @property {Date} dateUpdated - When Message was updated\n * @property {Number} index - Index of Message in the Channel's messages list\n * @property {String} lastUpdatedBy - Identity of the last user that updated Message\n * @property {Media} media - Contains Media information (if present)\n * @property {String} memberSid - Authoring Member's server-assigned unique identifier\n * @property {String} sid - The server-assigned unique identifier for Message\n * @property {Date} timestamp - When Message was created\n * @property {'text' | 'media' } type - Type of message: 'text' or 'media'\n * @fires Message#updated\n */\n\nvar Message = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Message, _events_1$EventEmitte);\n\n    /**\n     * The update reason for <code>updated</code> event emitted on Message\n     * @typedef {('body' | 'lastUpdatedBy' | 'dateUpdated' | 'timestamp' | 'attributes' | 'author')} Message#UpdateReason\n     */\n    function Message(channel, services, index, data) {\n        (0, _classCallCheck3.default)(this, Message);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Message.__proto__ || (0, _getPrototypeOf2.default)(Message)).call(this));\n\n        _this.channel = channel;\n        _this.services = services;\n        _this.state = {\n            sid: data.sid,\n            index: index,\n            author: data.author == null ? null : data.author,\n            body: data.text,\n            timestamp: data.timestamp ? new Date(data.timestamp) : null,\n            dateUpdated: data.dateUpdated ? new Date(data.dateUpdated) : null,\n            lastUpdatedBy: data.lastUpdatedBy ? data.lastUpdatedBy : null,\n            attributes: parseAttributes(data.sid, data.attributes),\n            type: data.type ? data.type : 'text',\n            media: data.type && data.type === 'media' && data.media ? new media_1.Media(data.media, _this.services) : null,\n            memberSid: data.memberSid == null ? null : data.memberSid\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(Message, [{\n        key: \"_update\",\n        value: function _update(data) {\n            var updateReasons = [];\n            if ((data.text || typeof data.text === 'string') && data.text !== this.state.body) {\n                this.state.body = data.text;\n                updateReasons.push('body');\n            }\n            if (data.lastUpdatedBy && data.lastUpdatedBy !== this.state.lastUpdatedBy) {\n                this.state.lastUpdatedBy = data.lastUpdatedBy;\n                updateReasons.push('lastUpdatedBy');\n            }\n            if (data.author && data.author !== this.state.author) {\n                this.state.author = data.author;\n                updateReasons.push('author');\n            }\n            if (data.dateUpdated && new Date(data.dateUpdated).getTime() !== (this.state.dateUpdated && this.state.dateUpdated.getTime())) {\n                this.state.dateUpdated = new Date(data.dateUpdated);\n                updateReasons.push('dateUpdated');\n            }\n            if (data.timestamp && new Date(data.timestamp).getTime() !== (this.state.timestamp && this.state.timestamp.getTime())) {\n                this.state.timestamp = new Date(data.timestamp);\n                updateReasons.push('timestamp');\n            }\n            var updatedAttributes = parseAttributes(this.sid, data.attributes);\n            if (!index_1.isDeepEqual(this.state.attributes, updatedAttributes)) {\n                this.state.attributes = updatedAttributes;\n                updateReasons.push('attributes');\n            }\n            if (updateReasons.length > 0) {\n                this.emit('updated', { message: this, updateReasons: updateReasons });\n            }\n        }\n        /**\n         * Get Member who is author of the Message\n         * @returns {Promise<Member>}\n         */\n\n    }, {\n        key: \"getMember\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n                var _this2 = this;\n\n                var member, errorMesage;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                member = null;\n\n                                if (!this.state.memberSid) {\n                                    _context.next = 5;\n                                    break;\n                                }\n\n                                _context.next = 4;\n                                return this.channel.getMemberBySid(this.memberSid).catch(function () {\n                                    log.debug('Member with sid \"' + _this2.memberSid + '\" not found for message ' + _this2.sid);\n                                    return null;\n                                });\n\n                            case 4:\n                                member = _context.sent;\n\n                            case 5:\n                                if (!(!member && this.state.author)) {\n                                    _context.next = 9;\n                                    break;\n                                }\n\n                                _context.next = 8;\n                                return this.channel.getMemberByIdentity(this.state.author).catch(function () {\n                                    log.debug('Member with identity \"' + _this2.author + '\" not found for message ' + _this2.sid);\n                                    return null;\n                                });\n\n                            case 8:\n                                member = _context.sent;\n\n                            case 9:\n                                if (!member) {\n                                    _context.next = 11;\n                                    break;\n                                }\n\n                                return _context.abrupt(\"return\", member);\n\n                            case 11:\n                                errorMesage = 'Member with ';\n\n                                if (this.state.memberSid) {\n                                    errorMesage += 'SID \\'' + this.state.memberSid + '\\' ';\n                                }\n                                if (this.state.author) {\n                                    if (this.state.memberSid) {\n                                        errorMesage += 'or ';\n                                    }\n                                    errorMesage += 'identity \\'' + this.state.author + '\\' ';\n                                }\n                                if (errorMesage === 'Member with ') {\n                                    errorMesage = 'Member ';\n                                }\n                                errorMesage += 'was not found';\n                                throw new Error(errorMesage);\n\n                            case 17:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function getMember() {\n                return _ref.apply(this, arguments);\n            }\n\n            return getMember;\n        }()\n        /**\n         * Remove the Message.\n         * @returns {Promise<Message|SessionError>}\n         */\n\n    }, {\n        key: \"remove\",\n        value: function () {\n            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {\n                return _regenerator2.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                _context2.next = 2;\n                                return this.services.session.addCommand('deleteMessage', {\n                                    channelSid: this.channel.sid,\n                                    messageIdx: this.index.toString()\n                                });\n\n                            case 2:\n                                return _context2.abrupt(\"return\", this);\n\n                            case 3:\n                            case \"end\":\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n\n            function remove() {\n                return _ref2.apply(this, arguments);\n            }\n\n            return remove;\n        }()\n        /**\n         * Edit message body.\n         * @param {String} body - new body of Message.\n         * @returns {Promise<Message|Error|SessionError>}\n         */\n\n    }, {\n        key: \"updateBody\",\n        value: function () {\n            var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(body) {\n                return _regenerator2.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                        switch (_context3.prev = _context3.next) {\n                            case 0:\n                                if (!(typeof body !== 'string')) {\n                                    _context3.next = 2;\n                                    break;\n                                }\n\n                                throw new Error('Body <String> is a required parameter for updateBody');\n\n                            case 2:\n                                _context3.next = 4;\n                                return this.services.session.addCommand('editMessage', {\n                                    channelSid: this.channel.sid,\n                                    messageIdx: this.index.toString(),\n                                    text: body\n                                });\n\n                            case 4:\n                                return _context3.abrupt(\"return\", this);\n\n                            case 5:\n                            case \"end\":\n                                return _context3.stop();\n                        }\n                    }\n                }, _callee3, this);\n            }));\n\n            function updateBody(_x) {\n                return _ref3.apply(this, arguments);\n            }\n\n            return updateBody;\n        }()\n        /**\n         * Edit message attributes.\n         * @param {Object} attributes new attributes for Message.\n         * @returns {Promise<Message|Error|SessionError>}\n         */\n\n    }, {\n        key: \"updateAttributes\",\n        value: function () {\n            var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(attributes) {\n                return _regenerator2.default.wrap(function _callee4$(_context4) {\n                    while (1) {\n                        switch (_context4.prev = _context4.next) {\n                            case 0:\n                                if (!(typeof attributes === 'undefined')) {\n                                    _context4.next = 4;\n                                    break;\n                                }\n\n                                throw new Error('Attributes is required parameter');\n\n                            case 4:\n                                if (!(attributes === null)) {\n                                    _context4.next = 8;\n                                    break;\n                                }\n\n                                throw new Error('Attributes can\\'t be null');\n\n                            case 8:\n                                if (!(attributes.constructor !== Object)) {\n                                    _context4.next = 10;\n                                    break;\n                                }\n\n                                throw new Error('Attributes must be a valid JSON object');\n\n                            case 10:\n                                _context4.next = 12;\n                                return this.services.session.addCommand('editMessageAttributes', {\n                                    channelSid: this.channel.sid,\n                                    messageIdx: this.index,\n                                    attributes: (0, _stringify2.default)(attributes)\n                                });\n\n                            case 12:\n                                return _context4.abrupt(\"return\", this);\n\n                            case 13:\n                            case \"end\":\n                                return _context4.stop();\n                        }\n                    }\n                }, _callee4, this);\n            }));\n\n            function updateAttributes(_x2) {\n                return _ref4.apply(this, arguments);\n            }\n\n            return updateAttributes;\n        }()\n    }, {\n        key: \"sid\",\n        get: function get() {\n            return this.state.sid;\n        }\n    }, {\n        key: \"author\",\n        get: function get() {\n            return this.state.author;\n        }\n    }, {\n        key: \"body\",\n        get: function get() {\n            if (this.type === 'media') {\n                return null;\n            }\n            return this.state.body;\n        }\n    }, {\n        key: \"dateUpdated\",\n        get: function get() {\n            return this.state.dateUpdated;\n        }\n    }, {\n        key: \"index\",\n        get: function get() {\n            return this.state.index;\n        }\n    }, {\n        key: \"lastUpdatedBy\",\n        get: function get() {\n            return this.state.lastUpdatedBy;\n        }\n    }, {\n        key: \"timestamp\",\n        get: function get() {\n            return this.state.timestamp;\n        }\n    }, {\n        key: \"attributes\",\n        get: function get() {\n            return this.state.attributes;\n        }\n    }, {\n        key: \"type\",\n        get: function get() {\n            return this.state.type;\n        }\n    }, {\n        key: \"media\",\n        get: function get() {\n            return this.state.media;\n        }\n    }, {\n        key: \"memberSid\",\n        get: function get() {\n            return this.state.memberSid;\n        }\n    }]);\n    return Message;\n}(events_1.EventEmitter);\n\nexports.Message = Message;\n/**\n * Fired when the Message's properties or body has been updated.\n * @event Message#updated\n * @type {Object}\n * @property {Message} message - Updated Message\n * @property {Message#UpdateReason[]} updateReasons - Array of Message's updated event reasons\n */"]},"metadata":{},"sourceType":"script"}