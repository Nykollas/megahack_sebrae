{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar _require = require('./'),\n    defer = _require.defer;\n/**\n * An {@link AsyncVar} is an \"asynchronous variable\" which may or may not\n * contain a value of some type T. You can put a value into the {@link AsyncVar}\n * with {@link AsyncVar#put}. Callers can take a value out of the\n * {@link AsyncVar} by queueing up with {@link AsyncVar#take}. N calls to\n * {@link AsyncVar#take} require N calls to {@link AsyncVar#put} to resolve, and\n * they resolve in order.\n */\n\n\nvar AsyncVar = function () {\n  /**\n   * Construct an {@link AsyncVar}.\n   */\n  function AsyncVar() {\n    _classCallCheck(this, AsyncVar);\n\n    Object.defineProperties(this, {\n      _deferreds: {\n        value: []\n      },\n      _hasValue: {\n        value: false,\n        writable: true\n      },\n      _value: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n  /**\n   * Put a value into the {@link AsyncVar}.\n   * @param {T} value\n   * @returns {this}\n   */\n\n\n  _createClass(AsyncVar, [{\n    key: 'put',\n    value: function put(value) {\n      this._hasValue = true;\n      this._value = value;\n\n      var deferred = this._deferreds.shift();\n\n      if (deferred) {\n        deferred.resolve(value);\n      }\n\n      return this;\n    }\n    /**\n     * Take the value out of the {@link AsyncVar}.\n     * @returns {Promise<T>}\n     */\n\n  }, {\n    key: 'take',\n    value: function take() {\n      var _this = this;\n\n      if (this._hasValue && !this._deferreds.length) {\n        this._hasValue = false;\n        return Promise.resolve(this._value);\n      }\n\n      var deferred = defer();\n\n      this._deferreds.push(deferred);\n\n      return deferred.promise.then(function (value) {\n        _this._hasValue = false;\n        return value;\n      });\n    }\n  }]);\n\n  return AsyncVar;\n}();\n\nmodule.exports = AsyncVar;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/util/asyncvar.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_require","require","defer","AsyncVar","_deferreds","value","_hasValue","_value","put","deferred","shift","resolve","take","_this","Promise","push","promise","then","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./'),\n    defer = _require.defer;\n\n/**\n * An {@link AsyncVar} is an \"asynchronous variable\" which may or may not\n * contain a value of some type T. You can put a value into the {@link AsyncVar}\n * with {@link AsyncVar#put}. Callers can take a value out of the\n * {@link AsyncVar} by queueing up with {@link AsyncVar#take}. N calls to\n * {@link AsyncVar#take} require N calls to {@link AsyncVar#put} to resolve, and\n * they resolve in order.\n */\n\n\nvar AsyncVar = function () {\n  /**\n   * Construct an {@link AsyncVar}.\n   */\n  function AsyncVar() {\n    _classCallCheck(this, AsyncVar);\n\n    Object.defineProperties(this, {\n      _deferreds: {\n        value: []\n      },\n      _hasValue: {\n        value: false,\n        writable: true\n      },\n      _value: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  /**\n   * Put a value into the {@link AsyncVar}.\n   * @param {T} value\n   * @returns {this}\n   */\n\n\n  _createClass(AsyncVar, [{\n    key: 'put',\n    value: function put(value) {\n      this._hasValue = true;\n      this._value = value;\n      var deferred = this._deferreds.shift();\n      if (deferred) {\n        deferred.resolve(value);\n      }\n      return this;\n    }\n\n    /**\n     * Take the value out of the {@link AsyncVar}.\n     * @returns {Promise<T>}\n     */\n\n  }, {\n    key: 'take',\n    value: function take() {\n      var _this = this;\n\n      if (this._hasValue && !this._deferreds.length) {\n        this._hasValue = false;\n        return Promise.resolve(this._value);\n      }\n      var deferred = defer();\n      this._deferreds.push(deferred);\n      return deferred.promise.then(function (value) {\n        _this._hasValue = false;\n        return value;\n      });\n    }\n  }]);\n\n  return AsyncVar;\n}();\n\nmodule.exports = AsyncVar;"]},"metadata":{},"sourceType":"script"}