{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _require = require('@twilio/webrtc'),\n    MediaStreamTrack = _require.MediaStreamTrack;\n\nvar _require2 = require('./util'),\n    asLocalTrack = _require2.asLocalTrack,\n    asLocalTrackPublication = _require2.asLocalTrackPublication,\n    trackClass = _require2.trackClass;\n\nvar _require3 = require('./util/constants'),\n    E = _require3.typeErrors,\n    trackPriority = _require3.trackPriority;\n\nvar _require4 = require('./util/validate'),\n    validateLocalTrack = _require4.validateLocalTrack;\n\nvar _require5 = require('./media/track/es5'),\n    LocalAudioTrack = _require5.LocalAudioTrack,\n    LocalDataTrack = _require5.LocalDataTrack,\n    LocalVideoTrack = _require5.LocalVideoTrack;\n\nvar LocalAudioTrackPublication = require('./media/track/localaudiotrackpublication');\n\nvar LocalDataTrackPublication = require('./media/track/localdatatrackpublication');\n\nvar LocalVideoTrackPublication = require('./media/track/localvideotrackpublication');\n\nvar Participant = require('./participant');\n/**\n * A {@link LocalParticipant} represents the local {@link Participant} in a\n * {@link Room}.\n * @extends Participant\n * @property {Map<Track.SID, LocalAudioTrackPublication>} audioTracks -\n *    The {@link LocalParticipant}'s {@link LocalAudioTrackPublication}s\n * @property {Map<Track.SID, LocalDataTrackPublication>} dataTracks -\n *    The {@link LocalParticipant}'s {@link LocalDataTrackPublication}s\n * @property {Map<Track.SID, LocalTrackPublication>} tracks -\n *    The {@link LocalParticipant}'s {@link LocalTrackPublication}s\n * @property {Map<Track.SID, LocalVideoTrackPublication>} videoTracks -\n *    The {@link LocalParticipant}'s {@link LocalVideoTrackPublication}s\n * @property {string} signalingRegion - The geographical region of the\n *     signaling edge the {@link LocalParticipant} is connected to.\n *\n * @emits RemoteParticipant#reconnected\n * @emits RemoteParticipant#reconnecting\n * @emits LocalParticipant#trackDimensionsChanged\n * @emits LocalParticipant#trackDisabled\n * @emits LocalParticipant#trackEnabled\n * @emits LocalParticipant#trackPublicationFailed\n * @emits LocalParticipant#trackPublished\n * @emits LocalParticipant#trackStarted\n * @emits LocalParticipant#trackStopped\n */\n\n\nvar LocalParticipant = function (_Participant) {\n  _inherits(LocalParticipant, _Participant);\n  /**\n   * Construct a {@link LocalParticipant}.\n   * @param {ParticipantSignaling} signaling\n   * @param {Array<LocalTrack>} localTracks\n   * @param {Object} options\n   */\n\n\n  function LocalParticipant(signaling, localTracks, options) {\n    _classCallCheck(this, LocalParticipant);\n\n    options = Object.assign({\n      LocalAudioTrack: LocalAudioTrack,\n      LocalVideoTrack: LocalVideoTrack,\n      LocalDataTrack: LocalDataTrack,\n      MediaStreamTrack: MediaStreamTrack,\n      LocalAudioTrackPublication: LocalAudioTrackPublication,\n      LocalVideoTrackPublication: LocalVideoTrackPublication,\n      LocalDataTrackPublication: LocalDataTrackPublication,\n      shouldStopLocalTracks: false,\n      tracks: localTracks\n    }, options);\n    var tracksToStop = options.shouldStopLocalTracks ? new Set(localTracks.filter(function (localTrack) {\n      return localTrack.kind !== 'data';\n    })) : new Set();\n\n    var _this = _possibleConstructorReturn(this, (LocalParticipant.__proto__ || Object.getPrototypeOf(LocalParticipant)).call(this, signaling, options));\n\n    Object.defineProperties(_this, {\n      _LocalAudioTrack: {\n        value: options.LocalAudioTrack\n      },\n      _LocalDataTrack: {\n        value: options.LocalDataTrack\n      },\n      _LocalVideoTrack: {\n        value: options.LocalVideoTrack\n      },\n      _MediaStreamTrack: {\n        value: options.MediaStreamTrack\n      },\n      _LocalAudioTrackPublication: {\n        value: options.LocalAudioTrackPublication\n      },\n      _LocalDataTrackPublication: {\n        value: options.LocalDataTrackPublication\n      },\n      _LocalVideoTrackPublication: {\n        value: options.LocalVideoTrackPublication\n      },\n      _tracksToStop: {\n        value: tracksToStop\n      },\n      signalingRegion: {\n        enumerable: true,\n        get: function get() {\n          return signaling.signalingRegion;\n        }\n      }\n    });\n\n    _this._handleTrackSignalingEvents();\n\n    return _this;\n  }\n  /**\n   * @private\n   * @param {LocalTrack} track\n   * @param {Track.ID} id\n   * @param {Track.Priority} priority\n   * @returns {?LocalTrack}\n   */\n\n\n  _createClass(LocalParticipant, [{\n    key: '_addTrack',\n    value: function _addTrack(track, id, priority) {\n      var addedTrack = _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_addTrack', this).call(this, track, id);\n\n      if (addedTrack && this.state !== 'disconnected') {\n        this._addLocalTrack(track, priority);\n      }\n\n      return addedTrack;\n    }\n    /**\n     * @private\n     * @param {LocalTrack} track\n     * @param {Track.Priority} priority\n     * @returns {void}\n     */\n\n  }, {\n    key: '_addLocalTrack',\n    value: function _addLocalTrack(track, priority) {\n      this._signaling.addTrack(track._trackSender, track.name, priority);\n\n      this._log.info('Added a new ' + trackClass(track, true) + ':', track.id);\n\n      this._log.debug(trackClass(track, true) + ':', track);\n    }\n    /**\n     * @private\n     * @param {LocalTrack} track\n     * @param {Track.ID} id\n     * @returns {?LocalTrack}\n     */\n\n  }, {\n    key: '_removeTrack',\n    value: function _removeTrack(track, id) {\n      var removedTrack = _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_removeTrack', this).call(this, track, id);\n\n      if (removedTrack && this.state !== 'disconnected') {\n        this._signaling.removeTrack(track._trackSender);\n\n        this._log.info('Removed a ' + trackClass(track, true) + ':', track.id);\n\n        this._log.debug(trackClass(track, true) + ':', track);\n      }\n\n      return removedTrack;\n    }\n    /**\n     * Get the {@link LocalTrack} events to re-emit.\n     * @private\n     * @returns {Array<Array<string>>} events\n     */\n\n  }, {\n    key: '_getTrackEvents',\n    value: function _getTrackEvents() {\n      return _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_getTrackEvents', this).call(this).concat([['disabled', 'trackDisabled'], ['enabled', 'trackEnabled'], ['stopped', 'trackStopped']]);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '[LocalParticipant #' + this._instanceId + (this.sid ? ': ' + this.sid : '') + ']';\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_handleTrackSignalingEvents',\n    value: function _handleTrackSignalingEvents() {\n      var _this2 = this;\n\n      var log = this._log;\n\n      if (this.state === 'disconnected') {\n        return;\n      }\n\n      var signaling = this._signaling;\n\n      function localTrackDisabled(localTrack) {\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n\n        if (trackSignaling) {\n          trackSignaling.disable();\n          log.debug('Disabled the ' + trackClass(localTrack, true) + ':', localTrack.id);\n        }\n      }\n\n      function localTrackEnabled(localTrack) {\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n\n        if (trackSignaling) {\n          trackSignaling.enable();\n          log.debug('Enabled the ' + trackClass(localTrack, true) + ':', localTrack.id);\n        }\n      }\n\n      function localTrackStopped(localTrack) {\n        // NOTE(mroberts): We shouldn't need to check for `stop`, since DataTracks\n        // do not emit \"stopped\".\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n\n        if (trackSignaling) {\n          trackSignaling.stop();\n        }\n      }\n\n      this.on('trackDisabled', localTrackDisabled);\n      this.on('trackEnabled', localTrackEnabled);\n      this.on('trackStopped', localTrackStopped);\n\n      this._tracks.forEach(function (track) {\n        _this2._addLocalTrack(track, trackPriority.PRIORITY_STANDARD);\n\n        _this2._getOrCreateLocalTrackPublication(track).catch(function (error) {\n          // Just log a warning for now.\n          log.warn('Failed to get or create LocalTrackPublication for ' + track + ':', error);\n        });\n      });\n\n      var self = this;\n      signaling.on('stateChanged', function stateChanged(state) {\n        log.debug('Transitioned to state:', state);\n\n        if (state === 'disconnected') {\n          log.debug('Removing LocalTrack event listeners');\n          signaling.removeListener('stateChanged', stateChanged);\n          self.removeListener('trackDisabled', localTrackDisabled);\n          self.removeListener('trackEnabled', localTrackEnabled);\n          self.removeListener('trackStopped', localTrackStopped);\n\n          self._tracks.forEach(localTrackStopped);\n\n          log.info('LocalParticipant disconnected. Stopping ' + self._tracksToStop.size + ' automatically-acquired LocalTracks');\n\n          self._tracksToStop.forEach(function (track) {\n            track.stop();\n          });\n        } else if (state === 'connected') {\n          // NOTE(mmalavalli): Any transition to \"connected\" here is a result of\n          // successful signaling reconnection, and not a first-time establishment\n          // of the signaling connection.\n          log.info('reconnected'); // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n          // Do not signal  public events synchronously with lock held.\n\n          setTimeout(function () {\n            return self.emit('reconnected');\n          }, 0);\n        }\n      });\n    }\n    /**\n     * @private\n     * @param {LocalTrack} localTrack\n     * @returns {Promise<LocalTrackPublication>}\n     */\n\n  }, {\n    key: '_getOrCreateLocalTrackPublication',\n    value: function _getOrCreateLocalTrackPublication(localTrack) {\n      var localTrackPublication = getTrackPublication(this.tracks, localTrack);\n\n      if (localTrackPublication) {\n        return Promise.resolve(localTrackPublication);\n      }\n\n      var log = this._log;\n      var self = this;\n\n      var trackSignaling = this._signaling.getPublication(localTrack._trackSender);\n\n      if (!trackSignaling) {\n        return Promise.reject(new Error('Unexpected error: The ' + localTrack + ' cannot be published'));\n      }\n\n      function unpublish(publication) {\n        self.unpublishTrack(publication.track);\n      }\n\n      return new Promise(function (resolve, reject) {\n        function updated() {\n          var error = trackSignaling.error;\n\n          if (error) {\n            trackSignaling.removeListener('updated', updated);\n            log.warn('Failed to publish the ' + trackClass(localTrack, true) + ': ' + error.message);\n\n            self._removeTrack(localTrack, localTrack.id);\n\n            setTimeout(function () {\n              self.emit('trackPublicationFailed', error, localTrack);\n            });\n            reject(error);\n            return;\n          }\n\n          if (!self._tracks.has(localTrack.id)) {\n            trackSignaling.removeListener('updated', updated);\n            reject(new Error('The ' + localTrack + ' was unpublished'));\n            return;\n          }\n\n          var sid = trackSignaling.sid;\n\n          if (!sid) {\n            return;\n          }\n\n          trackSignaling.removeListener('updated', updated);\n          var options = {\n            log: log,\n            LocalAudioTrackPublication: self._LocalAudioTrackPublication,\n            LocalDataTrackPublication: self._LocalDataTrackPublication,\n            LocalVideoTrackPublication: self._LocalVideoTrackPublication\n          };\n          localTrackPublication = getTrackPublication(self.tracks, localTrack);\n\n          if (!localTrackPublication) {\n            localTrackPublication = asLocalTrackPublication(localTrack, trackSignaling, unpublish, options);\n\n            self._addTrackPublication(localTrackPublication);\n          }\n\n          if (self._signaling.state === 'connected') {\n            setTimeout(function () {\n              self.emit('trackPublished', localTrackPublication);\n            });\n          }\n\n          resolve(localTrackPublication);\n        }\n\n        trackSignaling.on('updated', updated);\n      });\n    }\n    /**\n     * Publishes a {@link LocalTrack} to the {@link Room}.\n     * @param {LocalTrack} localTrack - The {@link LocalTrack} to publish\n     * @param {LocalTrackPublishOptions} [options] - The {@link LocalTrackPublishOptions}\n     *   for publishing the {@link LocalTrack}\n     * @returns {Promise<LocalTrackPublication>} - Resolves with the corresponding\n     *   {@link LocalTrackPublication} if successful\n     * @throws {TypeError}\n     * @throws {RangeError}\n     * @example\n     * var Video = require('twilio-video');\n     *\n     * Video.connect(token, {\n     *   name: 'my-cool-room',\n     *   audio: true\n     * }).then(function(room) {\n     *   return Video.createLocalVideoTrack({\n     *     name: 'camera'\n     *   }).then(function(localVideoTrack) {\n     *     return room.localParticipant.publishTrack(localVideoTrack, {\n     *       priority: 'high'\n     *     });\n     *   });\n     * }).then(function(publication) {\n     *   console.log('The LocalTrack \"' + publication.trackName\n     *     + '\" was successfully published with priority \"'\n     *     * publication.priority + '\"');\n     * });\n    */\n\n    /**\n    * Publishes a MediaStreamTrack to the {@link Room}.\n    * @param {MediaStreamTrack} mediaStreamTrack - The MediaStreamTrack\n    *   to publish; if a corresponding {@link LocalAudioTrack} or\n    *   {@link LocalVideoTrack} has not yet been published, this method will\n    *   construct one\n    * @param {MediaStreamTrackPublishOptions} [options] - The options for publishing\n    *   the MediaStreamTrack\n    * @returns {Promise<LocalTrackPublication>} - Resolves with the corresponding\n    *   {@link LocalTrackPublication} if successful\n    * @throws {TypeError}\n    * @throws {RangeError}\n    * @example\n    * var Video = require('twilio-video');\n    *\n    * Video.connect(token, {\n    *   name: 'my-cool-room',\n    *   audio: true\n    * }).then(function(room) {\n    *   return navigator.mediaDevices.getUserMedia({\n    *     video: true\n    *   }).then(function(mediaStream) {\n    *     var mediaStreamTrack = mediaStream.getTracks()[0];\n    *     return room.localParticipant.publishTrack(mediaStreamTrack, {\n    *       name: 'camera',\n    *       priority: 'high'\n    *     });\n    *   });\n    * }).then(function(publication) {\n    *   console.log('The LocalTrack \"' + publication.trackName\n    *     + '\" was successfully published with priority \"'\n    *     * publication.priority + '\"');\n    * });\n    */\n\n  }, {\n    key: 'publishTrack',\n    value: function publishTrack(localTrackOrMediaStreamTrack, options) {\n      var trackPublication = getTrackPublication(this.tracks, localTrackOrMediaStreamTrack);\n\n      if (trackPublication) {\n        return Promise.resolve(trackPublication);\n      }\n\n      options = Object.assign({\n        log: this._log,\n        priority: trackPriority.PRIORITY_STANDARD,\n        LocalAudioTrack: this._LocalAudioTrack,\n        LocalDataTrack: this._LocalDataTrack,\n        LocalVideoTrack: this._LocalVideoTrack,\n        MediaStreamTrack: this._MediaStreamTrack\n      }, options);\n      var localTrack = void 0;\n\n      try {\n        localTrack = asLocalTrack(localTrackOrMediaStreamTrack, options);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n\n      var priorityValues = Object.values(trackPriority);\n\n      if (!priorityValues.includes(options.priority)) {\n        // eslint-disable-next-line new-cap\n        return Promise.reject(E.INVALID_VALUE('LocalTrackPublishOptions.priority', priorityValues));\n      }\n\n      var addedLocalTrack = this._addTrack(localTrack, localTrack.id, options.priority) || this._tracks.get(localTrack.id);\n\n      return this._getOrCreateLocalTrackPublication(addedLocalTrack);\n    }\n    /**\n     * Publishes multiple {@link LocalTrack}s to the {@link Room}.\n     * @param {Array<LocalTrack|MediaStreamTrack>} tracks - The {@link LocalTrack}s\n     *   to publish; for any MediaStreamTracks provided, if a corresponding\n     *   {@link LocalAudioTrack} or {@link LocalVideoTrack} has not yet been\n     *   published, this method will construct one\n     * @returns {Promise<Array<LocalTrackPublication>>} - The resulting\n     *   {@link LocalTrackPublication}s\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'publishTracks',\n    value: function publishTracks(tracks) {\n      if (!Array.isArray(tracks)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('tracks', 'Array of LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n      }\n\n      return Promise.all(tracks.map(this.publishTrack, this));\n    }\n  }, {\n    key: 'setBandwidthProfile',\n    value: function setBandwidthProfile() {\n      this._log.warn('setBandwidthProfile is not implemented yet and may be available in future versions of twilio-video.js');\n    }\n    /**\n     * Sets the {@link NetworkQualityVerbosity} for the {@link LocalParticipant} and\n     * {@link RemoteParticipant}s. It does nothing if Network Quality is not enabled\n     * while calling {@link connect}.\n     * @param {NetworkQualityConfiguration} networkQualityConfiguration - The new\n     *   {@link NetworkQualityConfiguration}; If either or both of the local and\n     *   remote {@link NetworkQualityVerbosity} values are absent, then the corresponding\n     *   existing values are retained\n     * @returns {this}\n     * @example\n     * // Update verbosity levels for both LocalParticipant and RemoteParticipants\n     * localParticipant.setNetworkQualityConfiguration({\n     *   local: 1,\n     *   remote: 2\n     * });\n     * @example\n     * // Update verbosity level for only the LocalParticipant\n     * localParticipant.setNetworkQualityConfiguration({\n     *   local: 1\n     * });\n     *  @example\n     * // Update verbosity level for only the RemoteParticipants\n     * localParticipant.setNetworkQualityConfiguration({\n     *   remote: 2\n     * });\n     */\n\n  }, {\n    key: 'setNetworkQualityConfiguration',\n    value: function setNetworkQualityConfiguration(networkQualityConfiguration) {\n      if ((typeof networkQualityConfiguration === 'undefined' ? 'undefined' : _typeof(networkQualityConfiguration)) !== 'object' || networkQualityConfiguration === null) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('networkQualityConfiguration', 'NetworkQualityConfiguration');\n      }\n\n      ['local', 'remote'].forEach(function (prop) {\n        if (prop in networkQualityConfiguration && (typeof networkQualityConfiguration[prop] !== 'number' || isNaN(networkQualityConfiguration[prop]))) {\n          // eslint-disable-next-line new-cap\n          throw E.INVALID_TYPE('networkQualityConfiguration.' + prop, 'number');\n        }\n      });\n\n      this._signaling.setNetworkQualityConfiguration(networkQualityConfiguration);\n\n      return this;\n    }\n    /**\n     * Set the {@link LocalParticipant}'s {@link EncodingParameters}.\n     * @param {?EncodingParameters} [encodingParameters] - The new\n     *   {@link EncodingParameters}; If null, then the bitrate limits are removed;\n     *   If not specified, then the existing bitrate limits are preserved\n     * @returns {this}\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'setParameters',\n    value: function setParameters(encodingParameters) {\n      if (typeof encodingParameters !== 'undefined' && (typeof encodingParameters === 'undefined' ? 'undefined' : _typeof(encodingParameters)) !== 'object') {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('encodingParameters', 'EncodingParameters, null or undefined');\n      }\n\n      if (encodingParameters) {\n        ['maxAudioBitrate', 'maxVideoBitrate'].forEach(function (prop) {\n          if (typeof encodingParameters[prop] !== 'undefined' && typeof encodingParameters[prop] !== 'number' && encodingParameters[prop] !== null) {\n            // eslint-disable-next-line new-cap\n            throw E.INVALID_TYPE('encodingParameters.' + prop, 'number, null or undefined');\n          }\n        });\n      } else if (encodingParameters === null) {\n        encodingParameters = {\n          maxAudioBitrate: null,\n          maxVideoBitrate: null\n        };\n      }\n\n      this._signaling.setParameters(encodingParameters);\n\n      return this;\n    }\n    /**\n     * Stops publishing a {@link LocalTrack} to the {@link Room}.\n     * @param {LocalTrack|MediaStreamTrack} track - The {@link LocalTrack}\n     *   to stop publishing; if a MediaStreamTrack is provided, this method\n     *   looks up the corresponding {@link LocalAudioTrack} or\n     *   {@link LocalVideoTrack} to stop publishing\n     * @returns {?LocalTrackPublication} - The corresponding\n     *   {@link LocalTrackPublication} if the {@link LocalTrack} was previously\n     *   published, null otherwise\n     * @throws {TypeError}\n    */\n\n  }, {\n    key: 'unpublishTrack',\n    value: function unpublishTrack(track) {\n      validateLocalTrack(track, {\n        LocalAudioTrack: this._LocalAudioTrack,\n        LocalDataTrack: this._LocalDataTrack,\n        LocalVideoTrack: this._LocalVideoTrack,\n        MediaStreamTrack: this._MediaStreamTrack\n      });\n\n      var localTrack = this._tracks.get(track.id);\n\n      if (!localTrack) {\n        return null;\n      }\n\n      var trackSignaling = this._signaling.getPublication(localTrack._trackSender);\n\n      trackSignaling.publishFailed(new Error('The ' + localTrack + ' was unpublished'));\n      localTrack = this._removeTrack(localTrack, localTrack.id);\n\n      if (!localTrack) {\n        return null;\n      }\n\n      var localTrackPublication = getTrackPublication(this.tracks, localTrack);\n\n      if (localTrackPublication) {\n        this._removeTrackPublication(localTrackPublication);\n      }\n\n      return localTrackPublication;\n    }\n    /**\n     * Stops publishing multiple {@link LocalTrack}s to the {@link Room}.\n     * @param {Array<LocalTrack|MediaStreamTrack>} tracks - The {@link LocalTrack}s\n     *   to stop publishing; for any MediaStreamTracks provided, this method looks\n     *   up the corresponding {@link LocalAudioTrack} or {@link LocalVideoTrack} to\n     *   stop publishing\n     * @returns {Array<LocalTrackPublication>} - The corresponding\n     *   {@link LocalTrackPublication}s that were successfully unpublished\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'unpublishTracks',\n    value: function unpublishTracks(tracks) {\n      var _this3 = this;\n\n      if (!Array.isArray(tracks)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('tracks', 'Array of LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n      }\n\n      return tracks.reduce(function (unpublishedTracks, track) {\n        var unpublishedTrack = _this3.unpublishTrack(track);\n\n        return unpublishedTrack ? unpublishedTracks.concat(unpublishedTrack) : unpublishedTracks;\n      }, []);\n    }\n  }]);\n\n  return LocalParticipant;\n}(Participant);\n/**\n * The {@link LocalParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event LocalParticipant#reconnected\n */\n\n/**\n * The {@link LocalParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event LocalParticipant#reconnecting\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalVideoTrack}'s dimensions changed.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} whose dimensions changed\n * @event LocalParticipant#trackDimensionsChanged\n */\n\n/**\n * A {@link LocalTrack} was disabled by the {@link LocalParticipant}.\n * @param {LocalTrack} track - The {@link LocalTrack} that was disabled\n * @event LocalParticipant#trackDisabled\n */\n\n/**\n * A {@link LocalTrack} was enabled by the {@link LocalParticipant}.\n * @param {LocalTrack} track - The {@link LocalTrack} that was enabled\n * @event LocalParticipant#trackEnabled\n */\n\n/**\n * A {@link LocalTrack} failed to publish. Check the error message for more\n * information.\n * @param {TwilioError} error - A {@link TwilioError} explaining why publication\n *   failed\n * @param {LocalTrack} localTrack - The {@link LocalTrack} that failed to\n *   publish\n * @event LocalParticipant#trackPublicationFailed\n */\n\n/**\n * A {@link LocalTrack} was successfully published.\n * @param {LocalTrackPublication} publication - The resulting\n *   {@link LocalTrackPublication} for the published {@link LocalTrack}\n * @event LocalParticipant#trackPublished\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalTrack}s started.\n * @param {LocalTrack} track - The {@link LocalTrack} that started\n * @event LocalParticipant#trackStarted\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalTrack}s stopped, either\n * because {@link LocalTrack#stop} was called or because the underlying\n * MediaStreamTrack ended).\n * @param {LocalTrack} track - The {@link LocalTrack} that stopped\n * @event LocalParticipant#trackStopped\n */\n\n/**\n * Outgoing media encoding parameters.\n * @typedef {object} EncodingParameters\n * @property {?number} [maxAudioBitrate] - Max outgoing audio bitrate (bps);\n *   If not specified, retains the existing bitrate limit; A <code>null</code> or a\n *   <code>0</code> value removes any previously set bitrate limit; This value is set\n *   as a hint for variable bitrate codecs, but will not take effect for fixed bitrate\n *   codecs; Based on our tests, Chrome, Firefox and Safari support a bitrate range of\n *   12000 bps to 256000 bps for Opus codec; This parameter has no effect on iSAC, PCMU\n *   and PCMA codecs\n * @property {?number} [maxVideoBitrate] - Max outgoing video bitrate (bps);\n *   If not specified, retains the existing bitrate limit; A <code>null</code> or\n *   a <code>0</code> value removes any previously set bitrate limit; This value is\n *   set as a hint for variable bitrate codecs, but will not take effect for fixed\n *   bitrate codecs; Based on our tests, Chrome, Firefox and Safari all seem to support\n *   an average bitrate range of 20000 bps (20 kbps) to 8000000 bps (8 mbps) for a\n *   720p VideoTrack.\n *   Note: this limit is not applied for screen share tracks published on Chrome.\n */\n\n/**\n * Options for publishing a {@link LocalTrack}.\n * @typedef {object} LocalTrackPublishOptions\n * @property {Track.Priority} [priority='standard'] - The priority with which the {@link LocalTrack}\n *   is to be published; In Group or Small Group Rooms, the appropriate bandwidth is\n *   allocated to the {@link LocalTrack} based on its {@link Track.Priority}; It has no\n *   effect in Peer-to-Peer Rooms; It defaults to \"standard\" when not provided\n */\n\n/**\n * Options for publishing a {@link MediaStreamTrack}.\n * @typedef {LocalTrackOptions} MediaStreamTrackPublishOptions\n * @property {Track.Priority} [priority='standard'] - The priority with which the {@link LocalTrack}\n *   is to be published; In Group or Small Group Rooms, the appropriate bandwidth is\n *   allocated to the {@link LocalTrack} based on its {@link Track.Priority}; It has no\n *   effect in Peer-to-Peer Rooms; It defaults to \"standard\" when not provided\n */\n\n/**\n * @private\n * @param {Map<Track.SID, LocalTrackPublication>} trackPublications\n * @param {LocalTrack|MediaStreamTrack} track\n * @returns {?LocalTrackPublication} trackPublication\n */\n\n\nfunction getTrackPublication(trackPublications, track) {\n  return Array.from(trackPublications.values()).find(function (trackPublication) {\n    return trackPublication.track === track || trackPublication.track.mediaStreamTrack === track;\n  }) || null;\n}\n\nmodule.exports = LocalParticipant;","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/localparticipant.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_require","require","MediaStreamTrack","_require2","asLocalTrack","asLocalTrackPublication","trackClass","_require3","E","typeErrors","trackPriority","_require4","validateLocalTrack","_require5","LocalAudioTrack","LocalDataTrack","LocalVideoTrack","LocalAudioTrackPublication","LocalDataTrackPublication","LocalVideoTrackPublication","Participant","LocalParticipant","_Participant","signaling","localTracks","options","assign","shouldStopLocalTracks","tracks","tracksToStop","Set","filter","localTrack","kind","_this","_LocalAudioTrack","_LocalDataTrack","_LocalVideoTrack","_MediaStreamTrack","_LocalAudioTrackPublication","_LocalDataTrackPublication","_LocalVideoTrackPublication","_tracksToStop","signalingRegion","_handleTrackSignalingEvents","_addTrack","track","id","priority","addedTrack","state","_addLocalTrack","_signaling","addTrack","_trackSender","name","_log","info","debug","_removeTrack","removedTrack","removeTrack","_getTrackEvents","concat","toString","_instanceId","sid","_this2","log","localTrackDisabled","trackSignaling","getPublication","disable","localTrackEnabled","enable","localTrackStopped","stop","on","_tracks","forEach","PRIORITY_STANDARD","_getOrCreateLocalTrackPublication","catch","error","warn","stateChanged","removeListener","size","setTimeout","emit","localTrackPublication","getTrackPublication","Promise","resolve","reject","Error","unpublish","publication","unpublishTrack","updated","message","has","_addTrackPublication","publishTrack","localTrackOrMediaStreamTrack","trackPublication","priorityValues","values","includes","INVALID_VALUE","addedLocalTrack","publishTracks","Array","isArray","INVALID_TYPE","all","map","setBandwidthProfile","setNetworkQualityConfiguration","networkQualityConfiguration","prop","isNaN","setParameters","encodingParameters","maxAudioBitrate","maxVideoBitrate","publishFailed","_removeTrackPublication","unpublishTracks","_this3","reduce","unpublishedTracks","unpublishedTrack","trackPublications","from","find","mediaStreamTrack","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('@twilio/webrtc'),\n    MediaStreamTrack = _require.MediaStreamTrack;\n\nvar _require2 = require('./util'),\n    asLocalTrack = _require2.asLocalTrack,\n    asLocalTrackPublication = _require2.asLocalTrackPublication,\n    trackClass = _require2.trackClass;\n\nvar _require3 = require('./util/constants'),\n    E = _require3.typeErrors,\n    trackPriority = _require3.trackPriority;\n\nvar _require4 = require('./util/validate'),\n    validateLocalTrack = _require4.validateLocalTrack;\n\nvar _require5 = require('./media/track/es5'),\n    LocalAudioTrack = _require5.LocalAudioTrack,\n    LocalDataTrack = _require5.LocalDataTrack,\n    LocalVideoTrack = _require5.LocalVideoTrack;\n\nvar LocalAudioTrackPublication = require('./media/track/localaudiotrackpublication');\nvar LocalDataTrackPublication = require('./media/track/localdatatrackpublication');\nvar LocalVideoTrackPublication = require('./media/track/localvideotrackpublication');\nvar Participant = require('./participant');\n\n/**\n * A {@link LocalParticipant} represents the local {@link Participant} in a\n * {@link Room}.\n * @extends Participant\n * @property {Map<Track.SID, LocalAudioTrackPublication>} audioTracks -\n *    The {@link LocalParticipant}'s {@link LocalAudioTrackPublication}s\n * @property {Map<Track.SID, LocalDataTrackPublication>} dataTracks -\n *    The {@link LocalParticipant}'s {@link LocalDataTrackPublication}s\n * @property {Map<Track.SID, LocalTrackPublication>} tracks -\n *    The {@link LocalParticipant}'s {@link LocalTrackPublication}s\n * @property {Map<Track.SID, LocalVideoTrackPublication>} videoTracks -\n *    The {@link LocalParticipant}'s {@link LocalVideoTrackPublication}s\n * @property {string} signalingRegion - The geographical region of the\n *     signaling edge the {@link LocalParticipant} is connected to.\n *\n * @emits RemoteParticipant#reconnected\n * @emits RemoteParticipant#reconnecting\n * @emits LocalParticipant#trackDimensionsChanged\n * @emits LocalParticipant#trackDisabled\n * @emits LocalParticipant#trackEnabled\n * @emits LocalParticipant#trackPublicationFailed\n * @emits LocalParticipant#trackPublished\n * @emits LocalParticipant#trackStarted\n * @emits LocalParticipant#trackStopped\n */\n\nvar LocalParticipant = function (_Participant) {\n  _inherits(LocalParticipant, _Participant);\n\n  /**\n   * Construct a {@link LocalParticipant}.\n   * @param {ParticipantSignaling} signaling\n   * @param {Array<LocalTrack>} localTracks\n   * @param {Object} options\n   */\n  function LocalParticipant(signaling, localTracks, options) {\n    _classCallCheck(this, LocalParticipant);\n\n    options = Object.assign({\n      LocalAudioTrack: LocalAudioTrack,\n      LocalVideoTrack: LocalVideoTrack,\n      LocalDataTrack: LocalDataTrack,\n      MediaStreamTrack: MediaStreamTrack,\n      LocalAudioTrackPublication: LocalAudioTrackPublication,\n      LocalVideoTrackPublication: LocalVideoTrackPublication,\n      LocalDataTrackPublication: LocalDataTrackPublication,\n      shouldStopLocalTracks: false,\n      tracks: localTracks\n    }, options);\n\n    var tracksToStop = options.shouldStopLocalTracks ? new Set(localTracks.filter(function (localTrack) {\n      return localTrack.kind !== 'data';\n    })) : new Set();\n\n    var _this = _possibleConstructorReturn(this, (LocalParticipant.__proto__ || Object.getPrototypeOf(LocalParticipant)).call(this, signaling, options));\n\n    Object.defineProperties(_this, {\n      _LocalAudioTrack: {\n        value: options.LocalAudioTrack\n      },\n      _LocalDataTrack: {\n        value: options.LocalDataTrack\n      },\n      _LocalVideoTrack: {\n        value: options.LocalVideoTrack\n      },\n      _MediaStreamTrack: {\n        value: options.MediaStreamTrack\n      },\n      _LocalAudioTrackPublication: {\n        value: options.LocalAudioTrackPublication\n      },\n      _LocalDataTrackPublication: {\n        value: options.LocalDataTrackPublication\n      },\n      _LocalVideoTrackPublication: {\n        value: options.LocalVideoTrackPublication\n      },\n      _tracksToStop: {\n        value: tracksToStop\n      },\n      signalingRegion: {\n        enumerable: true,\n        get: function get() {\n          return signaling.signalingRegion;\n        }\n      }\n    });\n\n    _this._handleTrackSignalingEvents();\n    return _this;\n  }\n\n  /**\n   * @private\n   * @param {LocalTrack} track\n   * @param {Track.ID} id\n   * @param {Track.Priority} priority\n   * @returns {?LocalTrack}\n   */\n\n\n  _createClass(LocalParticipant, [{\n    key: '_addTrack',\n    value: function _addTrack(track, id, priority) {\n      var addedTrack = _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_addTrack', this).call(this, track, id);\n      if (addedTrack && this.state !== 'disconnected') {\n        this._addLocalTrack(track, priority);\n      }\n      return addedTrack;\n    }\n\n    /**\n     * @private\n     * @param {LocalTrack} track\n     * @param {Track.Priority} priority\n     * @returns {void}\n     */\n\n  }, {\n    key: '_addLocalTrack',\n    value: function _addLocalTrack(track, priority) {\n      this._signaling.addTrack(track._trackSender, track.name, priority);\n      this._log.info('Added a new ' + trackClass(track, true) + ':', track.id);\n      this._log.debug(trackClass(track, true) + ':', track);\n    }\n\n    /**\n     * @private\n     * @param {LocalTrack} track\n     * @param {Track.ID} id\n     * @returns {?LocalTrack}\n     */\n\n  }, {\n    key: '_removeTrack',\n    value: function _removeTrack(track, id) {\n      var removedTrack = _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_removeTrack', this).call(this, track, id);\n      if (removedTrack && this.state !== 'disconnected') {\n        this._signaling.removeTrack(track._trackSender);\n        this._log.info('Removed a ' + trackClass(track, true) + ':', track.id);\n        this._log.debug(trackClass(track, true) + ':', track);\n      }\n      return removedTrack;\n    }\n\n    /**\n     * Get the {@link LocalTrack} events to re-emit.\n     * @private\n     * @returns {Array<Array<string>>} events\n     */\n\n  }, {\n    key: '_getTrackEvents',\n    value: function _getTrackEvents() {\n      return _get(LocalParticipant.prototype.__proto__ || Object.getPrototypeOf(LocalParticipant.prototype), '_getTrackEvents', this).call(this).concat([['disabled', 'trackDisabled'], ['enabled', 'trackEnabled'], ['stopped', 'trackStopped']]);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '[LocalParticipant #' + this._instanceId + (this.sid ? ': ' + this.sid : '') + ']';\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_handleTrackSignalingEvents',\n    value: function _handleTrackSignalingEvents() {\n      var _this2 = this;\n\n      var log = this._log;\n\n      if (this.state === 'disconnected') {\n        return;\n      }\n\n      var signaling = this._signaling;\n\n      function localTrackDisabled(localTrack) {\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n        if (trackSignaling) {\n          trackSignaling.disable();\n          log.debug('Disabled the ' + trackClass(localTrack, true) + ':', localTrack.id);\n        }\n      }\n\n      function localTrackEnabled(localTrack) {\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n        if (trackSignaling) {\n          trackSignaling.enable();\n          log.debug('Enabled the ' + trackClass(localTrack, true) + ':', localTrack.id);\n        }\n      }\n\n      function localTrackStopped(localTrack) {\n        // NOTE(mroberts): We shouldn't need to check for `stop`, since DataTracks\n        // do not emit \"stopped\".\n        var trackSignaling = signaling.getPublication(localTrack._trackSender);\n        if (trackSignaling) {\n          trackSignaling.stop();\n        }\n      }\n\n      this.on('trackDisabled', localTrackDisabled);\n      this.on('trackEnabled', localTrackEnabled);\n      this.on('trackStopped', localTrackStopped);\n\n      this._tracks.forEach(function (track) {\n        _this2._addLocalTrack(track, trackPriority.PRIORITY_STANDARD);\n        _this2._getOrCreateLocalTrackPublication(track).catch(function (error) {\n          // Just log a warning for now.\n          log.warn('Failed to get or create LocalTrackPublication for ' + track + ':', error);\n        });\n      });\n\n      var self = this;\n      signaling.on('stateChanged', function stateChanged(state) {\n        log.debug('Transitioned to state:', state);\n        if (state === 'disconnected') {\n          log.debug('Removing LocalTrack event listeners');\n          signaling.removeListener('stateChanged', stateChanged);\n          self.removeListener('trackDisabled', localTrackDisabled);\n          self.removeListener('trackEnabled', localTrackEnabled);\n          self.removeListener('trackStopped', localTrackStopped);\n          self._tracks.forEach(localTrackStopped);\n\n          log.info('LocalParticipant disconnected. Stopping ' + self._tracksToStop.size + ' automatically-acquired LocalTracks');\n          self._tracksToStop.forEach(function (track) {\n            track.stop();\n          });\n        } else if (state === 'connected') {\n          // NOTE(mmalavalli): Any transition to \"connected\" here is a result of\n          // successful signaling reconnection, and not a first-time establishment\n          // of the signaling connection.\n          log.info('reconnected');\n\n          // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n          // Do not signal  public events synchronously with lock held.\n          setTimeout(function () {\n            return self.emit('reconnected');\n          }, 0);\n        }\n      });\n    }\n\n    /**\n     * @private\n     * @param {LocalTrack} localTrack\n     * @returns {Promise<LocalTrackPublication>}\n     */\n\n  }, {\n    key: '_getOrCreateLocalTrackPublication',\n    value: function _getOrCreateLocalTrackPublication(localTrack) {\n      var localTrackPublication = getTrackPublication(this.tracks, localTrack);\n      if (localTrackPublication) {\n        return Promise.resolve(localTrackPublication);\n      }\n\n      var log = this._log;\n      var self = this;\n\n      var trackSignaling = this._signaling.getPublication(localTrack._trackSender);\n      if (!trackSignaling) {\n        return Promise.reject(new Error('Unexpected error: The ' + localTrack + ' cannot be published'));\n      }\n\n      function unpublish(publication) {\n        self.unpublishTrack(publication.track);\n      }\n\n      return new Promise(function (resolve, reject) {\n        function updated() {\n          var error = trackSignaling.error;\n          if (error) {\n            trackSignaling.removeListener('updated', updated);\n            log.warn('Failed to publish the ' + trackClass(localTrack, true) + ': ' + error.message);\n            self._removeTrack(localTrack, localTrack.id);\n            setTimeout(function () {\n              self.emit('trackPublicationFailed', error, localTrack);\n            });\n            reject(error);\n            return;\n          }\n\n          if (!self._tracks.has(localTrack.id)) {\n            trackSignaling.removeListener('updated', updated);\n            reject(new Error('The ' + localTrack + ' was unpublished'));\n            return;\n          }\n\n          var sid = trackSignaling.sid;\n          if (!sid) {\n            return;\n          }\n\n          trackSignaling.removeListener('updated', updated);\n\n          var options = {\n            log: log,\n            LocalAudioTrackPublication: self._LocalAudioTrackPublication,\n            LocalDataTrackPublication: self._LocalDataTrackPublication,\n            LocalVideoTrackPublication: self._LocalVideoTrackPublication\n          };\n\n          localTrackPublication = getTrackPublication(self.tracks, localTrack);\n\n          if (!localTrackPublication) {\n            localTrackPublication = asLocalTrackPublication(localTrack, trackSignaling, unpublish, options);\n            self._addTrackPublication(localTrackPublication);\n          }\n\n          if (self._signaling.state === 'connected') {\n            setTimeout(function () {\n              self.emit('trackPublished', localTrackPublication);\n            });\n          }\n          resolve(localTrackPublication);\n        }\n\n        trackSignaling.on('updated', updated);\n      });\n    }\n\n    /**\n     * Publishes a {@link LocalTrack} to the {@link Room}.\n     * @param {LocalTrack} localTrack - The {@link LocalTrack} to publish\n     * @param {LocalTrackPublishOptions} [options] - The {@link LocalTrackPublishOptions}\n     *   for publishing the {@link LocalTrack}\n     * @returns {Promise<LocalTrackPublication>} - Resolves with the corresponding\n     *   {@link LocalTrackPublication} if successful\n     * @throws {TypeError}\n     * @throws {RangeError}\n     * @example\n     * var Video = require('twilio-video');\n     *\n     * Video.connect(token, {\n     *   name: 'my-cool-room',\n     *   audio: true\n     * }).then(function(room) {\n     *   return Video.createLocalVideoTrack({\n     *     name: 'camera'\n     *   }).then(function(localVideoTrack) {\n     *     return room.localParticipant.publishTrack(localVideoTrack, {\n     *       priority: 'high'\n     *     });\n     *   });\n     * }).then(function(publication) {\n     *   console.log('The LocalTrack \"' + publication.trackName\n     *     + '\" was successfully published with priority \"'\n     *     * publication.priority + '\"');\n     * });\n    */ /**\n       * Publishes a MediaStreamTrack to the {@link Room}.\n       * @param {MediaStreamTrack} mediaStreamTrack - The MediaStreamTrack\n       *   to publish; if a corresponding {@link LocalAudioTrack} or\n       *   {@link LocalVideoTrack} has not yet been published, this method will\n       *   construct one\n       * @param {MediaStreamTrackPublishOptions} [options] - The options for publishing\n       *   the MediaStreamTrack\n       * @returns {Promise<LocalTrackPublication>} - Resolves with the corresponding\n       *   {@link LocalTrackPublication} if successful\n       * @throws {TypeError}\n       * @throws {RangeError}\n       * @example\n       * var Video = require('twilio-video');\n       *\n       * Video.connect(token, {\n       *   name: 'my-cool-room',\n       *   audio: true\n       * }).then(function(room) {\n       *   return navigator.mediaDevices.getUserMedia({\n       *     video: true\n       *   }).then(function(mediaStream) {\n       *     var mediaStreamTrack = mediaStream.getTracks()[0];\n       *     return room.localParticipant.publishTrack(mediaStreamTrack, {\n       *       name: 'camera',\n       *       priority: 'high'\n       *     });\n       *   });\n       * }).then(function(publication) {\n       *   console.log('The LocalTrack \"' + publication.trackName\n       *     + '\" was successfully published with priority \"'\n       *     * publication.priority + '\"');\n       * });\n       */\n\n  }, {\n    key: 'publishTrack',\n    value: function publishTrack(localTrackOrMediaStreamTrack, options) {\n      var trackPublication = getTrackPublication(this.tracks, localTrackOrMediaStreamTrack);\n      if (trackPublication) {\n        return Promise.resolve(trackPublication);\n      }\n\n      options = Object.assign({\n        log: this._log,\n        priority: trackPriority.PRIORITY_STANDARD,\n        LocalAudioTrack: this._LocalAudioTrack,\n        LocalDataTrack: this._LocalDataTrack,\n        LocalVideoTrack: this._LocalVideoTrack,\n        MediaStreamTrack: this._MediaStreamTrack\n      }, options);\n\n      var localTrack = void 0;\n      try {\n        localTrack = asLocalTrack(localTrackOrMediaStreamTrack, options);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n\n      var priorityValues = Object.values(trackPriority);\n      if (!priorityValues.includes(options.priority)) {\n        // eslint-disable-next-line new-cap\n        return Promise.reject(E.INVALID_VALUE('LocalTrackPublishOptions.priority', priorityValues));\n      }\n\n      var addedLocalTrack = this._addTrack(localTrack, localTrack.id, options.priority) || this._tracks.get(localTrack.id);\n\n      return this._getOrCreateLocalTrackPublication(addedLocalTrack);\n    }\n\n    /**\n     * Publishes multiple {@link LocalTrack}s to the {@link Room}.\n     * @param {Array<LocalTrack|MediaStreamTrack>} tracks - The {@link LocalTrack}s\n     *   to publish; for any MediaStreamTracks provided, if a corresponding\n     *   {@link LocalAudioTrack} or {@link LocalVideoTrack} has not yet been\n     *   published, this method will construct one\n     * @returns {Promise<Array<LocalTrackPublication>>} - The resulting\n     *   {@link LocalTrackPublication}s\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'publishTracks',\n    value: function publishTracks(tracks) {\n      if (!Array.isArray(tracks)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('tracks', 'Array of LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n      }\n      return Promise.all(tracks.map(this.publishTrack, this));\n    }\n  }, {\n    key: 'setBandwidthProfile',\n    value: function setBandwidthProfile() {\n      this._log.warn('setBandwidthProfile is not implemented yet and may be available in future versions of twilio-video.js');\n    }\n\n    /**\n     * Sets the {@link NetworkQualityVerbosity} for the {@link LocalParticipant} and\n     * {@link RemoteParticipant}s. It does nothing if Network Quality is not enabled\n     * while calling {@link connect}.\n     * @param {NetworkQualityConfiguration} networkQualityConfiguration - The new\n     *   {@link NetworkQualityConfiguration}; If either or both of the local and\n     *   remote {@link NetworkQualityVerbosity} values are absent, then the corresponding\n     *   existing values are retained\n     * @returns {this}\n     * @example\n     * // Update verbosity levels for both LocalParticipant and RemoteParticipants\n     * localParticipant.setNetworkQualityConfiguration({\n     *   local: 1,\n     *   remote: 2\n     * });\n     * @example\n     * // Update verbosity level for only the LocalParticipant\n     * localParticipant.setNetworkQualityConfiguration({\n     *   local: 1\n     * });\n     *  @example\n     * // Update verbosity level for only the RemoteParticipants\n     * localParticipant.setNetworkQualityConfiguration({\n     *   remote: 2\n     * });\n     */\n\n  }, {\n    key: 'setNetworkQualityConfiguration',\n    value: function setNetworkQualityConfiguration(networkQualityConfiguration) {\n      if ((typeof networkQualityConfiguration === 'undefined' ? 'undefined' : _typeof(networkQualityConfiguration)) !== 'object' || networkQualityConfiguration === null) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('networkQualityConfiguration', 'NetworkQualityConfiguration');\n      }\n      ['local', 'remote'].forEach(function (prop) {\n        if (prop in networkQualityConfiguration && (typeof networkQualityConfiguration[prop] !== 'number' || isNaN(networkQualityConfiguration[prop]))) {\n          // eslint-disable-next-line new-cap\n          throw E.INVALID_TYPE('networkQualityConfiguration.' + prop, 'number');\n        }\n      });\n      this._signaling.setNetworkQualityConfiguration(networkQualityConfiguration);\n      return this;\n    }\n\n    /**\n     * Set the {@link LocalParticipant}'s {@link EncodingParameters}.\n     * @param {?EncodingParameters} [encodingParameters] - The new\n     *   {@link EncodingParameters}; If null, then the bitrate limits are removed;\n     *   If not specified, then the existing bitrate limits are preserved\n     * @returns {this}\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'setParameters',\n    value: function setParameters(encodingParameters) {\n      if (typeof encodingParameters !== 'undefined' && (typeof encodingParameters === 'undefined' ? 'undefined' : _typeof(encodingParameters)) !== 'object') {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('encodingParameters', 'EncodingParameters, null or undefined');\n      }\n\n      if (encodingParameters) {\n        ['maxAudioBitrate', 'maxVideoBitrate'].forEach(function (prop) {\n          if (typeof encodingParameters[prop] !== 'undefined' && typeof encodingParameters[prop] !== 'number' && encodingParameters[prop] !== null) {\n            // eslint-disable-next-line new-cap\n            throw E.INVALID_TYPE('encodingParameters.' + prop, 'number, null or undefined');\n          }\n        });\n      } else if (encodingParameters === null) {\n        encodingParameters = { maxAudioBitrate: null, maxVideoBitrate: null };\n      }\n\n      this._signaling.setParameters(encodingParameters);\n      return this;\n    }\n\n    /**\n     * Stops publishing a {@link LocalTrack} to the {@link Room}.\n     * @param {LocalTrack|MediaStreamTrack} track - The {@link LocalTrack}\n     *   to stop publishing; if a MediaStreamTrack is provided, this method\n     *   looks up the corresponding {@link LocalAudioTrack} or\n     *   {@link LocalVideoTrack} to stop publishing\n     * @returns {?LocalTrackPublication} - The corresponding\n     *   {@link LocalTrackPublication} if the {@link LocalTrack} was previously\n     *   published, null otherwise\n     * @throws {TypeError}\n    */\n\n  }, {\n    key: 'unpublishTrack',\n    value: function unpublishTrack(track) {\n      validateLocalTrack(track, {\n        LocalAudioTrack: this._LocalAudioTrack,\n        LocalDataTrack: this._LocalDataTrack,\n        LocalVideoTrack: this._LocalVideoTrack,\n        MediaStreamTrack: this._MediaStreamTrack\n      });\n\n      var localTrack = this._tracks.get(track.id);\n      if (!localTrack) {\n        return null;\n      }\n\n      var trackSignaling = this._signaling.getPublication(localTrack._trackSender);\n      trackSignaling.publishFailed(new Error('The ' + localTrack + ' was unpublished'));\n\n      localTrack = this._removeTrack(localTrack, localTrack.id);\n      if (!localTrack) {\n        return null;\n      }\n\n      var localTrackPublication = getTrackPublication(this.tracks, localTrack);\n      if (localTrackPublication) {\n        this._removeTrackPublication(localTrackPublication);\n      }\n      return localTrackPublication;\n    }\n\n    /**\n     * Stops publishing multiple {@link LocalTrack}s to the {@link Room}.\n     * @param {Array<LocalTrack|MediaStreamTrack>} tracks - The {@link LocalTrack}s\n     *   to stop publishing; for any MediaStreamTracks provided, this method looks\n     *   up the corresponding {@link LocalAudioTrack} or {@link LocalVideoTrack} to\n     *   stop publishing\n     * @returns {Array<LocalTrackPublication>} - The corresponding\n     *   {@link LocalTrackPublication}s that were successfully unpublished\n     * @throws {TypeError}\n     */\n\n  }, {\n    key: 'unpublishTracks',\n    value: function unpublishTracks(tracks) {\n      var _this3 = this;\n\n      if (!Array.isArray(tracks)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_TYPE('tracks', 'Array of LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n      }\n\n      return tracks.reduce(function (unpublishedTracks, track) {\n        var unpublishedTrack = _this3.unpublishTrack(track);\n        return unpublishedTrack ? unpublishedTracks.concat(unpublishedTrack) : unpublishedTracks;\n      }, []);\n    }\n  }]);\n\n  return LocalParticipant;\n}(Participant);\n\n/**\n * The {@link LocalParticipant} has reconnected to the {@link Room} after a signaling connection disruption.\n * @event LocalParticipant#reconnected\n */\n\n/**\n * The {@link LocalParticipant} is reconnecting to the {@link Room} after a signaling connection disruption.\n * @event LocalParticipant#reconnecting\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalVideoTrack}'s dimensions changed.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} whose dimensions changed\n * @event LocalParticipant#trackDimensionsChanged\n */\n\n/**\n * A {@link LocalTrack} was disabled by the {@link LocalParticipant}.\n * @param {LocalTrack} track - The {@link LocalTrack} that was disabled\n * @event LocalParticipant#trackDisabled\n */\n\n/**\n * A {@link LocalTrack} was enabled by the {@link LocalParticipant}.\n * @param {LocalTrack} track - The {@link LocalTrack} that was enabled\n * @event LocalParticipant#trackEnabled\n */\n\n/**\n * A {@link LocalTrack} failed to publish. Check the error message for more\n * information.\n * @param {TwilioError} error - A {@link TwilioError} explaining why publication\n *   failed\n * @param {LocalTrack} localTrack - The {@link LocalTrack} that failed to\n *   publish\n * @event LocalParticipant#trackPublicationFailed\n */\n\n/**\n * A {@link LocalTrack} was successfully published.\n * @param {LocalTrackPublication} publication - The resulting\n *   {@link LocalTrackPublication} for the published {@link LocalTrack}\n * @event LocalParticipant#trackPublished\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalTrack}s started.\n * @param {LocalTrack} track - The {@link LocalTrack} that started\n * @event LocalParticipant#trackStarted\n */\n\n/**\n * One of the {@link LocalParticipant}'s {@link LocalTrack}s stopped, either\n * because {@link LocalTrack#stop} was called or because the underlying\n * MediaStreamTrack ended).\n * @param {LocalTrack} track - The {@link LocalTrack} that stopped\n * @event LocalParticipant#trackStopped\n */\n\n/**\n * Outgoing media encoding parameters.\n * @typedef {object} EncodingParameters\n * @property {?number} [maxAudioBitrate] - Max outgoing audio bitrate (bps);\n *   If not specified, retains the existing bitrate limit; A <code>null</code> or a\n *   <code>0</code> value removes any previously set bitrate limit; This value is set\n *   as a hint for variable bitrate codecs, but will not take effect for fixed bitrate\n *   codecs; Based on our tests, Chrome, Firefox and Safari support a bitrate range of\n *   12000 bps to 256000 bps for Opus codec; This parameter has no effect on iSAC, PCMU\n *   and PCMA codecs\n * @property {?number} [maxVideoBitrate] - Max outgoing video bitrate (bps);\n *   If not specified, retains the existing bitrate limit; A <code>null</code> or\n *   a <code>0</code> value removes any previously set bitrate limit; This value is\n *   set as a hint for variable bitrate codecs, but will not take effect for fixed\n *   bitrate codecs; Based on our tests, Chrome, Firefox and Safari all seem to support\n *   an average bitrate range of 20000 bps (20 kbps) to 8000000 bps (8 mbps) for a\n *   720p VideoTrack.\n *   Note: this limit is not applied for screen share tracks published on Chrome.\n */\n\n/**\n * Options for publishing a {@link LocalTrack}.\n * @typedef {object} LocalTrackPublishOptions\n * @property {Track.Priority} [priority='standard'] - The priority with which the {@link LocalTrack}\n *   is to be published; In Group or Small Group Rooms, the appropriate bandwidth is\n *   allocated to the {@link LocalTrack} based on its {@link Track.Priority}; It has no\n *   effect in Peer-to-Peer Rooms; It defaults to \"standard\" when not provided\n */\n\n/**\n * Options for publishing a {@link MediaStreamTrack}.\n * @typedef {LocalTrackOptions} MediaStreamTrackPublishOptions\n * @property {Track.Priority} [priority='standard'] - The priority with which the {@link LocalTrack}\n *   is to be published; In Group or Small Group Rooms, the appropriate bandwidth is\n *   allocated to the {@link LocalTrack} based on its {@link Track.Priority}; It has no\n *   effect in Peer-to-Peer Rooms; It defaults to \"standard\" when not provided\n */\n\n/**\n * @private\n * @param {Map<Track.SID, LocalTrackPublication>} trackPublications\n * @param {LocalTrack|MediaStreamTrack} track\n * @returns {?LocalTrackPublication} trackPublication\n */\n\n\nfunction getTrackPublication(trackPublications, track) {\n  return Array.from(trackPublications.values()).find(function (trackPublication) {\n    return trackPublication.track === track || trackPublication.track.mediaStreamTrack === track;\n  }) || null;\n}\n\nmodule.exports = LocalParticipant;"]},"metadata":{},"sourceType":"script"}