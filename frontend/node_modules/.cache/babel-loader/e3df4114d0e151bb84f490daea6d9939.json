{"ast":null,"code":"var _jsxFileName = \"/home/ascencion/sebrae_megahack/src/components/ParticipantTracks/ParticipantTracks.tsx\";\nimport React from 'react';\nimport Publication from '../Publication/Publication';\nimport usePublications from '../../hooks/usePublications/usePublications';\nimport useVideoContext from '../../hooks/useVideoContext/useVideoContext';\n\n/*\n *  The object model for the Room object (found here: https://www.twilio.com/docs/video/migrating-1x-2x#object-model) shows\n *  that Participant objects have TrackPublications, and TrackPublication objects have Tracks.\n *\n *  The React components in this application follow the same pattern. This ParticipantTracks component renders Publications,\n *  and the Publication component renders Tracks.\n */\nexport default function ParticipantTracks({\n  participant,\n  disableAudio,\n  enableScreenShare,\n  videoPriority\n}) {\n  const {\n    room\n  } = useVideoContext();\n  const publications = usePublications(participant);\n  const isLocal = participant === room.localParticipant;\n  let filteredPublications;\n\n  if (enableScreenShare && publications.some(p => p.trackName === 'screen')) {\n    filteredPublications = publications.filter(p => p.trackName !== 'camera');\n  } else {\n    filteredPublications = publications.filter(p => p.trackName !== 'screen');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, filteredPublications.map(publication => /*#__PURE__*/React.createElement(Publication, {\n    key: publication.kind,\n    publication: publication,\n    participant: participant,\n    isLocal: isLocal,\n    disableAudio: disableAudio,\n    videoPriority: videoPriority,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/src/components/ParticipantTracks/ParticipantTracks.tsx"],"names":["React","Publication","usePublications","useVideoContext","ParticipantTracks","participant","disableAudio","enableScreenShare","videoPriority","room","publications","isLocal","localParticipant","filteredPublications","some","p","trackName","filter","map","publication","kind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,OAAOC,eAAP,MAA4B,6CAA5B;;AASA;;;;;;;AAQA,eAAe,SAASC,iBAAT,CAA2B;AACxCC,EAAAA,WADwC;AAExCC,EAAAA,YAFwC;AAGxCC,EAAAA,iBAHwC;AAIxCC,EAAAA;AAJwC,CAA3B,EAKY;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAWN,eAAe,EAAhC;AACA,QAAMO,YAAY,GAAGR,eAAe,CAACG,WAAD,CAApC;AACA,QAAMM,OAAO,GAAGN,WAAW,KAAKI,IAAI,CAACG,gBAArC;AAEA,MAAIC,oBAAJ;;AAEA,MAAIN,iBAAiB,IAAIG,YAAY,CAACI,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,QAAvC,CAAzB,EAA2E;AACzEH,IAAAA,oBAAoB,GAAGH,YAAY,CAACO,MAAb,CAAoBF,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,QAAzC,CAAvB;AACD,GAFD,MAEO;AACLH,IAAAA,oBAAoB,GAAGH,YAAY,CAACO,MAAb,CAAoBF,CAAC,IAAIA,CAAC,CAACC,SAAF,KAAgB,QAAzC,CAAvB;AACD;;AAED,sBACE,0CACGH,oBAAoB,CAACK,GAArB,CAAyBC,WAAW,iBACnC,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,WAAW,CAACC,IADnB;AAEE,IAAA,WAAW,EAAED,WAFf;AAGE,IAAA,WAAW,EAAEd,WAHf;AAIE,IAAA,OAAO,EAAEM,OAJX;AAKE,IAAA,YAAY,EAAEL,YALhB;AAME,IAAA,aAAa,EAAEE,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAcD","sourcesContent":["import React from 'react';\nimport { Participant, Track } from 'twilio-video';\nimport Publication from '../Publication/Publication';\nimport usePublications from '../../hooks/usePublications/usePublications';\nimport useVideoContext from '../../hooks/useVideoContext/useVideoContext';\n\ninterface ParticipantTracksProps {\n  participant: Participant;\n  disableAudio?: boolean;\n  enableScreenShare?: boolean;\n  videoPriority?: Track.Priority | null;\n}\n\n/*\n *  The object model for the Room object (found here: https://www.twilio.com/docs/video/migrating-1x-2x#object-model) shows\n *  that Participant objects have TrackPublications, and TrackPublication objects have Tracks.\n *\n *  The React components in this application follow the same pattern. This ParticipantTracks component renders Publications,\n *  and the Publication component renders Tracks.\n */\n\nexport default function ParticipantTracks({\n  participant,\n  disableAudio,\n  enableScreenShare,\n  videoPriority,\n}: ParticipantTracksProps) {\n  const { room } = useVideoContext();\n  const publications = usePublications(participant);\n  const isLocal = participant === room.localParticipant;\n\n  let filteredPublications;\n\n  if (enableScreenShare && publications.some(p => p.trackName === 'screen')) {\n    filteredPublications = publications.filter(p => p.trackName !== 'camera');\n  } else {\n    filteredPublications = publications.filter(p => p.trackName !== 'screen');\n  }\n\n  return (\n    <>\n      {filteredPublications.map(publication => (\n        <Publication\n          key={publication.kind}\n          publication={publication}\n          participant={participant}\n          isLocal={isLocal}\n          disableAudio={disableAudio}\n          videoPriority={videoPriority}\n        />\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}