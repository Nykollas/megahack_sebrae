{"ast":null,"code":"/* globals webkitAudioContext, AudioContext */\n'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar NativeAudioContext = typeof AudioContext !== 'undefined' ? AudioContext : typeof webkitAudioContext !== 'undefined' ? webkitAudioContext : null;\n/**\n * @interface AudioContextFactoryOptions\n * @property {AudioContext} [AudioContext] - The AudioContext constructor\n */\n\n/**\n * {@link AudioContextFactory} ensures we construct at most one AudioContext\n * at a time, and that it is eventually closed when we no longer need it.\n * @property {AudioContextFactory} AudioContextFactory - The\n *   {@link AudioContextFactory} constructor\n */\n\nvar AudioContextFactory = function () {\n  /**\n   * @param {AudioContextFactoryOptions} [options]\n   */\n  function AudioContextFactory(options) {\n    _classCallCheck(this, AudioContextFactory);\n\n    options = Object.assign({\n      AudioContext: NativeAudioContext\n    }, options);\n    Object.defineProperties(this, {\n      _AudioContext: {\n        value: options.AudioContext\n      },\n      _audioContext: {\n        value: null,\n        writable: true\n      },\n      _holders: {\n        value: new Set()\n      },\n      AudioContextFactory: {\n        enumerable: true,\n        value: AudioContextFactory\n      }\n    });\n  }\n  /**\n   * Each call to {@link AudioContextFactory#getOrCreate} should be paired with a\n   * call to {@link AudioContextFactory#release}. Calling this increments an\n   * internal reference count.\n   * @param {*} holder - The object to hold a reference to the AudioContext\n   * @returns {?AudioContext}\n   */\n\n\n  _createClass(AudioContextFactory, [{\n    key: 'getOrCreate',\n    value: function getOrCreate(holder) {\n      if (!this._holders.has(holder)) {\n        this._holders.add(holder);\n\n        if (this._AudioContext && !this._audioContext) {\n          try {\n            this._audioContext = new this._AudioContext();\n          } catch (error) {// Do nothing;\n          }\n        }\n      }\n\n      return this._audioContext;\n    }\n    /**\n     * Decrement the internal reference count. If it reaches zero, close and destroy\n     * the AudioContext.\n     * @param {*} holder - The object that held a reference to the AudioContext\n     * @returns {void}\n     */\n\n  }, {\n    key: 'release',\n    value: function release(holder) {\n      if (this._holders.has(holder)) {\n        this._holders.delete(holder);\n\n        if (!this._holders.size && this._audioContext) {\n          this._audioContext.close();\n\n          this._audioContext = null;\n        }\n      }\n    }\n  }]);\n\n  return AudioContextFactory;\n}();\n\nmodule.exports = new AudioContextFactory();","map":{"version":3,"sources":["/home/ascencion/sebrae_megahack/node_modules/twilio-video/es5/webaudio/audiocontext.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","NativeAudioContext","AudioContext","webkitAudioContext","AudioContextFactory","options","assign","_AudioContext","value","_audioContext","_holders","Set","getOrCreate","holder","has","add","error","release","delete","size","close","module","exports"],"mappings":"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","sourcesContent":["/* globals webkitAudioContext, AudioContext */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NativeAudioContext = typeof AudioContext !== 'undefined' ? AudioContext : typeof webkitAudioContext !== 'undefined' ? webkitAudioContext : null;\n\n/**\n * @interface AudioContextFactoryOptions\n * @property {AudioContext} [AudioContext] - The AudioContext constructor\n */\n\n/**\n * {@link AudioContextFactory} ensures we construct at most one AudioContext\n * at a time, and that it is eventually closed when we no longer need it.\n * @property {AudioContextFactory} AudioContextFactory - The\n *   {@link AudioContextFactory} constructor\n */\n\nvar AudioContextFactory = function () {\n  /**\n   * @param {AudioContextFactoryOptions} [options]\n   */\n  function AudioContextFactory(options) {\n    _classCallCheck(this, AudioContextFactory);\n\n    options = Object.assign({\n      AudioContext: NativeAudioContext\n    }, options);\n    Object.defineProperties(this, {\n      _AudioContext: {\n        value: options.AudioContext\n      },\n      _audioContext: {\n        value: null,\n        writable: true\n      },\n      _holders: {\n        value: new Set()\n      },\n      AudioContextFactory: {\n        enumerable: true,\n        value: AudioContextFactory\n      }\n    });\n  }\n\n  /**\n   * Each call to {@link AudioContextFactory#getOrCreate} should be paired with a\n   * call to {@link AudioContextFactory#release}. Calling this increments an\n   * internal reference count.\n   * @param {*} holder - The object to hold a reference to the AudioContext\n   * @returns {?AudioContext}\n   */\n\n\n  _createClass(AudioContextFactory, [{\n    key: 'getOrCreate',\n    value: function getOrCreate(holder) {\n      if (!this._holders.has(holder)) {\n        this._holders.add(holder);\n        if (this._AudioContext && !this._audioContext) {\n          try {\n            this._audioContext = new this._AudioContext();\n          } catch (error) {\n            // Do nothing;\n          }\n        }\n      }\n      return this._audioContext;\n    }\n\n    /**\n     * Decrement the internal reference count. If it reaches zero, close and destroy\n     * the AudioContext.\n     * @param {*} holder - The object that held a reference to the AudioContext\n     * @returns {void}\n     */\n\n  }, {\n    key: 'release',\n    value: function release(holder) {\n      if (this._holders.has(holder)) {\n        this._holders.delete(holder);\n        if (!this._holders.size && this._audioContext) {\n          this._audioContext.close();\n          this._audioContext = null;\n        }\n      }\n    }\n  }]);\n\n  return AudioContextFactory;\n}();\n\nmodule.exports = new AudioContextFactory();"]},"metadata":{},"sourceType":"script"}